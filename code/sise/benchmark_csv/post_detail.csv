PostId,PostTypeId,ParentId,AcceptedAnswerId,Score,ViewCount,OwnerUserId,Title,Body,Tags,CreationDate
60544413,2,60478749,,1,,5675325.0,,"<p>Yes you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">GradientTape</a>. The purpose of <code>tf.GradientTape</code> is to record operations for automatic differentiation or for computing the gradient of an operation or computation with respect to its input variables.</p>

<p>According to <a href=""https://rads.stackoverflow.com/amzn/click/com/B07VWGN8NB"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">What's New in TensorFlow 2.0</a>, to first implement the simple training of a model with tf.GradientTape, call the forward pass on the input tensor inside the tf.GradentTape context manager and then compute the loss function. <strong>This ensures that all of the computations will be recorded on the gradient tape.</strong></p>

<p>Then, compute the gradients with regard to all of the trainable variables in the model. Once the gradients are computed, any desired gradient clipping, normalization, or transformation can be performed before passing them to the optimizer to apply them to the model variables. Take a look at the following example:</p>

<pre><code>NUM_EXAMPLES = 2000

input_x = tf.random.normal([NUM_EXAMPLES])
noise = tf.random.normal([NUM_EXAMPLES])
input_y = input_x * 5 + 2 + noise

def loss_fn(model, inputs, targets):
  error = model(inputs) - targets
  return tf.reduce_mean(tf.square(error))

def gradients(model, inputs, targets):
  with tf.GradientTape() as tape:
    loss_value = loss_fn(model, inputs, targets)
  return tape.gradient(loss_value, model.trainable_variables)

model = tf.keras.Sequential(tf.keras.layers.Dense(1))
optimizer = tf.keras.optimizers.Adam(learning_rate=0.01)
print(""Initial loss: {:.3f}"".format(loss_fn(model, input_x, input_y)))
for i in range(500):
  grads = gradients(model, input_x, input_y)
  optimizer.apply_gradients(zip(grads, model.trainable_variables))
  if i % 20 == 0:
    print(""Loss at step {:03d}: {:.3f}"".format(i, loss_fn(model, input_x, input_y)))
print(""Final loss: {:.3f}"".format(loss(model, input_x, input_y)))
print(""W = {}, B = {}"".format(*model.trainable_variables))
</code></pre>
",,2020-03-05 11:31:02
60597779,2,60597573,,0,,906265.0,,"<p>Since Kotlin 1.3 you can use <a href=""https://kotlinlang.org/docs/reference/whatsnew13.html#unsigned-integers"" rel=""nofollow noreferrer"">unsigned integers ()</a> as <code>Int</code> is signed (therefore hexadecimal <code>0xFF000000</code> is out of range). Now you could try:</p>

<pre><code>// UInt instead of Int
// u suffix at the end of number
val m:UInt = 0xFF000000u
</code></pre>
",,2020-03-09 09:33:26
60601828,2,60601637,,4,,3220910.0,,"<p>It is not a bug, it's based on rounding errors.</p>

<p>Executing the following code:</p>

<pre><code>val d = 0.08
val f = 0.08F
val fd = f.toDouble()
print(""%.20f"".format(d) + ""\n"")
print(""%.20f"".format(f) + ""\n"")
print(""%.20f"".format(fd))
</code></pre>

<p>gives you the following output:</p>

<pre><code>0.08000000000000000000
0.07999999821186066000
0.07999999821186066000
</code></pre>

<p>So as you can see, 0.08 double value is (till the 20th decimal place) exact to 0.08 while the float is (due to lower precision) not able to be represented as exact so it contains a rounded value, which is slightly lower than 0.08</p>

<p>Converting your approximate (a little lower) 0.08 float to a double doesn't increase your precision, you still have your rounding error of the float, which results in being the converted double to be a little bit lower.</p>

<p>// Edit: If you are interested in how exactly floating point numbers work, I would recommend you to have a look at the <a href=""https://en.wikipedia.org/wiki/Floating-point_arithmetic"" rel=""nofollow noreferrer"">wikipedia article on floating point arithmetic</a> and at this question: <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken/588014#588014"">Is floating point math broken?</a></p>
",,2020-03-09 13:43:09
60603798,2,59646275,,2,,7122959.0,,"<p>The problem is essentially the way you use the distribution strategy scope. In TF 2.0, you do not pass the distribution strategy to the compile method. Instead, you need to build your model and compile it inside of the distribution strategy scope. Note that the call to model.fit(...) should not be inside the distribution strategy scope. For example, this is a redacted version of your colab code which should solve your problem:</p>

<pre><code>...

strategy = tf.distribute.MirroredStrategy()

with strategy.scope():
  input_img = layers.Input(shape=IMG_SIZE)
  model = layers.Conv2D(32, (3, 3), padding='same')(input_img)
  ... # model definition
  output_img = layers.Activation('softmax')(model)

  model = models.Model(input_img, output_img)

  model.compile(optimizers.Adam(lr=0.0001), loss='categorical_crossentropy', metrics=[""accuracy""])

...

history = model.fit(...)
</code></pre>

<p>Please see the <a href=""https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_keras"" rel=""nofollow noreferrer"">Using tf.distribute.Strategy with Keras</a> section of the <a href=""https://www.tensorflow.org/guide/distributed_training"" rel=""nofollow noreferrer"">Distributed training with TensorFlow</a> guide for more information.</p>
",,2020-03-09 15:33:18
60799059,2,60795375,,1,,1970266.0,,"<p>There is no <code>'model'</code> parameter in the saved checkpoint. If you look in <code>train_rcnn.py:106</code>:</p>

<pre class=""lang-py prettyprint-override""><code>torch.save(model.state_dict(), os.path.join(args.output_dir, 'model_{}.pth'.format(epoch)))
</code></pre>

<p>you see that they save just the model parameters. It should've been something like:</p>

<pre class=""lang-py prettyprint-override""><code>torch.save({
    ""model"": model.state_dict(),
    ""optimizer"": optimizer.state_dict(),
    ""lr_scheduler"": lr_scheduler.state_dict()
}, os.path.join(args.output_dir, 'model_{}.pth'.format(epoch)))
</code></pre>

<p>so then after loading you get a dictionary with <code>'model'</code>, and the other parameters they appear to be wanting to keep.</p>

<p>This seems to be a bug in their code.</p>
",,2020-03-22 12:01:53
60876779,2,60876307,,1,,10134209.0,,"<p>Kotlin provides a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/is-defined.html"" rel=""nofollow noreferrer"">Char.isDefined()</a> extension method that seems to do just what you want (or at least, the direct opposite).</p>

<p>So you can do e.g.:</p>

<pre><code>val c = 10000.toChar()
if (!c.isDefined())
    throw Exception(""Char is not defined"")
</code></pre>

<p>(This function is available in Kotlin/JVM and Kotlin/Native, but not in Kotlin/JS yet.)</p>
",,2020-03-26 21:54:37
60993438,2,60993116,,0,,7178615.0,,"<p>First of all you should not mix Kotlin versions. Your plugin uses 1.3.61 but your sdk refers to 1.2.71. Consider using a property:</p>

<pre><code>&lt;properties&gt;
    &lt;kotlin.version&gt;1.3.61&lt;/kotlin.version&gt;
&lt;/properties&gt;
...
&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
        &lt;artifactId&gt;kotlin-stdlib-jdk8&lt;/artifactId&gt;
        &lt;version&gt;${kotlin.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
        &lt;artifactId&gt;kotlin-reflect&lt;/artifactId&gt;
        &lt;version&gt;${kotlin.version}&lt;/version&gt;
    &lt;/dependency&gt;
    ....
&lt;/dependencies&gt;
...
&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
            &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;${kotlin.version}&lt;/version&gt;
            ...
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
",,2020-04-02 14:03:26
61063550,2,61063367,,1,,3197668.0,,"<p>Yes, the model trained on a single GPU and multiple GPUS (on a single machine) is the same. That is, the variables in the model are <a href=""https://www.tensorflow.org/guide/distributed_training#mirroredstrategy"" rel=""nofollow noreferrer"">replicated and in sync</a> on all GPU's, as per the documentation.</p>
",,2020-04-06 15:41:43
61095341,2,61093554,,3,,4288334.0,,"<p>As @Madhu Bhat mentioned  in comment above, your variable 'x' is still nullable.
You may use your function simply like this:</p>

<pre><code>x.test().length
</code></pre>

<p>Otherwise  you can check for null by following inline function and then perform any functions directly on the variable. (Note the usage of 'contract' and annotations '@ExperimentalContracts')</p>

<pre><code>@ExperimentalContracts
fun &lt;T&gt; T?.notNull(): Boolean {

    contract {
        returns(true) implies (this@notNull != null)
    }

    return this != null
}
</code></pre>

<p>Now you can use this function like this</p>

<pre><code>if(x.notNull()){
  x.length
}
</code></pre>

<p>But its not seems so useful if your using this function just to check nullability.</p>

<p>Check here to know more  about Kotlin <a href=""https://pspdfkit.com/blog/2018/kotlin-contracts/"" rel=""nofollow noreferrer"">contracts</a> </p>
",,2020-04-08 07:24:55
61133468,2,61133353,,2,,318758.0,,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",,2020-04-10 03:11:01
61136519,2,61131743,,1,,6117017.0,,"<p>The best solution for your case is to use <code>tf.data.Dataset()</code>.</p>

<p>While it may take a relatively short time to accustom to it, it is the recommended way to load your data and use model.fit().</p>

<p>You can consult the documentation here: <a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/data/Dataset</a></p>

<p>Is is new, fast, beautifully designed and easily extensible.</p>

<p>For instance, for your problem you may want to use <code>tf.data.Dataset.from_tensor_slices()</code>; I will leave you discover its features :D.</p>
",,2020-04-10 08:23:17
61262458,2,61261285,,2,,13325691.0,,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",,2020-04-17 00:55:53
61330071,2,61329882,,1,,8953965.0,,"<p>To access notifications, you can use the NotificationListenerService. The documents on this is located at: <a href=""https://developer.android.com/reference/android/service/notification/NotificationListenerService"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/service/notification/NotificationListenerService</a></p>

<p>For the implementation of this class, there has already been discussed within this link: <a href=""https://stackoverflow.com/questions/17926236/notificationlistenerservice-implementation"">NotificationListenerService Implementation</a> (See the accepted answer for a link to an example)</p>
",,2020-04-20 19:04:36
61529374,2,61529164,,1,,10625375.0,,"<p>Create a function to check for network connectivity and then use it in displaying.</p>

<pre><code>fun Context.isConnectedToNetwork(): Boolean {
  val connectivityManager = this.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager?
  return connectivityManager?.activeNetworkInfo?.isConnectedOrConnecting() ?: false
}
</code></pre>

<p>Then use the function with an <code>if</code> statment to display or not</p>

<pre><code>if (context.isConnectedToNetwork()) {
  // Show the webview link
} else {
  // dont show webview link
}
</code></pre>

<p>Official docs: <a href=""https://developer.android.com/training/monitoring-device-state/connectivity-status-type"" rel=""nofollow noreferrer"">https://developer.android.com/training/monitoring-device-state/connectivity-status-type</a></p>
",,2020-04-30 17:32:06
61596461,2,61596378,,1,,3395198.0,,"<p>You should get <a href=""https://developer.android.com/reference/android/content/Context"" rel=""nofollow noreferrer""><strong><code>Context</code></strong></a> at first   </p>

<blockquote>
  <p>Interface to global information about an application environment.
  This is an abstract class whose implementation is provided by the
  Android system.</p>
</blockquote>

<pre><code>    private Context context;  

   // Adapter
    public YourAdapter(Context context,..) {  
       this.context = context;  
    }  
</code></pre>
",,2020-05-04 16:00:49
61597578,2,61574012,,3,,5981165.0,,"<p>After some tinkering I replaced the line:</p>

<pre><code>TypedArray ta = getContext().obtainStyledAttributes(R.styleable.customView);
</code></pre>

<p>with</p>

<pre><code>TypedArray ta = getContext().obtainStyledAttributes(attrs,R.styleable.customView);
</code></pre>

<p>and the problem was solved.
Alternatively I also found out that if the TypedArray ever failed me again it is possible to get values directly from attrs, with:</p>

<pre><code>attrs.getValue(int index) 
</code></pre>

<p>It must be noted that the index of the attribute in the attribute set is different than the index in the typed array, as it includes also standard android attributes. The index can be checked with:</p>

<pre><code>            for (int i = 0; i &lt; attrs.getAttributeCount(); i++) {
                Log.d(""ATTRS"", i+ "": "" + attrs.getAttributeName(i)+"""");
            }
</code></pre>
",,2020-05-04 16:58:32
61622027,2,61621599,,2,,506796.0,,"<p>Add an OnClickListener to the parent view that toggles the CheckBox. The OnCheckedChangeListener will still get called in response to the parent view's click listener changing the checked state:</p>

<pre><code>itemView.setOnClickListener {
    itemView.checkBox.isChecked = !itemView.checkBox.isChecked
}
</code></pre>

<p>To get the parent view to look and behave correctly, you can add these to its element in the XML:</p>

<pre><code>android:background=""?android:attr/selectableItemBackground""
android:clipToPadding=""false""
android:focusable=""true""
</code></pre>

<p>IIRC, adding the OnCheckedChangeListener to the CheckBox automatically makes it clickable. You might consider setting <code>itemView.checkBox.isClickable = false</code> right after setting the listener so your whole list item will show the ripple effect even if you tap over the CheckBox.</p>

<p>Side note: Don't forget to set the initial state of the CheckBox in <code>onBindView</code>:</p>

<pre><code>itemView.checkBox.isChecked = item.isChecked
</code></pre>

<p>It will have an unpredictable state when it scrolls onto the screen, otherwise!</p>
",,2020-05-05 20:03:04
61709254,2,60010298,,1,,1519361.0,,"<blockquote>
  <p>this is my try with kotlin only</p>
</blockquote>

<pre><code>   val  camelCaseString = ""thisIsCamelCase""
    val snakeCaseString = camelCaseString.map {
        if (it.isUpperCase()){
            ""_${it.toLowerCase()}""
        }else
{""$it""}
    }
.joinToString(separator = """")
System.out.println(""here is your snake string: $snake_case_string"")
</code></pre>

<blockquote>
  <p>here is your snake string: this_is_camel_case</p>
  
  <p>convert from snake to camel</p>
</blockquote>

<pre><code>val snakeCaseString = ""snake_case_string""
val camelCase = StringBuilder()
var prevChar = '$'
snakeCaseString.forEach {
if(prevChar.equals('_')){
    camelCase.append(it.toUpperCase())
}else if(!it.equals('_')){
    camelCase.append(it)
}
    prevChar = it
}

System.out.println(camelCase.toString())
</code></pre>

<hr>

<blockquote>
  <p>snakeCaseString</p>
</blockquote>
",,2020-05-10 08:40:03
61828672,2,61828169,,6,,10134209.0,,"<p>Threading and synchronisation are JVM features, not specific to Kotlin.  If you can follow Java, there are many resources out there which can explain them fully.  But the short answer is: they're quite low-level, and tricky to get right, so please exercise due caution.  And if a higher-level construction (work queues/executors, map/reduce, actors...) or immutable objects can do what you need, life will be easier if you use that instead!</p>

<p>But here're the basics.  First, in the JVM, every object has a lock, which can be used to control access to something.  (That something is usually the object the lock belongs to, but need not be...)  The lock can be taken by the code in a particular thread; while it's holding that lock, any <em>other</em> thread which tries to take the lock will block until the first thread releases it.</p>

<p>And that's pretty much all there is!  The <code>synchronised</code> keyword (actually a function) is used to claim a lock; either that belonging to a given object or (if none's given) 'this' object.</p>

<p>Note that <em>holding a lock prevents other threads holding the lock; it doesn't prevent anything else</em>.  So I'm afraid your expectation is wrong.  That's why you're seeing the threads happily running simultaneously.</p>

<p>Ideally, every class would be written with some consideration for how it interacts with multithreading; it could document itself as 'immutable' (no mutable state to worry about), 'thread-safe' (safe to call from multiple threads simultaneously), 'conditionally thread-safe' (safe to call from multiple threads if certain patterns are adhered to), 'thread-compatible' (taking no special precautions but callers can do their own synchronisation to make it safe), or 'thread-hostile' (impossible to use from multiple threads).  But in practice, most don't.</p>

<p>In fact, most turn out to be thread-compatible; and that applies to much of the Java and Kotlin collection classes.  So you can do your own synchronisation (as per your <code>synchronized</code> block); but you have to take care to synchronise <em>every</em> possible access to the list -- otherwise, a race condition could leave your list in an inconsistent state.</p>

<p>(And that can mean more than just a dodgy value somewhere.  I had a server app with a thread that got stuck in a busy-loop -- chewing up 100% of a CPU but never continuing with the rest of the code -- because I had one thread update a HashMap while another thread was reading it, and I'd missed the synchronisation on one of those.  Most embarrassing.)</p>

<p>So, as I said, if you can use a higher-level construction instead, your life will be easier!</p>
",,2020-05-15 21:30:58
61885247,2,61884176,,1,,13544655.0,,"<p>Name scopes are entirely for naming convenience. It has nothing to do with python scope. Whenever you perform an operation in tensorflow it will get a name according to some state maintained by tensorflow, but if you want those operations to be named clearly for your use case then name scope is used. Any operation within the name scope will have the provided value appended in it's name, there is no use more than that. Regarding the implementation, I highly doubt that those scope implementations will be exposed in python. All tensor creation operations are executed by C++ backend of tensorflow, so scopes should be mostly handled by them</p>
",,2020-05-19 07:15:30
62007162,2,62006767,,0,,11804729.0,,"<p>Android studio does not work that way. You cannot set the positions of views(items) by dragging them and placing them. You will have to set the constraints on the attribute tab. You can find the attribute tab at the top left corner. It is visible in the picture you uploaded. Click on that and the attributes window will open. </p>

<p>Then, when you click on a view, there is a square that appears in the attribute window. That square has 4 <code>+</code> signs around it. You have to click on one of the left or right <code>+</code> signs and enter a number. That would determine the horizontal position (distance from left or right margin) of the view. 
Similarly, set the vertical position by clicking on to our bottom <code>+</code>.</p>

<p>This is the method used to set the position of views graphically. There is a way to set them in the <code>xml</code> code. I guess you are not familiar with it. You will get to know how to do it in<code>xml</code> as you go on with Android development.</p>

<p>You can also set the position of a view with reference to other views instead of the margins. Please watch <a href=""https://youtu.be/4N4bCdyGcUc"" rel=""nofollow noreferrer"">this video</a> to know more about constraints.</p>
",,2020-05-25 16:59:03
62020741,2,62019757,,0,,2212770.0,,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",,2020-05-26 11:06:10
62032216,2,62030209,,0,,12681044.0,,"<p>What I will suggest is to use ConnectivityManager to monitor connectivity status by implementing the following codes </p>

<pre><code>ConnectivityManager cm =
        (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);

NetworkInfo activeNetwork = cm.getActiveNetworkInfo();


boolean isConnected = activeNetwork != null &amp;&amp;
                      activeNetwork.isConnected();
</code></pre>

<p>For more information please check the android Developer guide <a href=""https://developer.android.com/training/monitoring-device-state/connectivity-status-type"" rel=""nofollow noreferrer"">here</a> </p>
",,2020-05-26 22:08:45
62090434,2,62090265,,1,,2505071.0,,"<p>Kotlin is different language and has different array initialization for example you could use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/array-of.html"" rel=""nofollow noreferrer""><code>arrayOf</code></a> and also primitive method like <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/int-array-of.html"" rel=""nofollow noreferrer""><code>intArrayOf</code></a> for integers</p>

<pre><code>arrayOf(intArrayOf(1,0), intArrayOf(0,1))
</code></pre>
",,2020-05-29 16:23:39
62095513,2,62095429,,1,,9164071.0,,"<p>Your activity must extend <code>androidx.fragment.app.FragmentActivity</code>.</p>

<p>From the <a href=""https://developer.android.com/reference/androidx/fragment/app/FragmentActivity"" rel=""nofollow noreferrer"">documentation</a>,</p>

<blockquote>
  <p>Base class for activities that want to use the support-based
  Fragments.</p>
</blockquote>

<p>Also from <a href=""https://developer.android.com/reference/androidx/fragment/app/Fragment"" rel=""nofollow noreferrer"">Fragment's documentation</a>,</p>

<blockquote>
  <ul>
  <li><p>Your activity must extend FragmentActivity</p></li>
  <li><p>You must call FragmentActivity.getSupportFragmentManager() to get the    FragmentManager</p></li>
  </ul>
</blockquote>
",,2020-05-29 22:31:46
62098444,2,62098164,,1,,1971925.0,,"<p>I don't think there is something wrong but something that might help is just using one namespace for all your custom attributes.
In your parent container you are using the app namespace</p>

<pre><code>xmlns:app=""http://schemas.android.com/apk/res-auto""
</code></pre>

<p>So, you need to use that namespace in the cardview attributes. Just replace <em>card_view</em> with <em>app</em> and remove the namespace in your CardView.</p>

<pre><code>&lt;android.support.v7.widget.CardView
    android:id=""@+id/card_view""
    android:layout_gravity=""center""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:layout_margin=""32dp""
    app:cardCornerRadius=""8dp""
    app:cardElevation=""16dp""&gt;
</code></pre>
",,2020-05-30 05:56:37
62119334,2,62115925,,3,,1506104.0,,"<p>Here is the result of my test.</p>

<p>This is my assets/ inside the AAR:</p>

<pre><code>-assets/
 -a.xml
 -b.xml
</code></pre>

<p>This is my assets/ inside my android project that depends on the AAR above:</p>

<pre><code>-assets/
 -b.xml
 -c.xml
</code></pre>

<p>The resulting assets/ in my APK is below:</p>

<pre><code>-assets/
 -a.xml (from AAR)
 -b.xml (from my project)
 -c.xml (from my project)
</code></pre>
",,2020-05-31 16:37:33
62183894,2,62181095,,0,,1491707.0,,"<p>Android Things is based on Android. As such, Ethernet, Wi-Fi, and Bluetooth features use the same APIs and capabilities as <a href=""https://developer.android.com/reference"" rel=""nofollow noreferrer"">the standard Android platform</a>. For Bluetooth, the platform provides <a href=""https://developer.android.com/things/sdk/apis/bluetooth"" rel=""nofollow noreferrer"">some additional APIs</a> for features like pairing.</p>
",,2020-06-03 22:38:44
62196033,2,62193183,,0,,209103.0,,"<p>I don't think you have that level of control over how Android displays/plays incoming notification messages.</p>

<p>The only approach I can think of is taking full control of the display of the messages in your own application code, by using data messages instead of notification messages.</p>

<p><em>Reminder: Firebase Cloud Messaging has two message types: notification messages, and data messages. Notifications messages are automatically handled/displayed by the OS when your app is not active, while data messages are always delivered to your application code.</em></p>

<p>From within your application code, you can then use the <a href=""https://developer.android.com/guide/topics/ui/notifiers/notifications"" rel=""nofollow noreferrer"">Android notification API</a> to build the exact display of the message that you want, and display it exactly when you want it (within the notification settings of the user of course).</p>
",,2020-06-04 13:36:38
54874814,2,54874675,,6,,321697.0,,"<p>The issue isn't disambiguation but rather an incorrect type. In Kotlin, an <code>Array&lt;Char&gt;</code> is equivalent to a Java <code>Character[]</code>. That means that when you use <code>*delim</code>, you're actually creating a <code>vararg Character</code> (instead of <code>vararg Char</code>). </p>

<p>Instead, you should prefer the primitive-specific <code>CharArray</code>:</p>

<pre><code>val delim: CharArray = charArrayOf('(', ')', '{', '}')
sourceExpr.split(delimiters = *delim, ignoreCase = false, limit = 0)
</code></pre>
",,2019-02-25 21:17:56
54912660,2,54912032,,2,,9164471.0,,"<p>It was nearly correct:</p>

<ul>
<li>Use <code>Double</code> and not <code>Float</code>, because this is the default floating point number in Kotlin. </li>
<li>Define a type for the <code>precision</code> parameter, e.g. Int</li>
<li>Define a return type, e.g. Double </li>
</ul>

<pre><code>fun round_up(number: Double, precision: Int = 2): Double {
    val fig = pow(10.0, precision.toDouble())
    return ceil(number * fig) / fig
}
</code></pre>
",,2019-02-27 18:58:42
55000558,2,54965849,,5,,6157844.0,,"<p>Suspending functions in Kotlin work differently than blocking function.
When you cancel a <code>Job</code>, at the first suspension after the cancellation the execution will be stopped, <strong>even</strong> if you are in a <code>finally</code> block. If you use <code>Thread.sleep(1000)</code> instead of <code>delay(1000)</code> in your <code>finally</code> block, there are no suspensions taking place, because <code>Thread.sleep()</code> is <strong>blocking</strong>, not suspending, so your whole <code>finally</code> block gets executed. </p>

<p>Note that using blocking functions inside of suspending functions is an anti-pattern and should be avoided!!</p>

<p>To achieve this desired behavior without using blocking functions, use <code>withContext(NonCancellable) {...}</code> as described <a href=""https://kotlinlang.org/docs/reference/coroutines/exception-handling.html#cancellation-and-exceptions"" rel=""noreferrer"">here</a>.</p>

<p>Your example code should look like this: </p>

<pre><code>fun main() {
  val handler = CoroutineExceptionHandler { _, exception -&gt;
    println(""Caught $exception"")
  }
  val job = GlobalScope.launch(handler) {
    launch {
      // the first child
      try {
        println(""inside try"")
        delay(1000000)
      } finally {
        withContext(NonCancellable) {
          println(""Children are cancelled, but exception is not handled until all children terminate"")

          delay(1000) // This suspension cannot be cancelled
          println(""delay executed"")
          //foo()
          println(""The first child finished its non cancellable block"")
        }
      }
    }
    launch {
      // the second child
      delay(10)
      println(""Second child throws an exception"")
      throw ArithmeticException()
    }
  }

  Thread.sleep(1000000)
  println(""complete"")
}
</code></pre>

<p>The output:</p>

<pre><code>inside try
Second child throws an exception
Children are cancelled, but exception is not handled until all children terminate
delay executed
The first child finished its non cancellable block
Caught java.lang.ArithmeticException
</code></pre>
",,2019-03-05 10:23:30
55037106,2,55019885,,2,,5801539.0,,"<p>It's very simple. Create checkpoints while training the model and then use those checkpoints to resume training from where you left of.</p>

<pre><code>import tensorflow as tf
from tensorflow.keras.callbacks import TensorBoard
from tensorflow.keras.callbacks import ModelCheckpoint
from tensorflow.keras.models import load_model

mnist = tf.keras.datasets.mnist

(x_train, y_train),(x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

model = tf.keras.models.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(512, activation=tf.nn.relu),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(10, activation=tf.nn.softmax)
])
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=10, callbacks=[Tensorboard()])
model.save('./final_model.h5', include_optimizer=True)

model = load_model('./final_model.h5')

callbacks = list()

tensorboard = Tensorboard()
callbacks.append(tensorboard)

file_path = ""model-{epoch:02d}-{loss:.4f}.hdf5""

# now here you can create checkpoints and save according to your need
# here period is the no of epochs after which to save the model every time during training
# another option is save_weights_only, for your case it should be false
checkpoints = ModelCheckpoint(file_path, monitor='loss', verbose=1, period=1, save_weights_only=False)
callbacks.append(checkpoints)

model.fit(x_train, y_train, epochs=10, callbacks=callbacks)
</code></pre>

<p>After this just load the checkpoint from where you want to resume training again</p>

<pre><code>model = load_model(checkpoint_of_choice)
model.fit(x_train, y_train, epochs=10, callbacks=callbacks)
</code></pre>

<p>And you are done.</p>

<p>Let me know if you have more questions about this.</p>
",,2019-03-07 06:08:14
55073040,2,55072947,,0,,5093961.0,,"<ol>
<li>Kotlin does not use the <code>new</code> keyword.</li>
<li>It makes it clear if the Array is Mutable or not.</li>
<li>There are javascript and native libraries that will map the call to other implementations.</li>
</ol>
",,2019-03-09 01:12:27
55081451,2,55081228,,3,,5786339.0,,"<p>Checkpoint file only contains variables for specific model and should be loaded with  either exactly same, predefined graph or with specific <code>assignment_map</code> to load only chosen variables. See <a href=""https://www.tensorflow.org/api_docs/python/tf/train/init_from_checkpoint"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/train/init_from_checkpoint</a> </p>

<p>Saved model is more broad cause it contains graph that can be loaded within a session and training could be continued. Frozen graph, however, is serialized and could not be used to continue training.<br>
You can find all the info here <a href=""https://www.tensorflow.org/guide/saved_model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/guide/saved_model</a></p>
",,2019-03-09 20:05:44
55086116,2,55081911,,17,,5154274.0,,"<p>In <code>TensorFlow 2.0</code> you can still access <code>tf.logging</code> via <code>tf.compat.v1</code>:</p>

<pre><code>tf.compat.v1.logging.set_verbosity(tf.compat.v1.logging.ERROR)
</code></pre>

<p><strong>EDIT</strong></p>

<p><a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180827-api-names.md"" rel=""noreferrer"">Here</a>, in the <em>Deprecated namespaces</em>, it is suggested to use Python <code>logging</code> module:</p>

<blockquote>
  <p>tf.logging - Python <code>logging</code> module can be used instead.</p>
</blockquote>

<p>So you should use:</p>

<pre><code>import logging
logging.getLogger(""tensorflow"").setLevel(logging.ERROR)
</code></pre>

<p>before importing <code>tensorflow</code>.</p>
",,2019-03-10 09:09:28
55275484,2,55272203,,3,,8073652.0,,"<p>Since Kotlin 1.2, you can use array literals in annotations. These are not part of the actual Kotlin syntax and only reserved for annotations. This might change in the future but currently you cannot make use of array literals in your actual code.</p>

<p>Read about annotations <a href=""https://kotlinlang.org/docs/reference/annotations.html#arrays-as-annotation-parameters"" rel=""nofollow noreferrer"">here</a>.</p>

<blockquote>
  <p>For other arguments that have an array type, you need to use the array
  literal syntax (since Kotlin 1.2) or arrayOf(...):</p>
  
  <p>// Java</p>

<pre><code>public @interface AnnWithArrayMethod {

    String[] names();

}
</code></pre>
  
  <p>// Kotlin 1.2+:</p>

<pre><code>@AnnWithArrayMethod(names = [""abc"", ""foo"", ""bar""]) 
class C
</code></pre>
  
  <p>// Older Kotlin versions:</p>

<pre><code>@AnnWithArrayMethod(names = arrayOf(""abc"", ""foo"", ""bar"")) 
class D
</code></pre>
</blockquote>
",,2019-03-21 07:23:40
55275854,2,55275221,,3,,5786339.0,,"<p>You can use <code>tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES)</code>to get a list of all variable names in current graph. You also can specify scope.</p>

<pre><code>tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='a')
</code></pre>

<p>You can use <code>tf.train.list_variables(ckpt_file)</code> to get a list of all variables in checkpoint. </p>

<p>Suppose you have variable b in your checkpoint, and you want to load inside <code>tf.variable_scope('a')</code> under name <code>a/b</code>. To do that you just define it </p>

<pre><code>with tf.variable_scope('a'):
    b=tf.get_variable(......)
</code></pre>

<p>And load </p>

<pre><code>saver = tf.train.Saver({'v2': b})

with tf.Session() as sess:
    saver.restore(sess, ckpt_file))
    print(b)
</code></pre>

<p>This will output </p>

<pre><code>&lt;tf.Variable 'a/b:0' shape dtype&gt;
</code></pre>

<p>Edit: As mentioned earlier you can get variable names with</p>

<pre><code>vars_dict = {}
for var_current in tf.global_variables():
    print(var_current)
    print(var_current.op.name) # this gets only name

for var_ckpt in tf.train.list_variables(ckpt):
    print(var_ckpt[0]) this gets only name
</code></pre>

<p>When you know exact names of all variables you can assign whatever value you need, provided variables have same shape and dtype
So to get a dict</p>

<pre><code>vars_dict[var_ckpt[0]) = tf.get_variable(var_current.op.name, shape) # remember to specify shape, you can always get it from var_current 
</code></pre>

<p>You can construct this dictionary either explicitly or in any kind of loop you'll see fit. And then you pass it to saver</p>

<pre><code>saver = tf.train.Saver(vars_dict)
</code></pre>
",,2019-03-21 07:51:58
55345591,2,55066710,,4,,4683036.0,,"<p>Here is an example of retrieving the gradients of the predictions with respect to the inputs using eager execution</p>

<p>Basically, you need to use tape.watch(inputs) [I am using features in my example - whatever you want to call your x ... ] for Tensorflow to record the change in the model output (you can do the same with loss) with respect to the inputs... (and make sure to call your tape.gradient outside of the with tf.GradientTape() context) </p>

<p>Look at the get_gradients function below ...</p>

<p>Hope this helps!</p>

<pre><code>model = tf.keras.Sequential([
  tf.keras.layers.Dense(10, activation=tf.nn.relu, input_shape=(len(numeric_headers),)),  # input shape required
  tf.keras.layers.Dense(10, activation=tf.nn.relu),
  tf.keras.layers.Dense(1, activation=tf.nn.sigmoid)
])


# model = MyModel()
loss_object = tf.keras.losses.BinaryCrossentropy()
optimizer = tf.keras.optimizers.Adam()

train_loss = tf.keras.metrics.Mean(name='train_loss')
train_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='train_accuracy')

test_loss = tf.keras.metrics.Mean(name='test_loss')
test_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='test_accuracy')

def get_gradients(model, features):
  with tf.GradientTape() as tape:
      tape.watch(features)
      predictions = model(features)
  gradients = tape.gradient(predictions, features)
  return gradients

def train_step(features, label):

  with tf.GradientTape() as tape:
    predictions = model(features)
    loss = loss_object(label, predictions)

  gradients = tape.gradient(loss, model.trainable_variables)
  optimizer.apply_gradients(zip(gradients, model.trainable_variables))

  train_loss(loss)
  train_accuracy(label, predictions)

def test_step(features, label):
  predictions = model(features)
  t_loss = loss_object(label, predictions)

  test_loss(t_loss)
  test_accuracy(label, predictions)

EPOCHS = 5
for epoch in range(EPOCHS):
  for features, labels in train_ds:
    train_step(features, labels)

  for features, labels in train_ds:
      test_step(features, labels)

  template = 'Epoch {}, Loss: {}, Accuracy: {}, Test Loss: {}, Test Accuracy: {}'
  print (template.format(epoch+1,
                           train_loss.result(), 
                           train_accuracy.result()*100,
                           test_loss.result(), 
                           test_accuracy.result()*100))

  if epoch == EPOCHS - 1:
    for features, labels in train_ds:
      print ('-')
      print (get_gradients(model, features))
</code></pre>
",,2019-03-25 20:03:30
55362492,2,55361725,,3,,49746.0,,"<p>If you just want to replace all of the instances of one Char in a String with another Char, you can use the <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/replace.html#replace"" rel=""nofollow noreferrer""><code>String.replace()</code></a> extension, which is part of the Kotlin standard library:</p>

<pre><code>quote.replace(' ', ch)
</code></pre>

<p>There shouldn't be a need to do any conversions to Strings, CharArrays, or anything else. I wouldn't even define a function to encapsulate this, you can probably drop <code>replaceSpace</code> entirely.</p>
",,2019-03-26 16:57:32
55376814,2,55318952,,3,,1782792.0,,"<p>According to the community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a>:</p>

<blockquote>
  <ul>
  <li>to control variable naming users can use tf.name_scope + tf.Variable</li>
  </ul>
</blockquote>

<p>Indeed, <a href=""https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/name_scope"" rel=""nofollow noreferrer""><code>tf.name_scope</code></a> still exists in TensorFlow 2.0, so you can just do:</p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0""
</code></pre>

<p>Also, as the point above that states:</p>

<blockquote>
  <ul>
  <li>the tf 1.0 version of variable_scope and get_variable will be left in tf.compat.v1</li>
  </ul>
</blockquote>

<p>So you can just fall back to <a href=""https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/compat/v1/variable_scope"" rel=""nofollow noreferrer""><code>tf.compat.v1.variable_scope</code></a> and <a href=""https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/compat/v1/get_variable"" rel=""nofollow noreferrer""><code>tf.compat.v1.get_variable</code></a> if you really need to.</p>

<p>Variable scopes and <code>tf.get_variable</code> can be convenient but are riddled with minor pitfalls and corner cases, specially since they behave similarly but not exactly like name scopes, and it is actually a parallel mechanism to it. I think having just name scopes will be more consistent and straightforward.</p>
",,2019-03-27 12:06:55
55383460,2,55357880,,0,,7624904.0,,"<p>In TensorFlow 1.x, you need to define a Session and both training and prediction happens inside it. But if you look carefully you will find inputs to <code>sess.run()</code> are different, when training the <code>feed_dict</code> contains both x and corresponding y's. Like:</p>

<pre><code>loss, _ = sess.run([loss_op, any_other_parameter_you_want], feed_dict={X: batch_x,Y: batch_y})
</code></pre>

<p>And for prediction the <code>feed_dict</code> will contain only <code>x</code> values, also you will specify the parameter <code>y_out</code> (the output of your model):</p>

<pre><code>out = sess.run(y_out, feed_dict={X: batch_x})
</code></pre>
",,2019-03-27 17:40:24
55416646,2,55416615,,30,,49811.0,,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",,2019-03-29 11:38:53
55570269,2,55569789,,7,,101337.0,,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",,2019-04-08 09:31:18
55570462,2,55565703,,1,,5154274.0,,"<p>Use <code>tf.variable_scope()</code> instead of <code>tf.name_scope()</code>. <code>tf.name_scope()</code> will append scope name only to the resulting tensor name (e.g. to the result of applying convolutional/dense layer) but not to the underlying variables. <code>tf.variable_scope()</code>, however, will append the scope name to both.</p>

<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

x = tf.placeholder(tf.float32, shape=(None, 32, 32, 3))
t = x
with tf.variable_scope('trans_part'):
    with tf.name_scope('t_conv3', default_name=scope):    
        t = tf.layers.conv2d_transpose(t,
                                       filters=3,
                                       kernel_size=3,
                                       strides=1,
                                       padding='same')
        print(t.name) # trans_part/t_conv3/conv2d_transpose/BiasAdd:0
        t = tf.nn.tanh(t)
    with tf.name_scope('identical_conv4'):
        t = tf.layers.conv2d(inputs=t,
                             filters=3,
                             kernel_size=3,
                             strides=1,
                             padding='same')
        t  = tf.nn.tanh(t)

        t = tf.layers.conv2d(inputs=t,
                             filters=3,
                             kernel_size=3,
                             strides=1,
                             padding='same')
        t = tf.nn.tanh(t)

var_list = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='trans_part')

with tf.Session() as sess:
    sess.run(tf.variables_initializer(var_list=var_list))

print([v.name for v in var_list])
# ['trans_part/conv2d_transpose/kernel:0',
#  'trans_part/conv2d_transpose/bias:0',
#  'trans_part/conv2d/kernel:0',
#  'trans_part/conv2d/bias:0',
#  'trans_part/conv2d_1/kernel:0',
#  'trans_part/conv2d_1/bias:0']
</code></pre>

<p>You can also add the name of the scope to the names of layers you define and then filter out those variables that do not have scope name substring in their names:</p>

<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

x = tf.placeholder(tf.float32, shape=(None, 32, 32, 3))
t = x
with tf.name_scope('trans_part') as scope:
    with tf.name_scope('t_conv3'):    
        # next line is the error line
        t = tf.layers.conv2d_transpose(t,
                                       filters=3,
                                       kernel_size=3,
                                       strides=1,
                                       padding='same',
                                       name=scope + 'con2d_transpose')
        t = tf.nn.tanh(t)

    with tf.name_scope('identical_conv4') as scope2:
        t = tf.layers.conv2d(inputs=t,
                             filters=3,
                             kernel_size=3,
                             strides=1,
                             padding='same',
                             name=scope + 'conv2d1')
        t  = tf.nn.tanh(t)

        t = tf.layers.conv2d(inputs=t,
                             filters=3,
                             kernel_size=3,
                             strides=1,
                             padding='same',
                             name=scope + 'conv2d2')
        t = tf.nn.tanh(t)

# from all trainable variables pick those that do have 'trans_part`
# substring in their name        
var_list = [v for v in tf.trainable_variables() if 'trans_part' in v.name]

with tf.Session() as sess:
    sess.run(tf.variables_initializer(var_list=var_list))

print([v.name for v in var_list])
# ['trans_part/con2d_transpose/kernel:0',
#  'trans_part/con2d_transpose/bias:0',
#  'trans_part/conv2d1/kernel:0',
#  'trans_part/conv2d1/bias:0',
#  'trans_part/conv2d2/kernel:0',
#  'trans_part/conv2d2/bias:0']
</code></pre>

<p>Note that in this case the names should be unique for each layer you define!</p>
",,2019-04-08 09:41:16
55616377,2,55616062,,0,,2650622.0,,"<p>Name scopes in TensorFlow are hierarchical, so your <code>bar</code> scope is actually <code>foo/bar</code> and you should query it as such:</p>

<pre><code>print(tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='foo'))
print(tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='foo/bar'))
</code></pre>

<p>Prints:</p>

<blockquote>
<pre><code>[&lt;tf.Variable 'foo/bar/v:0' shape=(1,) dtype=float32_ref&gt;]
[&lt;tf.Variable 'foo/bar/v:0' shape=(1,) dtype=float32_ref&gt;]
</code></pre>
</blockquote>
",,2019-04-10 15:32:21
55660820,2,55627703,,0,,9217178.0,,"<p>Actually you just <strong>made a mistake on the name of the tensors</strong> in <code>input_map</code> and <code>return_elements</code>. 
There are two tricks:</p>

<ol>
<li>Name alway each operation and use <code>tf.name_scope</code> to facilitate the research of name.</li>
<li>You can list all operation names by following:
<code>print([n.name for n in tf.get_default_graph().as_graph_def().node])</code></li>
</ol>

<hr>

<p><strong>Here's the code corrected:</strong></p>

<pre><code># Create simple graph:
with tf.name_scope('graph'):
   x = tf.placeholder(dtype=tf.int64, shape=[1], name='x')
   v1 = tf.get_variable(""v1"", shape=[1], initializer=tf.zeros_initializer, dtype=tf.int64)
   y = tf.add(x, v1, name='AAdd')  # just to make sure that you can find the name
   inc_v1 = v1.assign(v1+1)
   init_op = tf.global_variables_initializer()
   saver = tf.train.Saver()

...

graph_def = tf.get_default_graph().as_graph_def() #graph_def is a language stubs

print('\n### check nodes')
for n in tf.get_default_graph().as_graph_def().node:
      print(n.name)
tf.reset_default_graph()

batch = tf.data.Dataset.range(10).make_one_shot_iterator().get_next()

# plug in new pipeline
[y] = tf.import_graph_def(graph_def, input_map={'graph/x:0': batch}, return_elements=['graph/add/y:0'])

# to load your ./tmp/switch.ckpt you should use tf.train.import_meta_graph()
# like in the second block of the answer https://stackoverflow.com/questions/50364377/how-to-replace-the-input-of-a-saved-graph-e-g-a-placeholder-by-a-dataset-itera

with tf.Session() as sess:
   for i in range(10):
     print(sess.run(y))
</code></pre>
",,2019-04-13 00:03:15
55686387,2,55686016,,1,,4471335.0,,"<p>I suggest using TensorFlow Lite.</p>

<p>It will enable you to compress and quantize your model to make it smaller and faster to run.</p>

<p>It also supports leveraging GPU and/or hardware accelerator if any of this is available to you.</p>

<p><a href=""https://www.tensorflow.org/lite"" rel=""nofollow noreferrer"">https://www.tensorflow.org/lite</a></p>
",,2019-04-15 09:40:43
55908561,2,55903777,,1,,869184.0,,"<p>You have declared a variable of type <code>CharArray</code>, but haven't assigned it with any instance. </p>

<p>Before you can set elements of that <code>CharArray</code>, you have to create an instance of <code>CharArray</code>. It looks like you know the size of that array in advance, then you can use the following array constructor:</p>

<pre><code>// creates an instance of CharArray of 4 elements, filled with \u0000 chars
val str = CharArray(4)  

// after that you can set elements in the array
</code></pre>

<p>Bonus point: if you have a function that can provide an array element value given its index you can use the similar constructor to create instance and initialized its elements at once:</p>

<pre><code>val str = CharArray(4) { index -&gt; 
    array[i + index][j]
}
</code></pre>
",,2019-04-29 17:58:33
56054776,2,55573051,,0,,10979719.0,,"<p>We are having the same error. At the moment we guess:</p>

<ul>
<li>it is related to the fact that the model was initially trained with tensorflow 1.x and tensorflowjs now loads with its converter tensorflow 2.0-alpha.</li>
<li>Introspecting the model.json we find a lot of ""unused_control_flow_input_"" which could relate to input tensor only used for training purposes. </li>
</ul>

<p>However, we are only guessing and there is no documentation. The interchangeability of the tensorflow platform is so important for any real production deployments but here we are missing really missing many information. </p>
",,2019-05-09 07:59:58
56098588,2,56091276,,6,,4265739.0,,"<p>There is no guarantee for this in the API. </p>

<p>TLDR: If you need the sequential execution, because you have some state that changes see bottom.</p>

<p>First lets have a look at the implementations of the initializer:</p>

<p><strong>Native:</strong> It is implemented in increasing order for <a href=""https://github.com/JetBrains/kotlin-native/blob/bcd411837152f3546047b8703dbb493dabf0d545/runtime/src/main/kotlin/kotlin/Arrays.kt#L91"" rel=""noreferrer"">Kotlin Native</a>.</p>

<pre><code>@InlineConstructor
public constructor(size: Int, init: (Int) -&gt; Char): this(size) {
    for (i in 0..size - 1) {
        this[i] = init(i)
    }
}
</code></pre>

<p><strong>JVM</strong>: Decompiling the Kotlin byte code for </p>

<pre><code>class test {
    val intArray = IntArray(100) { it * 2 }
}
</code></pre>

<p>to Java in Android Studio yields:</p>

<pre><code>public final class test {
   @NotNull
   private final int[] intArray;

   @NotNull
   public final int[] getIntArray() {
      return this.intArray;
   }

   public test() {
      int size$iv = 100;
      int[] result$iv = new int[size$iv];
      int i$iv = 0;

      for(int var4 = result$iv.length; i$iv &lt; var4; ++i$iv) {
         int var6 = false;
         int var11 = i$iv * 2;
         result$iv[i$iv] = var11;
      }

      this.intArray = result$iv;
   }
}
</code></pre>

<p>which supports the claim that it is initialized in ascending order. </p>

<p><strong>Conclusion:</strong> It commonly is implemented to be executed in ascending order. </p>

<p><strong>BUT:</strong> You can not rely on the execution order, as the implementation is not guaranteed by the API. It can change and it can be different for different platforms (although both is unlikely).</p>

<p><strong>Solution:</strong> You can initialize the array manually in a loop, then you have control about the execution order. 
The following example outlines a possible implementation that has a stable initialisation with random values, e.g. for tests.</p>

<pre><code>val intArray = IntArray(100).also {
    val random = Random(0)
    for (index in it.indices) {
        it[index] = index * random.nextInt()
    }
}
</code></pre>
",,2019-05-12 11:04:19
56134099,2,56130893,,5,,10134209.0,,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",,2019-05-14 15:37:58
56163918,2,56162774,,0,,9373398.0,,"<p>Solved, I couldn't find the documentation for 2.0 but here it is:</p>

<p><a href=""https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/losses/SparseCategoricalCrossentropy"" rel=""nofollow noreferrer"">https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/losses/SparseCategoricalCrossentropy</a></p>
",,2019-05-16 08:15:50
56172627,2,56168952,,0,,7248145.0,,"<p>Name argument is used in most cases so you can restore your variables from a saved checkpoint. Check this <a href=""https://www.tensorflow.org/guide/saved_model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/guide/saved_model</a> . Furthermore it is helpful for finding your variables or operations that are visualized in the graph through tensorboard.</p>
",,2019-05-16 16:08:17
56187424,2,56140575,,0,,5520646.0,,"<p>There is no direct correlation between TFX (includes tfdv) and the deep learning framework of tensorflow.</p>
",,2019-05-17 13:27:09
56187798,2,56124378,,3,,6643124.0,,"<p>You can load the model in following way:</p>

<pre><code>from tensorflow.keras.models import load_model
model = load_model('cnn.h5')
</code></pre>

<p>The training/test data can be loaded with the following code:</p>

<pre><code>import h5py
import numpy as np
hf = h5py.File('cnn.h5', 'r')
</code></pre>
",,2019-05-17 13:48:44
56307085,2,56305464,,0,,4790871.0,,"<p>The best approach, especially assuming that dataset is large, is to use the <code>tf.data</code> dataset. There's a CSV reader built right in. The <code>dataset</code> api provides all the functionality you need to preprocess the dataset, it provides built-in multi-core processing, and quite a bit more. </p>

<p>Once you have the dataset built Keras will accept it as an input directly, so <code>fit(my_dataset, inputs=... outputs=...)</code>.</p>

<p>The structure of the dataset api takes a little learning, but it's well worth it. Here's the primary guide with lots of examples:</p>

<p><a href=""https://www.tensorflow.org/guide/datasets"" rel=""nofollow noreferrer"">https://www.tensorflow.org/guide/datasets</a></p>

<p>Scroll down to the section on 'Import CSV data' for poignant examples.</p>

<p>Here's a nice example of using the dataset API with keras: <a href=""https://stackoverflow.com/questions/46135499/how-to-properly-combine-tensorflows-dataset-api-and-keras"">How to Properly Combine TensorFlow&#39;s Dataset API and Keras?</a></p>
",,2019-05-25 17:19:38
56494103,2,56476447,,0,,317384.0,,"<p>This will do it if you want to check steps of 0.1 for any double.
Multiply by 10, check if the result is an integer.</p>

<pre><code>fun isSpecial(v:Double) : Boolean {
    val y = v*10
    return y == y.toInt().toDouble()
}
</code></pre>

<p>Unless you explicitly only want 0.0-1.0 ?</p>
",,2019-06-07 12:12:28
56512063,2,56511483,,0,,9477338.0,,"<p>I think you should add <code>graph = tf.get_default_graph()</code> and <code>with graph.as_default():</code></p>

<p>What about this?</p>

<pre><code>from tensorflow import keras
from tensorflow.keras.models import model_from_json
from tfm_msgs.msg import IsLooking
import numpy as np
from tensorflow.keras.backend import clear_session
import tensorflow as tf
from threading import Thread, Lock
# other non relevant imports


graph = tf.get_default_graph()


def callback(face_array_stamped):
    global mutex
    mutex.acquire()
    try:
        global my_model
        global pub
        true_faces = []
        for face in face_array_stamped.faces:
            if len(face.eyes) == 2:
                true_faces.append(face)
        if len(true_faces) == 1:
            true_face = true_faces[0]
            with graph.as_default():
                prediction = my_model.predict(np.array([[
                #all the data here
                                        ]]))[0]
            #↑↑↑↑↑It crashes here↑↑↑↑↑↑
            #more non relevant stuff
    finally:
        mutex.release()

if __name__ == '__main__':
    # clear_session()
    model_dir = str(os.path.dirname(os.path.abspath(__file__))) + ""/../nnet_models/""
    json_file = open(model_dir+'model.json', 'r')
    my_model = model_from_json(json_file.read())
    json_file.close()
    my_model.load_weights(model_dir+'model.h5')
    # my_model._make_predict_function()
    my_model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
    # my_model.summary()

</code></pre>
",,2019-06-09 04:50:31
56695167,2,56691003,,5,,869184.0,,"<p>Kotlin 1.4 provides a common <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/decode-to-string.html"" rel=""nofollow noreferrer""><code>ByteArray.decodeToString</code></a> function.</p>
<p>It takes a <code>ByteArray</code> containing bytes of string encoded with utf8 encoding and decodes it to kotlin <code>String</code>. So you can use it like:</p>
<pre><code>val response: String = response.data.decodeToString()
</code></pre>
",,2019-06-20 23:45:22
56825391,2,56825297,,1,,5335131.0,,"<p>Which char do you want?</p>

<p>This will return the first char of the String, since a String is essentially a CharArray.</p>

<pre><code>fun main (args:Array&lt;String&gt;){
    val character = readLine()!![0]
    println(""your value is $character"")
}
</code></pre>
",,2019-06-30 13:52:05
56883200,2,56882860,,5,,5427663.0,,"<p>From Kotlin/Native Concurrent documentation (<a href=""https://kotlinlang.org/docs/reference/native/concurrency.html"" rel=""noreferrer"">here</a>):</p>

<blockquote>
  <p><strong>Concurrency in Kotlin/Native</strong></p>
  
  <p>Kotlin/Native runtime doesn't encourage a classical thread-oriented concurrency model with mutually exclusive code blocks and conditional variables, as this model is known to be error-prone and unreliable. Instead, we suggest a collection of alternative approaches, allowing you to use hardware concurrency and implement blocking IO. Those approaches are as follows, and they will be elaborated on in further sections:</p>
  
  <ul>
  <li>Workers with message passing</li>
  <li>Object subgraph ownership transfer</li>
  <li>Object subgraph freezing</li>
  <li>Object subgraph detachment</li>
  <li>Raw shared memory using C globals</li>
  <li>Coroutines for blocking operations (not covered in this document)</li>
  </ul>
</blockquote>

<p>It seems that locks are not exposed in Kotlin/Native by design. There <em>are</em> implementations (see <a href=""https://github.com/JetBrains/kotlin-native/blob/master/runtime/src/main/kotlin/kotlin/native/concurrent/Lock.kt"" rel=""noreferrer"">Lock.kt</a>), however that class is marked <code>internal</code>.</p>

<p><em>However</em>, there is a multi-platform implemenation of locks in KTOR (very limited <a href=""https://api.ktor.io/1.1.3/io.ktor.util/-lock/index.html"" rel=""noreferrer"">doc</a>, <a href=""https://github.com/ktorio/ktor/blob/master/ktor-utils/common/src/io/ktor/util/Lock.kt"" rel=""noreferrer"">source code</a>). It is public, but marked with <a href=""https://api.ktor.io/1.1.3/io.ktor.util/-internal-a-p-i/index.html"" rel=""noreferrer""><code>@InternalApi</code></a>, which may affect its stability.</p>

<p>You might also be interested in this KotlinLang discussion thread: <a href=""https://discuss.kotlinlang.org/t/replacement-for-synchronized/11240"" rel=""noreferrer"">Replacement for synchronized</a></p>
",,2019-07-04 07:56:04
56925010,2,56911455,,0,,2624719.0,,"<p>This is the user guide on how to use TensorRT in TF: <a href=""https://docs.nvidia.com/deeplearning/frameworks/tf-trt-user-guide/index.html"" rel=""nofollow noreferrer"">https://docs.nvidia.com/deeplearning/frameworks/tf-trt-user-guide/index.html</a></p>

<p>This talk explains how TensorRT works in TF: <a href=""https://developer.nvidia.com/gtc/2019/video/S9431"" rel=""nofollow noreferrer"">https://developer.nvidia.com/gtc/2019/video/S9431</a></p>

<p>Note that TensorRT also supports INT8-quantization (during training or post-training).</p>

<p>This blog post also has kind of the same content: <a href=""https://medium.com/tensorflow/high-performance-inference-with-tensorrt-integration-c4d78795fbfe"" rel=""nofollow noreferrer"">https://medium.com/tensorflow/high-performance-inference-with-tensorrt-integration-c4d78795fbfe</a></p>

<p>This repository has a bunch of examples showing how to use it: <a href=""https://github.com/tensorflow/tensorrt"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorrt</a></p>
",,2019-07-07 18:35:00
56958434,2,56956228,,2,,2806421.0,,"<p>If by latest model you mean the model after the final epoch, you can just simply leave the Checkpoint function unchanged and save your final result.</p>

<p>After you fit the model add this line of code:</p>

<pre><code>model.save('my_model.h5')
</code></pre>

<p>The checkpoint function will save the best model, and after you finish training, the model will save one final time, regardless of the result.</p>
",,2019-07-09 18:11:55
57056410,2,57056193,,4,,344487.0,,"<p>Kotlin compiles extension properties into static methods. Here's an example extending the <code>String</code> class in a file called <code>StringUtils.kt</code>:</p>

<pre><code>val String.greeting
  get() = ""hello $this""
</code></pre>

<p>So a very simple method that when called in kotlin like <code>""fred"".greeting</code> will return <code>hello fred</code>.</p>

<p>If you check the kotlin byte code and decompile it in the IDE, you can see that the result is something similar to:</p>

<pre><code>public final class StringUtilsKt {
 @NotNull
 public static final String getGreeting(@NotNull String $this$greeting) {
  Intrinsics.checkParameterIsNotNull($this$greeting, ""$this$greeting"");
  return ""hello "" + $this$greeting;
 }
}
</code></pre>

<p>A static method in a class <code>StringUtilsKt</code>. This means you can simply call this from java like <code>StringUtilsKt.getGreeting(""fred"")</code> and it will result in the same output.</p>

<p>PS: This is very similar to extension functions. They are also compiled into static methods, but the name usually doesn't change.</p>
",,2019-07-16 11:39:50
57088849,2,57088786,,0,,10074443.0,,"<p>As far as i know, there is no argument  for this. Model.fit simply trains the model on whatever training data provided, and at the end of each epoch evaluates the training on either provided validation data, OR by the use of validation_split. </p>
",,2019-07-18 07:05:32
57274845,2,57098756,,0,,11612.0,,"<p>I upgraded to the latest version of the kotlin plugin and this resolved the issues I was facing.</p>
",,2019-07-30 15:09:50
57320458,2,57318576,,5,,4758255.0,,"<p>It's because kotlin Null-Safety is kick in when reading the following code:</p>

<pre><code>val lat: String = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>if you visit the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java"" rel=""noreferrer"">SharedPreferences</a> code, you can see the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java#257"" rel=""noreferrer"">following code</a>:</p>

<pre><code>@Nullable
String getString(String key, @Nullable String defValue);
</code></pre>

<p>which is give us a probability to use null as <code>defValue</code> parameter. So, Kotlin try to guard it and give you the matching error:</p>

<blockquote>
  <p>""Type mismatch. Required String, found String?""</p>
</blockquote>

<p>You can fix the problem by enabling nullable for your String variable with:</p>

<pre><code>val lat: String? = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>though this against <a href=""https://kotlinlang.org/docs/reference/null-safety.html"" rel=""noreferrer"">Kotlin type system purpose</a>:</p>

<blockquote>
  <p>Kotlin's type system is aimed at eliminating the danger of null references from code, also known as the The Billion Dollar Mistake.</p>
</blockquote>
",,2019-08-02 05:32:59
57336013,2,57332982,,0,,804388.0,,"<p>Look at @tf.custom_gradient for writing your own gradient calculation function. </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/custom_gradient"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/custom_gradient</a></p>

<p>If you're using eager execution, you can monitor the gradients using Gradient Tape.</p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",,2019-08-03 06:31:52
57357218,2,57346556,,4,,1782792.0,,"<p>You can construct ragged tensors with the different <code>from_*</code> methods in <a href=""https://www.tensorflow.org/api_docs/python/tf/RaggedTensor"" rel=""nofollow noreferrer""><code>tf.RaggedTensor</code></a>. For your case, you can use for example <a href=""https://www.tensorflow.org/api_docs/python/tf/RaggedTensor#from_row_lengths"" rel=""nofollow noreferrer""><code>from_row_lengths</code></a>:</p>

<pre><code>import tensorflow as tf

def stack_ragged(tensors):
    values = tf.concat(tensors, axis=0)
    lens = tf.stack([tf.shape(t, out_type=tf.int64)[0] for t in tensors])
    return tf.RaggedTensor.from_row_lengths(values, lens)

a = tf.convert_to_tensor([1, 2])
b = tf.convert_to_tensor([1, 2, 3])
print(stack_ragged([a, b]))
# &lt;tf.RaggedTensor [[1, 2], [1, 2, 3]]&gt;
</code></pre>
",,2019-08-05 10:58:52
57368942,2,57364659,,0,,5069957.0,,"<p>The parameter of <code>tf.model</code> is an object of symbolic tensor. An error is thrown because the right argument is not used. It is noteworthy to indicate that <code>tf.model</code> is used to build a new model. What is to be done here is to load an existing model saved in model.json.</p>

<pre><code>const tf = require(""@tensorflow/tfjs"");
const tfn = require(""@tensorflow/tfjs-node"");
const handler = tfn.io.fileSystem(""url-to-model.json"");
const model = await tf.loadModel(handler);
</code></pre>
",,2019-08-06 04:27:15
57515320,2,57515225,,4,,49746.0,,"<p>You'll have to convert your <code>Char</code> to a <code>String</code> in order to convert it to a Digit. Otherwise, you will get the integer used to represent the <code>Char</code> internally.</p>
<p><strong>UPDATE: If you are using Kotlin 1.5 or higher</strong></p>
<p>Kotlin 1.5 introduced <code>Char.digitToInt()</code>, which does this conversion for you. You can even specify the radix, but it conveniently defaults to base 10.</p>
<pre><code>character.digitToInt()
</code></pre>
<p><strong>Before Kotlin 1.5</strong></p>
<pre><code>character.toString().toInt()
</code></pre>
<p>And you could define an extension function to make this cleaner:</p>
<pre><code>fun Char.asDigit(): Int = this.toString().toInt()
println(character.asDigit())
</code></pre>
",,2019-08-15 19:45:39
57567989,2,57565019,,2,,2455494.0,,"<p>Your first approach is probably the most common. This error:</p>

<blockquote>
  <p>RuntimeError: tf.placeholder() is not compatible with eager execution.</p>
</blockquote>

<p>is because one cannot use a <code>tf.placeholder</code> in eager mode. There is no concept of such a thing when executing eagerly. </p>

<p>You could use the <a href=""https://www.tensorflow.org/guide/datasets"" rel=""nofollow noreferrer""><code>tf.data</code> API</a> to build a dataset for your training data and feed that to the model. Something like this with the datasets replaced with your real data:</p>

<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf
tf.enable_eager_execution()

model = tf.keras.applications.inception_resnet_v2.InceptionResNetV2(weights=None)

model.compile(tf.keras.optimizers.Adam(), loss=tf.keras.losses.categorical_crossentropy)

### Replace with tf.data.Datasets for your actual training data!
train_x = tf.data.Dataset.from_tensor_slices(tf.random.normal((10,299,299,3)))
train_y = tf.data.Dataset.from_tensor_slices(tf.random.uniform((10,), maxval=10, dtype=tf.int32))
training_data = tf.data.Dataset.zip((train_x, train_y)).batch(BATCH_SIZE)

model.fit(training_data)

</code></pre>

<p>This approach works as is in TensorFlow 2.0 too as mentioned in your title. </p>
",,2019-08-20 06:43:03
57704553,2,57329274,,1,,9243510.0,,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",,2019-08-29 06:50:54
57793891,2,57792113,,3,,1190882.0,,"<p>Data division is best if it is done in raw format only or before you transform it into tensors. If there is a strong requirement to do it in TensorFlow only, then I will suggest you to make use of <a href=""https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/data/Dataset"" rel=""nofollow noreferrer"">tf.data.Dataset</a> class. I have added the demo code with relevant comments explaining the steps.</p>

<pre><code>import tensorflow as tf
import numpy as np

TEST_SIZE = 0.1
DATA_SIZE = 1000

# Create data
X_data = np.random.rand(DATA_SIZE, 28, 28, 1)
y_data = np.random.randint(0, 2, [DATA_SIZE])
samples1 = np.sum(y_data)
print('Percentage of 1 = ', samples1 / len(y_data))

# Create TensorFlow dataset
dataset = tf.data.Dataset.from_tensor_slices((X_data, y_data))

# Gather data with 0 and 1 labels separately
class0_dataset = dataset.filter(lambda x, y: y == 0)
class1_dataset = dataset.filter(lambda x, y: y == 1)

# Shuffle them
class0_dataset = class0_dataset.shuffle(DATA_SIZE)
class1_dataset = class1_dataset.shuffle(DATA_SIZE)

# Split them
class0_test_samples_len = int((DATA_SIZE - samples1) * TEST_SIZE)
class0_test = class0_dataset.take(class0_test_samples_len)
class0_train = class0_dataset.skip(class0_test_samples_len)

class1_test_samples_len = int(samples1 * TEST_SIZE)
class1_test = class1_dataset.take(class1_test_samples_len)
class1_train = class1_dataset.skip(class1_test_samples_len)

print('Train Class 0 = ', len(list(class0_train)), ' Class 1 = ', len(list(class1_train)))
print('Test Class 0 = ', len(list(class0_test)), ' Class 1 = ', len(list(class1_test)))

# Gather datasets
train_dataset = class0_train.concatenate(class1_train).shuffle(DATA_SIZE)
test_dataset = class0_test.concatenate(class1_test).shuffle(DATA_SIZE)

print('Train dataset size = ', len(list(train_dataset)))
print('Test dataset size = ', len(list(test_dataset)))
</code></pre>

<p>Sample output:</p>

<pre><code>Percentage of 1 =  0.474
Train Class 0 =  474  Class 1 =  427
Test Class 0 =  52  Class 1 =  47
Train dataset size =  901
Test dataset size =  99
</code></pre>
",,2019-09-04 18:20:13
57825200,2,57824600,,4,,1782792.0,,"<p>By default, TensorFlow creates a ""root"" default graph, which will be the graph to use when no other graph has been designed as default with <code>.as_default()</code>. You cannot ""set"" this base default graph, as it is created internally by TensorFlow, although you can drop it and replace it with a new graph with <code>tf.reset_default_graph()</code>.</p>

<p>In your example, you create a new graph <code>graph</code>, and then make a context manager with that graph as default.</p>

<pre class=""lang-py prettyprint-override""><code>graph = tf.Graph()
with graph.as_default():
    x = tf.constant([[-2.25 + 4.75j], [-3.25 + 5.75j]])
    y = tf.abs(x)
</code></pre>

<p>The <code>tf.constant</code> and <code>tf.abs</code> operations in there will be created within <code>graph</code>, because that is the default graph inside that block.</p>

<p>However, once the block finishes, the context manager that makes <code>graph</code> the default graph is finished too, so you are left with no explicitly set default graph. This means that the default graph will now be the one that TensorFlow created internally. If you call <code>tf.reset_default_graph()</code> and then <code>tf.get_default_graph()</code> again you will see that you get now a different graph.</p>

<p>So, if you want to use some specific graph as default, you always need to use the <code>.as_default()</code> context to make it so, and the graph will stop being the default when you are out of that.</p>
",,2019-09-06 15:53:34
57858093,2,55083018,,2,,3447343.0,,"<p>A ragged tensor needs two arrays: <code>values</code> and <code>something</code> defining how the <code>values</code> should be split into rows (e.g. <code>row_splits</code>, <code>row_lengths</code>, ... see the <a href=""https://www.tensorflow.org/beta/guide/ragged_tensors#alternative_row-partitioning_schemes"" rel=""nofollow noreferrer"">docs</a>). My take is to store these <strong>two arrays as two features in a tf.Example</strong> and create the ragged tensor when loading the files.</p>
<p>For example:</p>
<pre><code>import tensorflow as tf

def serialize_example(vals, lens):
  vals = tf.train.Feature(int64_list=tf.train.Int64List(value=vals))
  lens = tf.train.Feature(int64_list=tf.train.Int64List(value=lens))
  example = tf.train.Example(features=tf.train.Features(
      feature={'vals': vals, 'lens': lens})
  )
  return example.SerializeToString()

def parse_example(raw_example):
  example = tf.io.parse_single_example(raw_example, {
      'vals':tf.io.VarLenFeature(dtype=tf.int64),
      'lens':tf.io.VarLenFeature(dtype=tf.int64)
  })
  return tf.RaggedTensor.from_row_lengths(
      example['vals'].values, row_lengths=example['lens'].values
  )

ex1 = serialize_example([1,2,3,4,5,6,7,8,9,10], [3,2,5])
print(parse_example(ex1))  # &lt;tf.RaggedTensor [[1, 2, 3], [4, 5], [6, 7, 8, 9, 10]]&gt;
ex2 = serialize_example([1,2,3,4,5,6,7,8], [2,2,4])
print(parse_example(ex2))  # &lt;tf.RaggedTensor [[1, 2], [3, 4], [5, 6, 7, 8]]&gt;
</code></pre>
<p>When creating a dataset from TFRecord files, one would apply the <code>parse_example</code> as a transformation by passing it to the <code>Dataset.map()</code> function.</p>
",,2019-09-09 16:43:04
58194250,2,56192817,,2,,869184.0,,"<p>Since the version 1.3.50 there's a guarantee in the API documentation that array elements are initialized sequentially. Therefore, you can use the original code from the question to populate an <code>IntArray</code> this way. </p>

<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int-array/-init-.html"" rel=""nofollow noreferrer"">https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int-array/-init-.html</a></p>
",,2019-10-02 01:46:15
58223071,2,58171081,,2,,9828197.0,,"<p><strong><em>edit</em></strong>
so the comment was <code>Is this a trainable object though?</code></p>

<p>The answer: No. You cannot use sparse matrix currently and make it trainable. Instead you can use a mask matrix (see at the end)</p>

<p>But if you need to use sparse matrix, you just have to use <code>tf.sparse.sparse_dense_matmul()</code> or <code>tf.sparse_tensor_to_dense()</code> where your sparse interacts with a dense matrix. I have taken a simple XOR example from <a href=""https://www.tutorialspoint.com/tensorflow/tensorflow_xor_implementation.htm"" rel=""nofollow noreferrer"">here</a> and replaced dense with a sparse matrix:</p>

<pre><code>#Declaring necessary modules
import tensorflow as tf
import numpy as np
""""""
A simple numpy implementation of a XOR gate to understand the backpropagation
algorithm
""""""

x = tf.placeholder(tf.float32,shape = [4,2],name = ""x"")
#declaring a place holder for input x
y = tf.placeholder(tf.float32,shape = [4,1],name = ""y"")
#declaring a place holder for desired output y

m = np.shape(x)[0]#number of training examples
n = np.shape(x)[1]#number of features
hidden_s = 2 #number of nodes in the hidden layer
l_r = 1#learning rate initialization

theta1 = tf.SparseTensor(indices=[[0, 0],[0, 1], [1, 1]], values=[0.1, 0.2, 0.1], dense_shape=[3, 2])
#theta1 = tf.cast(tf.Variable(tf.random_normal([3,hidden_s]),name = ""theta1""),tf.float64)
theta2 = tf.cast(tf.Variable(tf.random_normal([hidden_s+1,1]),name = ""theta2""),tf.float32)

#conducting forward propagation
a1 = tf.concat([np.c_[np.ones(x.shape[0])],x],1)
#the weights of the first layer are multiplied by the input of the first layer

#z1 = tf.sparse_tensor_dense_matmul(theta1, a1)

z1 = tf.matmul(a1,tf.sparse_tensor_to_dense(theta1))
#the input of the second layer is the output of the first layer, passed through the 

a2 = tf.concat([np.c_[np.ones(x.shape[0])],tf.sigmoid(z1)],1)
#the input of the second layer is multiplied by the weights

z3 = tf.matmul(a2,theta2)
#the output is passed through the activation function to obtain the final probability

h3 = tf.sigmoid(z3)
cost_func = -tf.reduce_sum(y*tf.log(h3)+(1-y)*tf.log(1-h3),axis = 1)

#built in tensorflow optimizer that conducts gradient descent using specified 

optimiser = tf.train.GradientDescentOptimizer(learning_rate = l_r).minimize(cost_func)

#setting required X and Y values to perform XOR operation
X = [[0,0],[0,1],[1,0],[1,1]]
Y = [[0],[1],[1],[0]]

#initializing all variables, creating a session and running a tensorflow session
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init)

#running gradient descent for each iterati
for i in range(200):
   sess.run(optimiser, feed_dict = {x:X,y:Y})#setting place holder values using feed_dict
   if i%100==0:
      print(""Epoch:"",i)
      print(sess.run(theta1))
</code></pre>

<p>and the output is:</p>

<pre><code>Epoch: 0
SparseTensorValue(indices=array([[0, 0],
       [0, 1],
       [1, 1]]), values=array([0.1, 0.2, 0.1], dtype=float32), dense_shape=array([3, 2]))
Epoch: 100
SparseTensorValue(indices=array([[0, 0],
       [0, 1],
       [1, 1]]), values=array([0.1, 0.2, 0.1], dtype=float32), dense_shape=array([3, 2]))

</code></pre>

<p>So the only way is to use a mask matrix. You can use it by multiplication or tf.where</p>

<p><strong>1) Multiplication</strong>: You can create mask matrix of the desired shape and multiply it with your weight matrix:</p>

<pre><code>mask = tf.Variable([[1,0,0],[0,1,0],[0,0,1]],name ='mask', trainable=False)
weight = tf.cast(tf.Variable(tf.random_normal([3,3])),tf.float32)
desired_tensor = tf.matmul(weight, mask)
</code></pre>

<p><strong>2) tf.where</strong> </p>

<pre><code>mask = tf.Variable([[1,0,0],[0,1,0],[0,0,1]],name ='mask', trainable=False)
weight = tf.cast(tf.Variable(tf.random_normal([3,3])),tf.float32)
desired_tensor = tf.where(mask &gt; 0, tf.ones_like(weight), weight)
</code></pre>

<p>Hope it helps</p>

<hr>

<p>You can do that by using sparse tensors like so:</p>

<pre><code>SparseTensor(indices=[[0, 0], [1, 2]], values=[1, 2], dense_shape=[3, 4])

</code></pre>

<p>and the output is:</p>

<pre><code>[[1, 0, 0, 0]
 [0, 0, 2, 0]
 [0, 0, 0, 0]]

</code></pre>

<p>you can look up more on the documentation of sparse tensor here: </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor</a></p>

<p>Hope it helps!</p>
",,2019-10-03 16:11:33
58326802,2,58326422,,2,,2340612.0,,"<p>Based on the description of your problem I assume you have one method that takes a variable number of integers – let's call it <code>fun foo(vararg n: Int)</code>.</p>

<p>If that's the case, than the bytecode that gets generated is the following:</p>

<pre><code>public final static varargs foo([I)V
</code></pre>

<p>This means the method takes an array of <code>int</code>, which is an <code>IntArray</code> in Kotlin world.</p>

<p>In order to call that method with an <code>IntArray</code> you need to do:</p>

<pre><code>fun foo(vararg n: Int) {
    n.forEach(::println) // do something with n
}

fun main() {
    val numbers = intArrayOf(1, 2, 3, 4)
    foo(*numbers) // prints 1; 2; 3; 4
}
</code></pre>

<p>In that snippet of code, <code>*</code> is the <strong>spread operator</strong> and is briefly described <a href=""https://kotlinlang.org/docs/reference/functions.html#variable-number-of-arguments-varargs"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Also note that the spread operator can only be applied to arrays, so if you have a list of <code>Int</code> you need to convert it to an <code>IntArray</code> first an then apply the spread operator, like this:</p>

<pre><code>fun foo(vararg n: Int) {
    n.forEach(::println) // do something with n
}

fun main() {
    val numbers = listOf(1, 2, 3, 4)
    foo(*numbers.toIntArray()) // prints 1; 2; 3; 4
}
</code></pre>

<hr>

<h2>EDIT</h2>

<p>Following the update to your question, you can call that method from your Kotlin code like this:</p>

<pre><code>val builder = ... // obtain a Builder instance
val args = intArrayOf(1, 2, 4, 10)
builder.setBarcodeFormats(1, *args) // or any other meaningful value
</code></pre>
",,2019-10-10 15:52:32
58457746,2,58457626,,0,,2846923.0,,"<p>Assuming you have two models called <code>model1</code> and <code>model2</code>, and your inputs <code>x_1</code> and <code>x_2</code> are the tensor inputs to <code>model1</code>:</p>

<pre><code>x = [x_1, x_2]
y = model1(x)
y = tf.keras.layers.Concatenate()(y)
z = model2(y)
combined_model = tf.keras.Model(x, z)
</code></pre>
",,2019-10-18 20:27:20
58504701,2,58247978,,1,,14692.0,,"<p>One question to ask is whether you want to compare the variables <em>within</em> TFF (as part of the federated computation) or post-hoc/outside TFF (analyzing within Python).</p>

<p>Modifying the <code>tff.utils.IterativeProcess</code> construction performed by <a href=""https://www.tensorflow.org/federated/api_docs/python/tff/learning/build_federated_averaging_process"" rel=""nofollow noreferrer""><code>tff.learning.build_federated_averaging_process</code></a> may be a good way to go. In fact, I'd recommend forking the simplified implementation on GitHub at <a href=""https://github.com/tensorflow/federated/blob/master/tensorflow_federated/python/research/simple_fedavg/simple_fedavg.py"" rel=""nofollow noreferrer""><code>tensorflow_federated/python/research/simple_fedavg/simple_fedavg.py</code></a>, rather than digging into <code>tff.learning</code>.</p>

<p>Changing <a href=""https://github.com/tensorflow/federated/blob/753d72c3e65c5c7682acb23ae9650ab79f046f1e/tensorflow_federated/python/research/simple_fedavg/simple_fedavg.py#L291"" rel=""nofollow noreferrer"">the line</a> that performs a <a href=""https://www.tensorflow.org/federated/api_docs/python/tff/federated_mean"" rel=""nofollow noreferrer""><code>tff.fedetated_mean</code></a> on the updates from the clients to a <a href=""https://www.tensorflow.org/federated/api_docs/python/tff/federated_collect"" rel=""nofollow noreferrer""><code>tff.federated_collect</code></a> will will give a list of all the client's models that can then be compared to the global model.</p>

<p>Example:</p>

<pre class=""lang-py prettyprint-override""><code>client_deltas = tff.federated_collect(client_outputs.weights_delta)

@tff.tf_computation(server_state.model.type_signature,
                    client_deltas.type_signature)
def compare_deltas_to_global(global_model, deltas):
  for delta in deltas:
    # do something with delta vs global_model 

tff.federated_apply(compare_deltas_to_global, (server_state.model, client_deltas))
</code></pre>
",,2019-10-22 12:48:14
58520801,2,58518783,,7,,1103872.0,,"<p>The code you wrote has three accesses to shared state:</p>
<pre><code>var mutableVar = 0                        // access 1, init
withContext(Dispatchers.IO) {
    mutableVar = 1                        // access 2, write
}
System.out.println(&quot;value: $mutableVar&quot;)  // access 3, read
</code></pre>
<p>The three accesses are strictly sequentially ordered, with no concurrency between them, and you can rest assured that Kotlin's infrastructure takes care of establishing a <em>happens-before</em> edge when handing off to the <code>IO</code> thread pool and back to your calling coroutine.</p>
<p>Here's an equivalent example that may perhaps look more convincing:</p>
<pre><code>launch(Dispatchers.Default) {
    var mutableVar = 0             // 1
    delay(1)
    mutableVar = 1                 // 2
    delay(1)
    println(&quot;value: $mutableVar&quot;)  // 3
}
</code></pre>
<p>Since <code>delay</code> is a suspendable function, and since we're using the <code>Default</code> dispatcher that is backed by a thread pool, lines 1, 2 and 3 may each execute on a different thread. Therefore your question about <em>happen-before</em> guarantees applies equally to this example. On the other hand, in this case it is (I would hope) completely obvious that the behavior of this code is consistent with the principles of sequential execution.</p>
<p>Roman Elizarov, the primary author of Kotlin Coroutines, makes the same points in a <a href=""https://proandroiddev.com/what-is-concurrent-access-to-mutable-state-f386e5cb8292"" rel=""nofollow noreferrer"">blog post</a>. Relevant quote:</p>
<blockquote>
<p>Even though a coroutine in Kotlin can execute on multiple threads, it is just like a thread from a standpoint of mutable state. No two actions in the same coroutine can be concurrent.</p>
</blockquote>
",,2019-10-23 10:28:23
58549996,2,58547245,,1,,2425683.0,,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",,2019-10-24 22:37:58
58628919,2,58628263,,5,,8881488.0,,"<p>It is possible with the use of <em>contracts</em>. Currently in experimental in Kotlin 1.3.</p>

<blockquote>
  <p>It is possible to declare contracts for your own functions, but this feature is experimental, as the current syntax is in a state of early prototype and will most probably be changed. Also, please note, that currently the Kotlin compiler does not verify contracts, so it's a programmer's responsibility to write correct and sound contracts. -kotlinlang.org</p>
</blockquote>

<pre><code>@ExperimentalContracts
fun stuff() {
   var possibleNull: String? = ""test""
   if (testNull(possibleNull)) {
      mustPassNonNull(possibleNull)
   }
}

fun mustPassNonNull(possibleNull: String) {
   //use value that isn't null
}

@ExperimentalContracts
fun testNull(possibleNull: String?): Boolean {
   contract{
      returns(true) implies (possibleNull is String)
   }

   return possibleNull != null
}
</code></pre>

<p>Articles I referenced: </p>

<ul>
<li><a href=""https://kotlinlang.org/docs/reference/whatsnew13.html"" rel=""nofollow noreferrer"">https://kotlinlang.org/docs/reference/whatsnew13.html</a></li>
<li><a href=""https://blog.kotlin-academy.com/understanding-kotlin-contracts-f255ded41ef2"" rel=""nofollow noreferrer"">https://blog.kotlin-academy.com/understanding-kotlin-contracts-f255ded41ef2</a></li>
</ul>
",,2019-10-30 15:36:18
58645922,2,58645384,,0,,2846923.0,,"<p><code>model.predict()</code> executes the actual prediction. You can't predict on placeholders, you need to feed that function real data. If you explicitly feed it <code>None</code> for input data, then <em>the model must have been created with existing data tensor(s)</em>, and it <em>still is what executes the actual prediction</em>.</p>

<p>Normally, when a model is created, it has placeholder tensors for the input and output. However, you have the option of giving it real tensors, instead of placeholders. See an example of this <a href=""https://stackoverflow.com/a/51205167/2846923"">here</a>. In this case, and only this case, you can use fit, predict, or evaluate without feeding it data. The only reason you can do that is because <em>the data already exists</em>.</p>
",,2019-10-31 14:48:22
58656237,2,58655933,,1,,12023442.0,,"<p>The purpose of the validation accuracy is an estimation to see how your model generalises on unseen data. So when you are saving checkpoints with best validation accuracy , what happens is you are saving the weight(the ones which are learned by training) that best predicts results for the unseen data. So by having multiple checkpoints saved you can utilize these checkpoints when testing the model with test data( which may be taken from say a real time use case), and select the model which works well with your test data</p>

<p>Hope this helps</p>
",,2019-11-01 08:34:10
58668197,2,58666537,,0,,200699.0,,"<p>You need to declare your model's inputs somewhere, typically something like </p>

<pre><code>model = tf.keras.Model(inputs=inputs, outputs=outputs)
</code></pre>

<p>Try taking out the last line in your model building function </p>

<pre><code>self.g_Model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
</code></pre>

<p>and move it to your train function, once you have declared your model you can use the output of the model as your output layer and declare your input layer with something like </p>

<pre><code> input_size = CONFIG.g_keras_lstm_max_document_length
 input_layer = tf.keras.layers.Input(input_size)
 output_layer = self.build_model()
 model = tf.keras.Model(inputs=input_layer, outputs=output_layer )

 model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) 
 model.fit( .... ) 
</code></pre>
",,2019-11-02 04:15:54
58979469,2,57631324,,7,,4278309.0,,"<p>As I understand, it allows Tensorflow to expose a function or class under a different name. For example, the <a href=""https://www.tensorflow.org/api_docs/python/tf/distribute/Server"" rel=""noreferrer"">Server</a> class within the distribute module actually lives in the <code>training/server_lib.py</code> file within the repo, but, since it is exported as <code>distribute.Server</code>, you can use it like <code>tf.distribute.Server()</code>. </p>

<pre><code># training/server_lib.py
@tf_export(""distribute.Server"", v1=[""distribute.Server"", ""train.Server""])
@deprecation.deprecated_endpoints(""train.Server"")
class Server(object):
  ...
</code></pre>

<p>It makes it confusing to find the code, but I imagine it's a more flexible way to create these ""logical"" modules.</p>
",,2019-11-21 16:26:11
59135801,2,59044979,,0,,2993180.0,,"<p>You can create <code>MultiWorkerMirroredStartegy</code> in the following way</p>

<pre><code>multiworker_strategy = tf.distribute.experimental.MultiWorkerMirroredStrategy()
</code></pre>

<p>For this you also need to configure multi-worker setup using <a href=""https://cloud.google.com/ml-engine/docs/tensorflow/distributed-training-details#tensorflow-config"" rel=""nofollow noreferrer"">TF_CONFIG</a> on different nodes. </p>

<pre><code>TF_CONFIG='{""cluster"": {""worker"": [""worker1-IP:port"", ""worker2-IP:port""]}, ""task"": {""index"": 0, ""type"": ""worker""}}'
</code></pre>

<p>In this case the training code need to run individually on each node. You can also follow official tensorflow docs on <a href=""https://www.tensorflow.org/guide/distributed_training#setting_up_tf_config_environment_variable"" rel=""nofollow noreferrer"">distributed training</a>. If you are distributing the training across large number of nodes, consider using Kubernetes.</p>
",,2019-12-02 09:20:33
59290179,2,59269059,,3,,4257162.0,,"<p>As per your comment, you said you are using <code>KotlinTest</code>.</p>

<p>In KotlinTest, I believe you can use <a href=""https://github.com/kotlintest/kotlintest/blob/master/doc/reference.md#soft-assertions"" rel=""nofollow noreferrer""><code>assertSoftly</code></a> for the behavior you want:</p>

<blockquote>
  <p>Normally, assertions like shouldBe throw an exception when they fail. But sometimes you want to perform multiple assertions in a test, and would like to see all of the assertions that failed. KotlinTest provides the assertSoftly function for this purpose.</p>

<pre><code>assertSoftly {
  foo shouldBe bar
  foo should contain(baz)
}
</code></pre>
  
  <p>If any assertions inside the block failed, the test will continue to run. All failures will be reported in a single exception at the end of the block.</p>
</blockquote>

<p>And then, we can convert your test to use <code>assertSoftly</code>:</p>

<pre><code>assertSoftly {
    success shouldBe true
    shouldNotThrowAny {
        verify(exactly = 1) { mock.methodcall(any()) }
    }
}
</code></pre>

<p>It's necessary to wrap <code>verify</code> in <code>shouldNotThrowAny</code> to make <code>assertSoftly</code> aware of it when it throws an exception</p>
",,2019-12-11 16:29:38
59387508,2,59387425,,0,,549372.0,,"<p>The <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/synchronized.html"" rel=""nofollow noreferrer""><code>synchronized</code></a> keyword had been deprecated in Kotlin.</p>

<p>While it clearly reads:</p>

<blockquote>
  <p><code>UnsupportedOperationException</code> - <strong>always</strong></p>
</blockquote>

<p>Therefore, even if it would be known, it would still be quite useless.</p>

<p><code>kotlinx.coroutines.internal.synchronized</code> reads ""internal"" and obviously is something else. The best alternative might be <code>Coroutines.Sync.Mutex</code>, once <code>synchronized</code> won't exist anymore.</p>
",,2019-12-18 07:43:47
59531820,2,56862492,,3,,5681083.0,,"<p><code>tf.data.Dataset</code> is a more abstract object whose job is to define the data pipeline. If you want to save intermediate results to speed up your data pipeline you can use <code>tf.data.Dataset.cache()</code> or <code>tf.data.Dataset.prefetch()</code> <a href=""https://stackoverflow.com/questions/48068013/how-to-speed-up-batch-preparation-when-using-estimators-api-combined-with-tf-dat"">(more on it here)</a></p>

<p>If you are interested in saving the sequence of operations in your data pipeline, I assume there is no such thing and you need to keep the code for data pipeline. I am not aware of any method that can extract the graph of data pipeline of Dataset API. If anyone is aware of that please add to the answer.</p>
",,2019-12-30 13:38:30
59571483,2,59569398,,1,,1079842.0,,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",,2020-01-02 23:48:21
59583923,2,59583747,,1,,10123804.0,,"<p>Below code will show the difference between two.</p>

<pre><code>t1 = tf.constant(value=1)
t1.dtype
</code></pre>

<p>Output
tf.int32</p>

<pre><code>t2 = tf.constant(value=1.0)
t2.dtype
</code></pre>

<p>Output
tf.float32</p>

<p><strong>now adding these two tensors will throw an error as data type for these two are different.</strong> </p>

<pre><code>t3 = tf.add(x=t1, y=t2)
</code></pre>

<p>Output:</p>

<p>Traceback (most recent call last):
  File ""c:\ProgramData\Anaconda3\envs\tensorflow_cpu\lib\site-packages\tensorflow\python\framework\op_def_library.py"", line 527, in _apply_op_helper
    preferred_dtype=default_dtype)
  File ""c:\ProgramData\Anaconda3\envs\tensorflow_cpu\lib\site-packages\tensorflow\python\framework\ops.py"", line 1224, in internal_convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File ""c:\ProgramData\Anaconda3\envs\tensorflow_cpu\lib\site-packages\tensorflow\python\framework\ops.py"", line 1018, in _TensorTensorConversionFunction
    (dtype.name, t.dtype.name, str(t)))
ValueError: Tensor conversion requested dtype int32 for Tensor with dtype float32: 'Tensor(""Const_4:0"", shape=(), dtype=float32)'</p>
",,2020-01-03 18:59:35
59640714,2,55993735,,1,,10359765.0,,"<p>I'd like to point out that MirroredStrategy actually <em>divides</em> up the <em>global batch size</em> for each gpu. </p>

<p>Hence with a global batch size of <code>64</code>, <em>each</em> GPU (assuming we're training with 4 GPUs) would receive <code>64/4=16</code> input examples per training step.</p>

<hr>

<p>The <a href=""https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_keras"" rel=""nofollow noreferrer"">tensorflow docs</a> on <code>Distributed training with TensorFlow</code> had this to say about the following methods of providing the training data and evaluation input
 (emphasis my own):</p>

<p><strong>Loading Data from a tf.data.Dataset</strong></p>

<pre class=""lang-py prettyprint-override""><code>dataset = tf.data.Dataset.from_tensors(([1.], [1.])).repeat(100).batch(10)
model.fit(dataset, epochs=2)
model.evaluate(dataset)
</code></pre>

<p><strong>Loading Data from Numpy Arrays</strong></p>

<pre class=""lang-py prettyprint-override""><code>import numpy as np
inputs, targets = np.ones((100, 1)), np.ones((100, 1))
model.fit(inputs, targets, epochs=2, batch_size=10)
</code></pre>

<blockquote>
  <p>In both cases (dataset or numpy), each batch of the given input is <strong>divided</strong> equally among the multiple replicas. For instance, if using MirroredStrategy with 2 GPUs, <strong>each batch of size 10 will get divided among the 2 GPUs, with each receiving 5 input examples in each step</strong>.</p>
</blockquote>
",,2020-01-08 06:46:14
59661449,2,59656318,,1,,5108062.0,,"<p>You should define the <code>output_shapes</code> for the <code>tf.data.Dataset.from_generator</code> call. You can find the documentation at the <a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset?version=stable#from_generator"" rel=""nofollow noreferrer"">Tensorflow page</a>.</p>
",,2020-01-09 10:01:16
59832312,2,59832134,,1,,5705408.0,,"<p>this is the key describes:</p>

<blockquote>
  <p>Store uses generic keys as identifiers for data. A key can be any value object that properly implements toString(), equals() and hashCode(). When your Fetcher function is called, it will be passed a particular Key value. Similarly, the key will be used as a primary identifier within caches (Make sure to have a proper hashCode()!!).</p>
</blockquote>

<p>the key is to define your data, the object which you use as key have to override the <code>hashCode</code> method, define your own rule.</p>

<p>here is some use in Store:</p>

<blockquote>
  <p>suspend fun Store.get(key: Key): Value: This method returns a single value for the given key. If available, it will be returned from the in memory cache or the persister</p>
</blockquote>

<p>it is according to your set key to return the data. its functions as the key in <code>hashmap</code></p>
",,2020-01-20 23:38:37
59849270,2,56305657,,0,,11529544.0,,"<p>In kotlin you can use nullable objects with the secure call operator ""?"".
Now, you have a static variable in PHP, in kotlin there is no ""static"" as such, however the companion object {} fulfills the same function.
In this way the equivalent of <code>public static $bitValueTable = null;</code>
in kotlin is: 
<code>
companion object {
        var bitValueTable : Array&lt;Type&gt;? = null
    }</code></p>

<p>Obs:</p>

<ul>
<li>The default value of the variables in kotlin is public</li>
</ul>
",,2020-01-21 21:09:36
59854127,2,59853659,,0,,5370382.0,,"<p>You declared constant (public static String id = ""id"") at Java interface.</p>

<p>Whereas Kotlin interface declared abstract property. See Kotlin reference: <a href=""https://kotlinlang.org/docs/reference/interfaces.html"" rel=""nofollow noreferrer"">https://kotlinlang.org/docs/reference/interfaces.html</a></p>
",,2020-01-22 06:51:23
59915292,2,59915281,,1,,1715829.0,,"<p>Kotlin is <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.math/sin.html"" rel=""nofollow noreferrer"">expecting radians</a> and calculator is expecting degrees.</p>
",,2020-01-26 03:24:27
59937660,2,59933911,,2,,873237.0,,"<p>Yes you need to decode the <code>base64</code> into a <code>ByteArray</code> then write the bytes to a location with the postfix <code>.apk</code>.  What you have is a <code>String</code> where the <code>bytes</code> are <code>encoded</code> using the <code>base64</code> encoding scheme.</p>

<p>Since your using <code>kotlin</code> you might what to look here to get the <code>ByteArray!</code>[1] from the <code>String</code>.  Then just ensure the file you write has <code>.apk</code> extension.</p>

<p>[1] <a href=""https://developer.android.com/reference/kotlin/java/util/Base64.Decoder#decode(kotlin.String)"" rel=""nofollow noreferrer"">https://developer.android.com/reference/kotlin/java/util/Base64.Decoder#decode(kotlin.String)</a></p>
",,2020-01-27 19:27:59
59947856,2,59947498,,2,,10134209.0,,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",,2020-01-28 11:34:42
60014627,2,60013980,,0,,5046896.0,,"<p>The most easier way to do so is to make the sparse tensor as a 2D tensor and get the weights of the embedding matrix and then reshape.</p>

<pre class=""lang-py prettyprint-override""><code># First make the z as a 2D arr and create a sparse tensor 
z = np.array([
        [0, 1, 2, 3],  # get the row 0,1,2,3 of the embedding matrix w and get the sum
        [2, 3],
        [1, 3],
        [2],
        [0, 1, 3],
        [1, 2]
      ])

sp = tf.SparseTensor(values=[0, 1, 2, 3, 2, 3, 1, 3, 2, 0, 1, 3, 1, 2],
                     indices=[[0,0],[0,1],[0,2],[0,3],[1,2],[1,3],[2,1],
                              [2,3],[3,2],[4,0],[4,1],[4,3],[5,1],[5,2]],
                     dense_shape=[6, 4])

res = tf.nn.embedding_lookup_sparse(w, sp, None, combiner='sum')

res.numpy()
# the output
array([[-3.6457794 , -1.5215762 ,  1.7455802 , -2.5802398 ],
       [-2.227188  ,  0.13151208, -0.9329706 , -0.5421516 ],
       [ 0.2612    , -0.6687883 ,  1.7068193 , -0.03506255],
       [-1.3400027 , -0.46362385, -1.3652185 ,  0.27220532],
       [-2.3057768 , -1.0579524 ,  3.1107986 , -2.8524451 ],
       [-0.19161725, -1.7275481 , -0.0906471 ,  1.0514997 ]],

# reshape
tf.reshape(res, [-1, 2, 4])
# that is exacly what I want.
array([[[-3.6457794 , -1.5215762 ,  1.7455802 , -2.5802398 ],
        [-2.227188  ,  0.13151208, -0.9329706 , -0.5421516 ]],

       [[ 0.2612    , -0.6687883 ,  1.7068193 , -0.03506255],
        [-1.3400027 , -0.46362385, -1.3652185 ,  0.27220532]],

       [[-2.3057768 , -1.0579524 ,  3.1107986 , -2.8524451 ],
        [-0.19161725, -1.7275481 , -0.0906471 ,  1.0514997 ]]])

# print w, and the above result is right
w.numpy()

array([[-2.5669768 , -0.38916406,  1.4039794 , -2.8173826 ],
       [ 1.1483854 , -1.2639242 ,  1.2745714 ,  0.7792944 ],
       [-1.3400027 , -0.46362385, -1.3652185 ,  0.27220532],
       [-0.8871854 ,  0.5951359 ,  0.43224794, -0.8143569 ]],
      dtype=float32)
</code></pre>

<p>So, forget the 3D sparse tensor, simply convert it to 2D tensor. Because you only care about the values (index of rows, which are used to get the corresponding rows of the embedding matrix) in the sparse tensor.</p>
",,2020-02-01 06:33:23
60016743,2,58253408,,1,,10133797.0,,"<p>Per my <a href=""https://github.com/tensorflow/tensorflow/pull/33318"" rel=""nofollow noreferrer"">PR</a>, this is the more reliable (but not guaranteed) workaround:</p>

<pre class=""lang-py prettyprint-override""><code>def K_eval(x):
    try:
        return K.get_value(K.to_dense(x))
    except:
        eval_fn = K.function([], [x])
        return eval_fn([])[0]
</code></pre>

<hr>

<p><strong>Update</strong>: mind the <em>distrubution context</em> under which a <code>Tensor</code> is to be evaluated; in TF2.2, a <code>tf.Variable</code> or <code>tf.Tensor</code> created under <code>tf.python.distribute.distribution_strategy_context.in_replica_context() == True</code> will fail any <code>K.eval</code>-etc attempts. Looks like tensors simply aren't meant to be evaluated there.</p>
",,2020-02-01 12:11:44
60081802,2,60081775,,3,,2380830.0,,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",,2020-02-05 18:16:16
62292059,2,62291458,,0,,5860681.0,,"<p>You can use model checkpoint callbacks as follows: for example capture the maximum accuracy obtained so far and save it in the checkpoint file.<br>
<br></p>

<pre><code>checkpoint_filepath = '/tmp/checkpoint'
model_checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(
                 filepath=checkpoint_filepath,
                 monitor='val_acc',
                 mode='max',
                 save_best_only=True)
</code></pre>

<p>and then fit the model. 
<code>model.fit(epochs=10, callbacks=[model_checkpoint_callback])</code>
you can reload it again for update. 
<code>model.load(checkpoint_filepath)</code></p>
",,2020-06-09 21:20:49
62318185,2,62283491,,6,,1731626.0,,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",,2020-06-11 06:15:04
62338873,2,61689383,,0,,7333367.0,,"<p>You have to call MediaSession.setMetadata(MediaMetadataCompat metadata) every time track information changes.
<a href=""https://developer.android.com/guide/topics/media-apps/media-apps-overview#mediasession-and-mediacontroller"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/media-apps-overview#mediasession-and-mediacontroller</a>
To get the update for Metadata change you need to register for MediaController.Callback for calling MediaControllerCompat.registerCallback(ControllerCallback).
So when you set new Metadata for MediaSession, this Metadata will be received in onMetadataChanged (MediaMetadata metadata) callback of MediaController.Callback
(<a href=""https://developer.android.com/reference/android/media/session/MediaController.Callback?hl=en#onMetadataChanged(android.media.MediaMetadata)"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/session/MediaController.Callback?hl=en#onMetadataChanged(android.media.MediaMetadata)</a>) method.</p>
",,2020-06-12 06:41:58
62353481,2,62344922,,1,,9394700.0,,"<p>The fragments are not opened using Intents. You should create an activity that holds your second Fragment, or you should replace current fragment with the second (in case if you have container for holding the fragment inside your current activity). Intent is only for opening the Activity, not Fragment (!)</p>

<p><a href=""https://developer.android.com/guide/components/fragments"" rel=""nofollow noreferrer"">https://developer.android.com/guide/components/fragments</a> go through this</p>
",,2020-06-12 22:41:57
62418607,2,62418423,,0,,2228525.0,,"<p>(Updated) I am not an expert in Kotlin but you can do something like this :</p>

<pre><code>import kotlin.reflect.KClass
import kotlin.reflect.full.createInstance

class A {
    fun greet() {
        println(""Hello A"");
    }
}

class B{
    fun greet() {
        println(""Hello B"");
    }
}

fun &lt;T : Any&gt; maker(clazz: KClass&lt;T&gt;): T {
    return clazz.createInstance();
}

val aObj = maker&lt;A&gt;(A::class);
aObj.greet();

val bObj = maker&lt;B&gt;(B::class);
bObj.greet();
</code></pre>

<p>Output:</p>

<pre><code>Hello A
Hello B
</code></pre>

<p>I hope now it makes sense you just need to pass the class to the method and it returns an object.</p>

<p>As you will be using Animal as a parent class so you can replace Any => Animal </p>

<pre><code>fun &lt;T : Animal&gt; maker(clazz: KClass&lt;T&gt;): T {
    return clazz.createInstance();
}
</code></pre>
",,2020-06-16 22:33:48
62486856,2,62486510,,0,,1353832.0,,"<p>It seems like you haven't setup the notification channel that you are trying to add the notification to. As a test can you add this code before the <code>NotificationCompat.Builder</code> setup?</p>
<pre><code>//Kotlin
val notificationManager = NotificationManagerCompat.from(context)

if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {
    notificationManager.createNotificationChannel(NotificationChannel(&quot;101&quot;, &quot;Test&quot;, NotificationManager.IMPORTANCE_DEFAULT))
}

//Java
NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context1);

if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {
    notificationManager.createNotificationChannel(new NotificationChannel(&quot;101&quot;, &quot;Test&quot;, NotificationManager.IMPORTANCE_DEFAULT));
}
</code></pre>
<p>Notification must be assigned to Channels in Android 8.0 (API level 26). Please see the NotificationChannel documentation found <a href=""https://developer.android.com/training/notify-user/channels"" rel=""nofollow noreferrer"">here</a></p>
<p>This is most likely the reason the Notification is not showing on your device, however the Worker is definitely still working. You can see some logs of what your Workers have done in both the Debug output and Logcat windows. Some examples of my own tests can be seen below:</p>
<pre><code>//Debug log
I/WM-WorkerWrapper: Worker result SUCCESS for Work [ id=aa30d1f6-8683-43b8-bf6d-67e7b38a6d75, tags={ com.test.stackoverflowtest.BackgroundWork } ]

//Logcat
2020-06-20 15:02:23.743 4827-4899/com.test.stackoverflowtest I/WM-WorkerWrapper: Worker result SUCCESS for Work [ id=aa30d1f6-8683-43b8-bf6d-67e7b38a6d75, tags={ com.test.stackoverflowtest.BackgroundWork } ]
</code></pre>
",,2020-06-20 14:05:21
62493159,2,62181095,,0,,365340.0,,"<p>Android things exposes a set of APIs that enable you to control various peripherals.</p>
<p>The <a href=""https://developer.android.com/things/sdk/apis/bluetooth"" rel=""nofollow noreferrer"">Android Things Bluetooth APIs</a> extends the basic android bluetooth APIs that shall provide access to Bluetooth functionality and this can be used for configuration and verification of bluetooth.</p>
<p>At connectivity level, the <a href=""https://developer.android.com/reference/android/net/ConnectivityManager"" rel=""nofollow noreferrer"">connectivity manager</a> shall be of great help in monitoring and verification of various network connectivity status and related functionalities in ethernet and wireless.</p>
<p>The <a href=""https://developer.android.com/reference/android/net/wifi/WifiManager"" rel=""nofollow noreferrer"">WiFi manager APIs</a> enable communication with wireless stack which can be used in managing/checking Wi-Fi specific operations.</p>
<p>In case if you want to validate your development features or driver changes on network connectivity part of stack (Bluetooth, Cellular and Wi-Fi), the <a href=""https://source.android.com/devices/tech/connect/connect_tests"" rel=""nofollow noreferrer"">Android Connectivity Testing Suite (ACTS)</a>  can help for verification of functionality and stability.</p>
",,2020-06-21 00:20:06
62529762,2,62526851,,0,,6607435.0,,"<p><strong>Triple is the option of your question</strong></p>
<p>Kotlin language provides a simple datatype to store three values in a single instance. This can be done using a data class known as Triple. It is a simple generic class that stores any three values, there is no valuable meaning of the relationship between the three values. The comparison between two Triple objects is done on the basis of values, i.e. two Triples are equal only if all three component are equal.</p>
<p><strong>Class Definition –</strong></p>
<pre><code>data class Pair&lt;out A, out B, out C&gt; : Serializable
</code></pre>
<p>There are three parameters:
A – type of the first value
B – type of the second value
C – type of the third value</p>
<p><strong>Constructor –</strong>
In Kotlin, constructor is a special member function that is invoked when an object of the class is created primarily to initialize variables or properties. To create a new instance of the Triple we use:</p>
<pre><code>Pair(first: A, second: B, third: C)
</code></pre>
<p>Kotlin example of creating triple using the constructor –</p>
<pre><code>fun main() { 
    val (x, y, z) = Triple(1, &quot;Person&quot;, 2.0) 
    println(x) 
    println(y) 
    println(z) 
} 
</code></pre>
<p><strong>Output:</strong></p>
<p>1
Person
2.0</p>
",,2020-06-23 07:43:40
62561442,2,62561154,,-1,,3084577.0,,"<blockquote>
<p>How can I create the foreground notification only once or at least how not to play notification sound on successive startForegroundService() calls?</p>
</blockquote>
<p>You can check if the notification is already visible and show it only if it's not visible. You need to have a reference to the notification PendingIntent and notificationId.</p>
<pre><code>fun isNotificationVisible(context: Context, notificationIntent: Intent, notificationId: Int): Boolean {
    return PendingIntent.getActivity(context, notificationId, notificationIntent, PendingIntent.FLAG_NO_CREATE) != null
}
</code></pre>
<blockquote>
<p>how can I go back to my application when I click the foreground notification?</p>
</blockquote>
<p>You need a PendingIntent to open the app from a notification. To open the last activity shown you can remember this using Preferences in the onResume() method of each activity and route the notification into a routing activity that starts the right activity according to the value saved into the preferences.</p>
<pre><code>val intent = Intent(context, RouteActivity::class.java)
val notificationBuilder = NotificationCompat.Builder(context, channelId)
    .setContentIntent(intent)
val notificationManager = NotificationManagerCompat.from(context)
val notification = notificationBuilder.build()
notificationManager.notify(notificationId, notification)
</code></pre>
<p>Another way to do this is to update the notification PendingIntent if it's already visible with the last activity shown. In this case you don't have to store any value on Preferences and you don't need a route activity.</p>
",,2020-06-24 18:07:02
62578531,2,62577622,,0,,2068732.0,,"<p>When your second activity goes to foreground, its <code>onResume()</code> method is called.</p>
<p>When this happens, your first activity's <code>onPause()</code> is called.</p>
<p>Check the official documentation to get a better understanding of activity's lifecyle on Android:</p>
<p><a href=""https://developer.android.com/guide/components/activities/activity-lifecycle"" rel=""nofollow noreferrer"">https://developer.android.com/guide/components/activities/activity-lifecycle</a></p>
",,2020-06-25 15:07:31
62620580,2,62620465,,0,,6831109.0,,"<p>You can use Shared Preferences for this</p>
<p>set values example</p>
<pre><code>SharedPreferences pref =   
PreferenceManager.getDefaultSharedPreferences(this);
Editor edit = pref.edit();
edit.putBoolean(&quot;swDispo&quot;, true);
edit.putString(&quot;mDateSelVM&quot;, &quot;your_string&quot;);
edit.commit(); 
</code></pre>
<p>get values example</p>
<pre><code>SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(this);
String username = pref.getString(&quot;mDateSelVM&quot;, &quot;default value&quot;); 
Boolean yourLocked = prefs.getBoolean(&quot;swDispo&quot;, false);
</code></pre>
<p>how to exactly activities work can be found here
<a href=""https://developer.android.com/guide/components/activities/activity-lifecycle"" rel=""nofollow noreferrer"">https://developer.android.com/guide/components/activities/activity-lifecycle</a></p>
",,2020-06-28 09:21:54
62668758,2,62668481,,0,,12036557.0,,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",,2020-07-01 02:31:23
62683800,2,59893850,,9,,8671242.0,,"<p>If I understand correctly from this statement:</p>
<blockquote>
<p>How can I accumulate the losses/gradients and then apply a single optimizer step?</p>
</blockquote>
<p>@Nagabhushan is trying to accumulate gradients and then apply the optimization on the (mean) accumulated gradient. The answer provided by @TensorflowSupport does not answers it.
In order to perform the optimization only once, and accumulate the gradient from several tapes, you can do the following:</p>
<pre><code>for i in range(num_epochs):
    print(f'Epoch: {i + 1}')
    total_loss = 0

    # get trainable variables
    train_vars = self.model.trainable_variables
    # Create empty gradient list (not a tf.Variable list)
    accum_gradient = [tf.zeros_like(this_var) for this_var in train_vars]

    for j in tqdm(range(num_samples)):
        sample = samples[j]
        with tf.GradientTape as tape:
            prediction = self.model(sample)
            loss_value = self.loss_function(y_true=labels[j], y_pred=prediction)
        total_loss += loss_value

        # get gradients of this tape
        gradients = tape.gradient(loss_value, train_vars)
        # Accumulate the gradients
        accum_gradient = [(acum_grad+grad) for acum_grad, grad in zip(accum_gradient, gradients)]


    # Now, after executing all the tapes you needed, we apply the optimization step
    # (but first we take the average of the gradients)
    accum_gradient = [this_grad/num_samples for this_grad in accum_gradient]
    # apply optimization step
    self.optimizer.apply_gradients(zip(accum_gradient,train_vars))
        

    epoch_loss = total_loss / num_samples
    print(f'Epoch loss: {epoch_loss}')
</code></pre>
<p>Using tf.Variable() should be avoided inside the training loop, since it will produce errors when trying to execute the code as a graph. If you use tf.Variable() inside your training function and then decorate it with &quot;@tf.function&quot; or apply &quot;tf.function(my_train_fcn)&quot; to obtain a graph function (i.e. for improved performance), the execution will rise an error.
This happens because the tracing of the tf.Variable function results in a different behaviour than the observed in eager execution (re-utilization or creation, respectively). You can find more info on this in the <a href=""https://www.tensorflow.org/guide/function#variables"" rel=""noreferrer"">tensorflow help page</a>.</p>
",,2020-07-01 19:06:47
62709933,2,62709712,,1,,132121.0,,"<p>Great question @DeveScie</p>
<p>The reason it failed is because the <code>doSomething()</code> without any parameter function does not exists in byte code level. To understand, you need to see how your kotlin code is converted into Java byte code.</p>
<p>Here is your class's Java representation <em>(some unrelated code is omitted)</em></p>
<pre class=""lang-java prettyprint-override""><code>public final class MyViewModel {
   public final void doSomething(@NotNull String myVar) {
      Intrinsics.checkParameterIsNotNull(myVar, &quot;myVar&quot;);
   }

   // $FF: synthetic method
   public static void doSomething$default(MyViewModel var0, String var1, int var2, Object var3) {
      if ((var2 &amp; 1) != 0) {
         var1 = &quot;defValue&quot;;
      }

      var0.doSomething(var1);
   }
}
</code></pre>
<p>And here is a Kotlin test class that uses this function</p>
<pre class=""lang-kotlin prettyprint-override""><code>class TestClass {
    fun testFunction() {
        val vm = MyViewModel()
        vm.doSomething()
        vm.doSomething(&quot;Value&quot;)
    }
}
</code></pre>
<p>Which results in Java code below</p>
<pre><code>public final class TestClass {
   public final void testFunction() {
      MyViewModel vm = new MyViewModel();
      MyViewModel.doSomething$default(vm, (String)null, 1, (Object)null);
      vm.doSomething(&quot;Value&quot;);
   }
}
</code></pre>
<p>As you can see, the default value you have in kotlin is actually called by:</p>
<pre><code>MyViewModel.doSomething$default(vm, (String)null, 1, (Object)null);
</code></pre>
<p>So, you should have a separate method for other case. Hope it helps.</p>
<hr />
<p><strong>UPDATE:</strong> Based on @Uli's answer below, another solution is to add <code>@JvmOverloads</code> to your kotlin function.</p>
<pre class=""lang-kotlin prettyprint-override""><code>class MyViewModel {
    @JvmOverloads
    fun doSomething(myVar: String = &quot;defValue&quot;) {
    }
}
</code></pre>
<p>Now becomes following in Java</p>
<pre class=""lang-java prettyprint-override""><code>public final class MyViewModel {
    @JvmOverloads
    public final void doSomething() {
        doSomething$default(this, (String) null, 1, (Object) null);
    }

    @JvmOverloads
    public final void doSomething(@NotNull String myVar) {
        Intrinsics.checkParameterIsNotNull(myVar, &quot;myVar&quot;);
    }

    // $FF: synthetic method
    public static void doSomething$default(MyViewModel var0, String var1, int var2, Object var3) {
        if ((var2 &amp; 1) != 0) {
            var1 = &quot;defValue&quot;;
        }

        var0.doSomething(var1);
    }
}
</code></pre>
<p>Thanks Uli for reminding me about this option.</p>
",,2020-07-03 06:49:59
62720305,2,62713062,,0,,13026218.0,,"<p>Add your checkboxes inside a layout and then on click of each check box, loop through all children of the layout and setChecked(false) for other checkboxes.</p>
<p>Example -</p>
<p>In xml-</p>
<pre><code>&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
android:id=&quot;@+id/linearLayout&quot;&gt;

&lt;CheckBox
    android:id=&quot;@+id/cb0to100&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;0 to 100&quot;
    android:onClick=&quot;deSelectOthers&quot;/&gt;

&lt;CheckBox
    android:id=&quot;@+id/cb100to200&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;100 to 200&quot;
    android:onClick=&quot;deSelectOthers&quot;/&gt;

&lt;CheckBox
    android:id=&quot;@+id/cb200to300&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;200 to 300&quot;
    android:onClick=&quot;deSelectOthers&quot;/&gt;
</code></pre>

<p>Java code -</p>
<pre><code>public void deSelectOthers(View view) {
    LinearLayout linearLayout=findViewById(R.id.linearLayout);

    for(int i=0; i&lt;linearLayout.getChildCount(); i++){
        CheckBox checkBox=(CheckBox)linearLayout.getChildAt(i);
        if(checkBox.getId() != view.getId()){
            checkBox.setChecked(false);
        }
    }
}
</code></pre>
<p>I hope this helps you now.</p>
",,2020-07-03 17:37:12
62728819,2,57842401,,1,,7220545.0,,"<p>I can see that you are using an older version of TensorFlow. The API has since moved to <code>tf.data.experimental</code>. If you use the <code>tf.data.Dataset</code> API then you can use the following code to get the size of the tensor.</p>
<pre><code>def _element_length_fn(x, y=None):
    return array_ops.shape(x)[0]
</code></pre>
",,2020-07-04 11:58:55
62773992,2,62773775,,1,,3269958.0,,"<p>Please move your <code>attr.xml</code> file from <code>xml</code> folder to the <code>res-&gt;values</code> folder and change the <code>XML</code> as below:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;resources&gt;
    &lt;declare-styleable name=&quot;Bubble&quot;&gt;
        &lt;attr name=&quot;bubbleSize&quot; format=&quot;enum&quot;&gt;
            &lt;enum name=&quot;small&quot; value=&quot;0&quot;/&gt;
            &lt;enum name=&quot;big&quot; value=&quot;1&quot;/&gt;
        &lt;/attr&gt;
    &lt;/declare-styleable&gt;
&lt;/resources&gt;
</code></pre>
",,2020-07-07 11:13:34
62784686,2,62784444,,0,,966550.0,,"<p>As long as both your apps (A and B) are signed with same certificate then you can share resources between each other. This is a common practice within a lot of apps available at play store.</p>
<p><a href=""https://developer.android.com/guide/topics/manifest/permission-element.html#plevel"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/permission-element.html#plevel</a>
<a href=""https://developer.android.com/guide/topics/manifest/manifest-element.html#uid"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-element.html#uid</a></p>
",,2020-07-07 22:11:03
62830821,2,62827393,,0,,13889707.0,,"<p>You could use fragment.</p>
<p>First, use  in your activity layout as a container of Fragment, here we give it a id like, android:id=&quot;+id/fragment_container&quot;</p>
<p>Second, create a layout xml file for your fragment, here we give it a name, like fragment_page_3.xml</p>
<p>Then create a subclass of Fragment, and override its onCreateView() method, where you inflate your fragment's layout. Code here</p>
<pre><code>    class Page3Fragment : Fragment() {

    override fun onCreateView(
            inflater: LayoutInflater,
            container: ViewGroup?,
            savedInstanceState: Bundle?
    ): View {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_page_3, container, false)
    }
}
</code></pre>
<p>Finally, in clickListener, you could use fragmentManager load your fragment, code like this:</p>
<pre><code>button2.setOnClickListener {
    val fragment = Page3Fragment()
    val fm = supportFragmentManager
    fm.beginTransaction()
            .add(R.id.fragment_container,fragment)
            .commit()
} 
</code></pre>
<p>I just want to give you some ideas.</p>
<p>You cannot write code like this, this is wrong implementation for your app because you may need several fragment and you need a Callbacks interface implemented by your activity.</p>
<p>If you could change your content of UI, it's a better way.</p>
<p>To learn more, you could refer <a href=""https://developer.android.com/guide/components/fragments"" rel=""nofollow noreferrer"">https://developer.android.com/guide/components/fragments</a></p>
",,2020-07-10 09:02:09
62919282,2,62918965,,1,,9773423.0,,"<p>If you are able to add them from the xml file, you can add these attributes in your views (needed ones):</p>
<pre><code>android:textSize=&quot;15dp&quot;
android:textColor=&quot;@color/colorPrimaryDark&quot;
android:textStyle=&quot;bold&quot;
</code></pre>
<ul>
<li>Try to invalidate the cached and restart Android Studio, also make sure sure that you click on the views for the attributes to show in the design section.</li>
</ul>
",,2020-07-15 16:15:32
62966849,2,62934293,,2,,13952350.0,,"<p><strong>I Think</strong>,change your <code>mediaRecorder?.setoutFormat</code> to</p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.MPEG_2_TS)
</code></pre>
<p><strong>Or</strong></p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)
</code></pre>
<p>prepare your MediaPlayer <code>mediaPlayer?.prepare()</code> before starting of your recording</p>
<p>And, play your Background music (with volume as you want) and start the recorder .</p>
<p>May it Works. Thanks!</p>
",,2020-07-18 09:26:14
63011934,2,62948266,,1,,9690875.0,,"<p>Tensorflow Hub is a platform for sharing pre-trained model pieces or whole models, and an API to facilitate this sharing. In TF 1.x, this API was a stand-alone API and in TF 2.x this API (SavedModel: <a href=""https://www.tensorflow.org/guide/saved_model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/guide/saved_model</a>) is part of the core TF API.</p>
<p>In the proposed training life-cycle example, using SavedModel to save relevant model between the training steps could simplify pipeline architecture design. Alternatively, you could use coding examples available as part of the TF Model Garden to perform this pre-training: <a href=""https://github.com/tensorflow/models/tree/master/official/nlp"" rel=""nofollow noreferrer"">https://github.com/tensorflow/models/tree/master/official/nlp</a>.</p>
",,2020-07-21 09:55:52
63014202,2,63013305,,1,,11377112.0,,"<p>The <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/read-text.html"" rel=""nofollow noreferrer"">readText(charset: Charset = Charsets.UTF_8)</a> decodes the bytes into UTF-8 character set, which is why it says &quot;This could mean either than the input has been truncated&quot; it probably have tried to convert 8-bits into a <code>Char</code> and build a String out of it.</p>
<p>Use the <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/read-bytes.html"" rel=""nofollow noreferrer"">readBytes()</a> to get <code>ByteArray</code> which is represented same as <code>byte[]</code> in JVM platform.</p>
<p>Example:</p>
<pre class=""lang-kotlin prettyprint-override""><code>GZIPInputStream(payload.inputStream())
      .bufferedReader()
      .use { it.readBytes() }
</code></pre>
<h3>Edit:</h3>
<p>For reading bytes, you shouldn't be using the <code>Reader</code>, it is meant for reading the Text in UTF-8 format as defined in the Kotlin's <code>InputStream.bufferedReader</code>:</p>
<pre class=""lang-kotlin prettyprint-override""><code>public inline fun InputStream.bufferedReader(charset: Charset = Charsets.UTF_8): BufferedReader = reader(charset).buffered()
</code></pre>
<p>The <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/read-bytes.html"" rel=""nofollow noreferrer"">InputStream.readBytes()</a> will read the bytes at a buffer of 8KB itself.</p>
<pre class=""lang-kotlin prettyprint-override""><code>public fun InputStream.readBytes(): ByteArray {
    val buffer = ByteArrayOutputStream(maxOf(DEFAULT_BUFFER_SIZE, this.available()))
    copyTo(buffer)
    return buffer.toByteArray()
}
// This copies with 8KB buffer automatically
// DEFAULT_BUFFER_SIZE = 8 * 1024
public fun InputStream.copyTo(out: OutputStream, bufferSize: Int = DEFAULT_BUFFER_SIZE): Long {
    var bytesCopied: Long = 0
    val buffer = ByteArray(bufferSize)
    var bytes = read(buffer)
    while (bytes &gt;= 0) {
        out.write(buffer, 0, bytes)
        bytesCopied += bytes
        bytes = read(buffer)
    }
    return bytesCopied
}
</code></pre>
<p>So you just have to do:</p>
<pre class=""lang-kotlin prettyprint-override""><code>GZIPInputStream(payload.inputStream()).use { it.readBytes() }
</code></pre>
",,2020-07-21 12:07:03
63020688,2,63014913,,1,,1782792.0,,"<p>This was kind of tricky but here is something that works (assumes 2D sparse tensor, although I think should work the same for more outer dimensions). The idea is to first sort the whole sparse tensor (without making it dense) and then slice the first columns. To do that, I needed something like <a href=""https://numpy.org/doc/stable/reference/generated/numpy.lexsort.html"" rel=""nofollow noreferrer""><code>np.lexsort</code></a>, which as far as I know is not provided in TensorFlow as such - however, <a href=""https://www.tensorflow.org/api_docs/python/tf/sparse/reorder"" rel=""nofollow noreferrer""><code>tf.sparse.reorder</code></a> actually does something like a lexsort, so I made another intermediate sparse tensor to take advantage of that.</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf
import numpy as np

np.random.seed(0)
# Input data
k = 3
r = np.random.randint(10, size=(6, 8))
r[np.random.rand(*r.shape) &lt; .5] = 0
sp = tf.sparse.from_dense(r)
print(tf.sparse.to_dense(sp).numpy())
# [[0 0 0 0 0 0 3 0]
#  [2 4 0 6 8 0 0 6]
#  [7 0 0 1 5 9 8 9]
#  [4 0 0 3 0 0 0 3]
#  [8 1 0 3 3 7 0 1]
#  [0 0 0 0 7 0 0 7]]

# List of value indices
n = tf.size(sp.values, out_type=sp.indices.dtype)
r = tf.range(n)
# Sort values
s = tf.dtypes.cast(tf.argsort(sp.values, direction='DESCENDING'), sp.indices.dtype)
# Find destination index of each sorted value
si = tf.scatter_nd(tf.expand_dims(s, 1), r, [n])
# Abuse sparse tensor functionality to do lexsort with column and destination index
sp2 = tf.sparse.SparseTensor(indices=tf.stack([sp.indices[:, 0], si], axis=1),
                             values=r,
                             dense_shape=[sp.dense_shape[0], n])
sp2 = tf.sparse.reorder(sp2)
# Build top-k result
row = sp.indices[:, 0]
# Make column indices
d = tf.dtypes.cast(row[1:] - row[:-1] &gt; 0, r.dtype)
m = tf.pad(r[1:] * d, [[1, 0]])
col = r - tf.scan(tf.math.maximum, m)
# Get only up to k elements per row
m = col &lt; k
row_m = tf.boolean_mask(row, m)
col_m = tf.boolean_mask(col, m)
idx_m = tf.boolean_mask(sp2.values, m)
# Make result
scatter_idx = tf.stack([row_m, col_m], axis=-1)
scatter_shape = [sp.dense_shape[0], k]
# Use -1 for rows with less than k values
# (0 is ambiguous)
values = tf.tensor_scatter_nd_update(-tf.ones(scatter_shape, sp.values.dtype),
                                     scatter_idx, tf.gather(sp.values, idx_m))
indices = tf.tensor_scatter_nd_update(-tf.ones(scatter_shape, sp.indices.dtype),
                                      scatter_idx, tf.gather(sp.indices[:, 1], idx_m))
print(values.numpy())
# [[ 3 -1 -1]
#  [ 8  6  6]
#  [ 9  9  8]
#  [ 4  3  3]
#  [ 8  7  3]
#  [ 7  7 -1]]
print(indices.numpy())
# [[ 6 -1 -1]
#  [ 4  3  7]
#  [ 5  7  6]
#  [ 0  3  7]
#  [ 0  5  3]
#  [ 4  7 -1]]
</code></pre>
<hr />
<p>EDIT: Here is an alternative possibility, which may work well if your tensor is very sparse in all rows. The idea is to &quot;condense&quot; all the sparse tensor values into the first columns (like the previous snippet already did for <code>sp3</code>) and then make that into a dense tensor and apply top-k as usual. The caveat is that the indices would be referred to the condensed tensor, so you have to take yet another step if you want to get the right indices with respect to initial sparse tensor.</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf
import numpy as np

np.random.seed(0)
# Input data
k = 3
r = np.random.randint(10, size=(6, 8))
r[np.random.rand(*r.shape) &lt; .8] = 0
sp = tf.sparse.from_dense(r)
print(tf.sparse.to_dense(sp).numpy())
# [[0 0 0 0 0 0 3 0]
#  [0 4 0 6 0 0 0 0]
#  [0 0 0 0 5 0 0 9]
#  [0 0 0 0 0 0 0 0]
#  [8 0 0 0 0 7 0 0]
#  [0 0 0 0 7 0 0 0]]

# Build &quot;condensed&quot; sparse tensor
n = tf.size(sp.values, out_type=sp.indices.dtype)
r = tf.range(n)
# Make indices
row = sp.indices[:, 0]
d = tf.dtypes.cast(row[1:] - row[:-1] &gt; 0, r.dtype)
m = tf.pad(r[1:] * d, [[1, 0]])
col = r - tf.scan(tf.math.maximum, m)
# At least as many columns as k
ncols = tf.maximum(tf.math.reduce_max(col) + 1, k)
sp2 = tf.sparse.SparseTensor(indices=tf.stack([row, col], axis=1),
                             values=sp.values,
                             dense_shape=[sp.dense_shape[0], ncols])
# Get in dense form
condensed = tf.sparse.to_dense(sp2)
# Top-k (indices do not correspond to initial sparse matrix)
values, indices = tf.math.top_k(condensed, k)
print(values.numpy())
# [[3 0 0]
#  [6 4 0]
#  [9 5 0]
#  [0 0 0]
#  [8 7 0]
#  [7 0 0]]

# Now get the right indices
sp3 = tf.sparse.SparseTensor(indices=tf.stack([row, col], axis=1),
                             values=sp.indices[:, 1],
                             dense_shape=[sp.dense_shape[0], ncols])
condensed_idx = tf.sparse.to_dense(sp3)
actual_indices = tf.gather_nd(condensed_idx, tf.expand_dims(indices, axis=-1),
                              batch_dims=1)
print(actual_indices.numpy())
# [[6 0 0]
#  [3 1 0]
#  [7 4 0]
#  [0 0 0]
#  [0 5 0]
#  [4 0 0]]
</code></pre>
<p>Not sure whether this would be faster or not though.</p>
",,2020-07-21 18:16:38
63112379,2,62808641,,1,,13572191.0,,"<p>Following are the notification styles available :</p>
<blockquote>
<p>Notification.BigPictureStyle, Notification.BigTextStyle,
Notification.DecoratedCustomViewStyle, Notification.InboxStyle,
Notification.MediaStyle, Notification.MessagingStyle</p>
</blockquote>
<p>You can get more info on this <a href=""https://developer.android.com/reference/android/app/Notification.Style"" rel=""nofollow noreferrer"">link</a>.</p>
<p>Just for information purposes, to create a notification without hustle and get all predefined formatting in one place, just do the following :</p>
<ol>
<li>Go to the Project Tab of android studio and right click.</li>
<li>Click on New -&gt; UI Component -&gt; Notification</li>
<li>Enter the required notification name</li>
</ol>
<p>To call this notification just enter the following :</p>
<pre><code>&lt;NotificationClassName&gt;.createNotification(getApplicationContext());
</code></pre>
",,2020-07-27 09:26:08
63141419,2,63141245,,6,,1676363.0,,"<p>You should always, always use <code>childFragmentManager</code> when nesting fragments - the <code>childFragmentManager</code> is never executing transactions when its parent is going through lifecycle changes (which I assume is when you're calling your transaction).</p>
<p>This is actually silently causing issues for you when you use the <code>&lt;fragment&gt;</code> tag as those lifecycle events don't actually occur as a transaction, but directly as part of inflation. Using the wrong <code>FragmentManager</code> means that the fragment and its views will not properly save and restore their state.</p>
<p>The reason it fails with <code>FragmentContainerView</code> is that <code>FragmentContainerView</code> actually does the same <code>FragmentTransaction</code> as you'd do normally.</p>
",,2020-07-28 19:24:32
63148748,2,63145532,,19,,9353909.0,,"<p>Every <code>RaggedTensor</code> has an associated <code>to_tensor()</code> method, call that. Check your input data transformations, that is where the RaggedTensor is getting created. Some ops return <code>RaggedTensor</code>.</p>
",,2020-07-29 07:45:44
63151347,2,63151212,,2,,11257434.0,,"<p>From the Android Docs:</p>
<blockquote>
<p>To manage the fragments in your activity, you need to use
FragmentManager. To get it, call getSupportFragmentManager() from your
activity.</p>
<p>A great feature about using fragments in your activity is the ability
to add, remove, replace, and perform other actions with them, in
response to user interaction. Each set of changes that you commit to
the activity is called a transaction and you can perform one using
APIs in FragmentTransaction</p>
</blockquote>
<pre><code>// Create new fragment and transaction
Fragment searchEngineFragment = new SettingsSearchEngineFragment();
FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();

// Replace whatever is in the fragment_container view with this fragment,
// and add the transaction to the back stack
transaction.replace(R.id.fragment_container, searchEngineFragment);
transaction.addToBackStack(null);

// Commit the transaction
transaction.commit();
</code></pre>
<p>Even though this is a viable solution, there's an approach that is much more stress-free. That is, using the Navigation Components, that work very well with Android Studio.
You'd do well to research more on it as it'd help clarify any issues you have with Navigation in Android both with Fragments, Activities and even Dialogs.</p>
<p>Link: <a href=""https://developer.android.com/guide/navigation/navigation-getting-started"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-getting-started</a></p>
",,2020-07-29 10:17:19
63289873,2,63288548,,0,,13363205.0,,"<p><code>android</code> namespace is used in order to access and use the attributes which are provided by the Android platform.</p>
<p><code>app</code> namespace is used to access the custom attributes which are defined in the application scope.</p>
<p>The app namespace is not specific to a library, but it is used for all attributes defined in your app, whether by your code or by libraries you import, effectively making a single global namespace for custom attributes - i.e., attributes not defined by the android system.</p>
<p><em>Based on <a href=""https://www.quora.com/What-is-the-difference-between-xmlns-app-and-xmlns-Android"" rel=""nofollow noreferrer"">this</a></em></p>
",,2020-08-06 18:42:46
63402531,2,63401907,,2,,506796.0,,"<p>If I understand correctly, you want this for loop to result in a true or false based on whether any inner array has the same sequence and number of chars as the <code>key</code> String.</p>
<p>First of all, the inner array should be a <code>CharArray</code> instead of an <code>Array&lt;Char&gt;</code>, to avoid boxing.</p>
<pre><code>val cipTable = Array(5) { CharArray(5) { 'X' } }
</code></pre>
<p>Then you can use <code>all</code> and <code>contentEquals</code> to check if any of the inner CharArrays are a match for the key.</p>
<pre><code>val charArrayKey = key.toCharArray()
val isKeyInTable = cipTable.any { it.contentEquals(charArrayKey) }
</code></pre>
<p>If you want to skip the step of converting the key to a <code>CharArray</code>, you can manually check it like this:</p>
<pre><code>val isKeyInTable = 
    cipTable.any { it.size == key.length &amp;&amp; it.withIndex().all { (i, c) -&gt; c == key[i] } }
</code></pre>
",,2020-08-13 20:09:20
63484780,2,63484188,,0,,6745643.0,,"<p>Java8 code for this kotlin code can be like as following:</p>
<p><strong>This is interface</strong></p>
<pre><code>interface Callback {
    void onFilterSelect(Filter filter);
}
</code></pre>
<p><strong>Adapter</strong></p>
<pre><code>class FilterAdapter extends RecyclerView.Adapter&lt;FilterAdapter.ViewHolder&gt; {

    private FilterAdapter() {};

    FilterAdapter(Context context, Function&lt;Filter, Void&gt; callback) {
        // do your stuff
    }
}
</code></pre>
<p>And finally initialize adapter:</p>
<pre><code>recyclerView.adapter = new FilterAdapter(context, filter -&gt; {
        callback.onFilterSelect(filter);
        return null;
    });
</code></pre>
",,2020-08-19 10:13:12
63549264,2,63549221,,0,,11555065.0,,"<p>Instead of clickListener, you can use CheckChangeListener.
It will be triggered automatically when the checkbox state changes.</p>
<pre><code>binding.exampleCb.setOnCheckedChangeListener { _, isChecked -&gt;
        when (isChecked) {
            true -&gt; methodOne()
            false -&gt; methodTwo()
        }
}
</code></pre>
",,2020-08-23 16:17:01
63608445,2,57747129,,0,,1920550.0,,"<p>The point of the validation set is to give you an idea of the generalizability your model achieves by learning using the training data. You don't HAVE to have a validation dataset. If your validation data is a random sample of your training data, then your best bet is probably modifying your architecture.</p>
<p>In short, if you want your model to train based on your validation data, then train the model on the training set, then take the resulting model, and train it on the validation data (i.e. make the validation data the training data). This obviously defeats the point of having a validation set.</p>
",,2020-08-27 02:52:44
63639161,2,63548832,,2,,13469463.0,,"<p>(note: i am not an Android Developer so i apologize in advance if i explain something wrong)</p>
<p>So using Accessibility service android automation can be done. Following is some detail on how to use this service for automation.</p>
<p>First you implement the accessibility service class for your app</p>
<pre><code>public class SomeAppAccessibilityService extends AccessibilityService {


@Override
public void onAccessibilityEvent(AccessibilityEvent accessibilityEvent) {
    //if some event occurs this method is called you can implement appropriate action here when you send a custom event from your app code

}


@Override
public void onInterrupt() {

 }
}
</code></pre>
<p>After that declare it in manifest like any other service. Example of service declaration</p>
<pre><code>&lt;service android:name=&quot;.service.SomeAppAccessibilityService&quot;
             android:label=&quot;some app Accessibility Service&quot;
             android:permission=&quot;android.permission.BIND_ACCESSIBILITY_SERVICE&quot; &gt;
        &lt;meta-data
            android:name=&quot;android.accessibilityservice&quot;
            android:resource=&quot;@xml/someappservice&quot;/&gt;
        &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.accessibilityservice.AccessibilityService&quot;/&gt;
        &lt;/intent-filter&gt;
    &lt;/service&gt;
</code></pre>
<p>You can google what different parameters mean and more. Some basic explanation is as follows:
android:name (here you tell service where your SomeAppAccessibilityService class is)
&lt;meta-data android:resource= (where your xml file containing accessibility service properties is)</p>
<p>Example of resources xml file for properties:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;accessibility-service
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:accessibilityEventTypes = &quot;typeAllMask&quot;
    android:packageNames=&quot;com.example.app1,com.example.app2&quot;
    android:accessibilityFeedbackType=&quot;feedbackGeneric&quot;
    android:notificationTimeout=&quot;100&quot;
    android:canRetrieveWindowContent=&quot;true&quot;
    /&gt;
</code></pre>
<p>After all that is done now you can look for accessibility events in onAccessibilityEvent method as follows</p>
<pre><code>if(accessibilityEvent.getEventType() == AccessibilityEvent.TYPE_ANNOUNCEMENT) {} //for example i want to capture announcement event
</code></pre>
<p>When some accessibility event (could be number of things like click,long click, announcement or even custom triggered event) happens,OnAccessibilityEvent method is called and we can use that to get current screen info through accessibility service using</p>
<pre><code>AccessibilityNodeInfo info=getRootInActiveWindow(); //root view node info
AccessibilityNodeInfo childElem = info.getChild(n); //for getting nth child of root node
info.getChildCount(); //to get total size of child nodes
//then you can iterate on those children to get their child nodes
childElem.performAction(AccessibilityNodeInfo.ACTION_CLICK); //to perform some action on child elem like click as shown here
//there are other many useful AccessibilityNodeInfo class method that you can use
</code></pre>
<p>To send a custom event from your app or some other service. for example i have drawn overlay on some third party app (lets say called App1) i want to automate, using my own app. When i click some button on overlay i would want that some action is executed on that third party app's (App1) current window. To execute some action accessibility service need to capture some event. Either you can capture raw events like click etc or you can send custom events (there may be a more refined method to do this out there but at the time of post i did not find any). Here is the example</p>
<pre><code>AccessibilityManager manager = (AccessibilityManager)this.getSystemService(getApplicationContext().ACCESSIBILITY_SERVICE);

    if(manager.isEnabled()){
        AccessibilityEvent event = AccessibilityEvent.obtain(AccessibilityEvent.TYPE_ANNOUNCEMENT);
        //event.setEventType(AccessibilityEvent.TYPE_ANNOUNCEMENT);
        event.setEnabled(true);
        event.setClassName(getClass().getName());
        event.setPackageName(&quot;com.example.App1&quot;); //package name for that third part app
        event.setContentDescription(&quot;checkAll:true&quot;); //i used description to send data to accessibility service as i could not find any other option to do so at the time of writing
        //for example you can send the id of button and state of button etc in content description
        event.getText().add(&quot;some text&quot;);
        manager.sendAccessibilityEvent(event);
        

    }
</code></pre>
<p>In onAccessibilityEvent you can capture this event as following</p>
<pre><code>if(accessibilityEvent.getEventType() == AccessibilityEvent.TYPE_ANNOUNCEMENT) {
accessibilityEvent.getContentDescription()//to get content description and then you can parse data out of this string to perform some specific action based on that data}
</code></pre>
<p>These are the bits and pieces that i found in last two days. I used these bits and pieces to automate few action on steam app. I know this is not a proper guide also not very accurate maybe. My only purpose of writing this was if someone is in same boat as me, he may get some head start using this for which it took me many days.</p>
",,2020-08-28 18:30:21
63672831,2,63672397,,0,,8109202.0,,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",,2020-08-31 14:34:16
63695209,2,63692935,,2,,3015734.0,,"<p>I solved this with a bit of a hack by converting the tensor to sparse, and then immediately back to dense:</p>
<pre class=""lang-py prettyprint-override""><code>batch_size, n_inputs, _ = X.shape.as_list()
n_classes = 3

sparse_indices = tf.concat([
        tf.reshape(tf.repeat(tf.range(batch_size, dtype=tf.int64), n_inputs * 5), [-1, 1]),
        tf.reshape(tf.repeat(idcs, 5), [-1, 1]),
        tf.reshape(tf.tile(tf.range(5, dtype=tf.int64), [n_inputs * batch_size]), [-1, 1]),
    ],
    axis=1
)

# ravel X to 1d, create a sparse tensor for non-zero indices and then
# expand back to dense as a hack for filling in the zeros
X_ravel = tf.reshape(X, shape=[-1])
tf.sparse.to_dense(
    tf.sparse.SparseTensor(
        sparse_indices,
        X_ravel,
        dense_shape=[batch_size, n_classes, 5],
    ),
)
</code></pre>
<p>Which, as expected, yields:</p>
<pre><code>&lt;tf.Tensor: shape=(3, 3, 5), dtype=float32, numpy=
array([[[0.36636186, 0.45606998, 0.785176  , 0.19967379, 0.        ],
        [0.        , 0.        , 0.        , 0.        , 0.        ],
        [0.2799339 , 0.9548653 , 0.7378969 , 0.5543541 , 1.        ]],

       [[0.07455064, 0.9868869 , 0.77224475, 0.19871569, 0.        ],
        [0.19579114, 0.0693613 , 0.100778  , 0.01822183, 1.        ],
        [0.        , 0.        , 0.        , 0.        , 0.        ]],

       [[0.        , 0.        , 0.        , 0.        , 0.        ],
        [0.47417384, 0.09783416, 0.49161586, 0.47347176, 0.        ],
        [0.684233  , 0.4401525 , 0.12203824, 0.4951769 , 0.        ]]],
      dtype=float32)&gt;
</code></pre>
",,2020-09-01 20:45:22
63729168,2,63682454,,2,,6817835.0,,"<p>Sounds like you need to use a <a href=""https://www.tensorflow.org/guide/distributed_training"" rel=""nofollow noreferrer""><code>Distributed Strategy</code></a> per the docs. Your code would then become something like the following:</p>
<pre><code>tf.debugging.set_log_device_placement(True)
strategy = tf.distribute.MirroredStrategy()

with strategy.scope():
    model = keras.Sequential(
        [
            keras.layers.Flatten(input_shape=(28, 28)),
            keras.layers.Dense(128, activation='relu'),
            keras.layers.Dense(10)
        ]
    )
    model.compile(
        optimizer='adam', 
        loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), 
        metrics=['accuracy']
    )
    model.fit(train_images, train_labels, epochs=10)

    test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)
    probability_model = tf.keras.Sequential(
        [model, tf.keras.layers.Softmax()]
    )
    probability_model.predict(test_images)
</code></pre>
<p>Per the documentation, <strong>The best practice for using multiple GPUs is to use tf.distribute.Strategy</strong>.</p>
",,2020-09-03 17:51:06
63767233,2,63764524,,0,,14072498.0,,"<p>With Kotlin 1.4 and jdk 14, this code is working in IntelliJ</p>
<pre><code>class DogClass(private val id: Int, private val color: String) {
    fun bark() = println(&quot;$color dog $id barks&quot;)
}

class Cat(private val id: Int, private val color: String) {
    fun meov() = println(&quot;$color cat $id says meow&quot;)
}

fun main() {

  val dog1 = DogClass(4, &quot;Black&quot;)
  dog1.bark()

  val cat1 = Cat(4, &quot;White&quot;)
  cat1.meov()
}
</code></pre>
<p><a href=""https://i.sstatic.net/LfVp7.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/LfVp7.png"" alt=""enter image description here"" /></a></p>
",,2020-09-06 17:53:01
63851895,2,61023968,,721,,5773037.0,,"<p>Only the parameterless constructor is deprecated, it is now preferred that you specify the <code>Looper</code> in the constructor via the <code>Looper.getMainLooper()</code> method.</p>
<h2>Use it for Java</h2>
<pre><code>new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {
    @Override
    public void run() {
        // Your Code
    }
}, 3000);
</code></pre>
<h2>Use it for Kotlin</h2>
<pre><code>Handler(Looper.getMainLooper()).postDelayed({
    // Your Code
}, 3000)
</code></pre>
<p>Source : <a href=""https://developer.android.com/reference/android/os/Handler#Handler()"" rel=""noreferrer"">developer.android.com</a></p>
",,2020-09-11 17:40:18
63853271,2,63853190,,0,,13878034.0,,"<p>In <strong>Kotlin</strong>, specify <strong>named parameters</strong> using <code>=</code> not <code>:</code></p>
<pre><code>fun sayhello(greeting:String, itemstogreet:List&lt;String&gt;){
    itemstogreet.forEach {itemtogreet -&gt;
        println(&quot;$greeting $itemtogreet&quot;)
    }
}

fun main() {
    val x = listOf(&quot;kotlin&quot;,&quot;python&quot;,&quot;java&quot;) 
    sayhello(greeting=&quot;Hi&quot;,x)  // named parameter
}
</code></pre>
<p>I tested the above code here: <a href=""https://play.kotlinlang.org/"" rel=""nofollow noreferrer"">https://play.kotlinlang.org/</a></p>
<p>Output</p>
<pre><code>Hi kotlin
Hi python
Hi java
</code></pre>
",,2020-09-11 19:31:09
63936181,2,63934211,,1,,1712172.0,,"<p>As I have understood, your errors are generating from this code block:</p>
<pre><code>val userEmail = document.get(&quot;userEmail&quot;) as String
val noteTitle = document.get(&quot;noteTitle&quot;) as String
val yourNote = document.get(&quot;yourNote&quot;) as String
val downloadUrl = document.get(&quot;downloadUrl&quot;) as String
</code></pre>
<p>Here one of the variables from <code>document</code> is coming as null which cannot be cast to non-nullable <code>String</code> type in kotlin.</p>
<p>If you are not sure of the fields which can come null, write code like this:</p>
<pre><code>val userEmail : String? = document.get(&quot;userEmail&quot;) as? String
val noteTitle : String?  = document.get(&quot;noteTitle&quot;) as? String
val yourNote : String? = document.get(&quot;yourNote&quot;) as? String
val downloadUrl : String? = document.get(&quot;downloadUrl&quot;) as? String
</code></pre>
<p>For more clarity please check <code>Safe(nullable)-Cast</code> operator in kotlin <a href=""https://kotlinlang.org/docs/reference/typecasts.html#safe-nullable-cast-operator"" rel=""nofollow noreferrer"">docs</a></p>
",,2020-09-17 10:32:04
63965623,2,63965238,,0,,11377112.0,,"<p><a href=""https://kotlinlang.org/docs/reference/basic-syntax.html#using-string-templates"" rel=""nofollow noreferrer"">Kotlin's String templates</a> are resolved statically, and are converted to respective variable/function calls in concatenation with Strings.</p>
<p>A literal like <code>&quot;test ${foo()} test2&quot;</code> will be compiled as <code>&quot;test &quot; + foo() + &quot;test2&quot;</code> in the JVM bytecode.</p>
<hr />
<p>Basically, your function call,</p>
<pre class=""lang-kotlin prettyprint-override""><code>println(&quot;First ${foo()}, Second ${foo()}!&quot;)
</code></pre>
<p>is chopped down like:</p>
<pre class=""lang-kotlin prettyprint-override""><code>println(&quot;First &quot; + foo() + &quot;, Second &quot; + foo() + &quot;!&quot;)
</code></pre>
<p>This will execute as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>println(  &quot;First &quot;.plus(foo()).plus(&quot;, Second &quot;).plus(foo()).plus(&quot;!&quot;)  )
</code></pre>
<p>So first of all both the <code>foo</code> calls have been made after concatenation of all the Strings likewise in the above manner, final String is sent as an argument to the <code>println()</code></p>
",,2020-09-19 05:42:00
63978131,2,63924516,,1,,9944838.0,,"<p>There are three ways to get that notification icon depending upon the theme you are using in your Activity.</p>
<p><strong>1. No.ActionBar Theme:</strong> If you're not using any ActionBar or toolbar in your activity then you can create a View(ImageView or Button) in your Activity's layout file with Height and Width as same as the notification icon which is around 28dp and then position it at the top right corner of the screen. You can change the background image of the view according to the state you want.</p>
<p><strong>2. Create your own toolbar:</strong> You can create your own toolbar and set the menu item in it. While creating the menu item make sure that you select <code>showAsAction=&quot;always&quot;</code> this way your icon is always visible. here is a <a href=""https://codinginflow.com/tutorials/android/toolbar"" rel=""nofollow noreferrer"">link</a> for the reference</p>
<p><strong>3.ActionBar Theme:</strong> If you're using the action bar theme then you can create a menu file with one item like in Option 2 and then override the onCreateOptionsMenu and inflate then inflate your menu in it.</p>
",,2020-09-20 10:49:45
64012068,2,64011749,,1,,7946792.0,,"<p>Supposing you are working with Tensorflow 2.x, If you are trying to create a custom training step, to track the model gradients, you have to invoke the model under the <code>tf.GradientTape</code> context manager.</p>
<p>Here you have your code updated to correctly work with the <code>GradientTape</code>:</p>
<pre class=""lang-py prettyprint-override""><code>optimizer = tf.keras.optimizers.Adam(learning_rate=1e-2)

while True:
    #...other stuff

    if isTimeToBackprop():
        with tf.GradientTape() as tape:
            vStates = model(modelInput)
            tdTargets = tf.ones(vStates.shape)
            loss = tf.math.squared_difference(vStates, tdTargets)
            loss = tf.reduce_mean(loss)
        
        gradients = tape.gradient(loss, model.trainable_variables)
        optimizer.apply_gradients(zip(gradients, model.trainable_weights))
        # At this point the model is updated
</code></pre>
<p>Also note that instead of using model.predict I am using the <strong>call</strong> method which is the one you should be using when training</p>
",,2020-09-22 14:38:07
64013341,2,64002303,,0,,6642182.0,,"<p>It's designed this way to store the metadata of a sparse tensor as efficiently as possible. If the tensor itself is relatively small, it would be wasteful to store the indices with the int32 type. Also think about a quantized sparse tensor. If the metadata uses the int32 type blindly, it can easily gets larger than the tensor itself.</p>
",,2020-09-22 15:51:46
64028609,2,64027848,,0,,5012326.0,,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",,2020-09-23 13:02:40
64079399,2,64079283,,0,,10951752.0,,"<p>You can take a look at the <a href=""https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html"" rel=""nofollow noreferrer"">Pattern documentation</a>. There are several predefined character classes like <code>\d+</code> for a digit. So you can use the following method:</p>
<pre class=""lang-java prettyprint-override""><code>boolean matched = Pattern.matches(&quot;\\d+mOhm&quot;, &quot;100mOhm&quot;);
</code></pre>
<p>Or if you want to have the pattern for a longer time you can use the following method:</p>
<pre class=""lang-java prettyprint-override""><code>Pattern pattern = Pattern.compile(&quot;\\d+mOhm&quot;);
Matcher matcher = pattern.matcher(&quot;100mOhm&quot;);
boolean matched = matcher.matches();
</code></pre>
<p>If you want to use only Kotlin, you can use the following code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val regex = &quot;\\d+mOhm&quot;.toRegex()
val matched = regex.matches(&quot;100mOhm&quot;)
</code></pre>
<p>I found also a nice <a href=""https://www.baeldung.com/kotlin-regular-expressions"" rel=""nofollow noreferrer"">tutorial</a> with more information about Koltin Regex.</p>
",,2020-09-26 15:26:05
64122772,2,64115642,,7,,3276653.0,,"<p>In your trained folder where checkpoints are, there is checkpoint key file, open that and change the &quot;model_checkpoint_path&quot; checkpoint-number in the first line. Generally it will be saved the last checkpoint.</p>
",,2020-09-29 15:27:44
64142320,2,64142194,,3,,3848666.0,,"<p>If you want to use pure Kotlin, you could leverage coroutines, and more specifically its <a href=""https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/index.html"" rel=""nofollow noreferrer"">Mutex</a> for locking.</p>
<p>More info can be found at the Kotlin docs, regarding <a href=""https://kotlinlang.org/docs/reference/coroutines/shared-mutable-state-and-concurrency.html"" rel=""nofollow noreferrer"">Shared Mutable State and Concurrency</a></p>
",,2020-09-30 16:56:28
64153202,2,64153201,,0,,5250468.0,,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",,2020-10-01 10:08:05
64196431,2,64196367,,8,,49746.0,,"<p>The first example does not work because <code>String</code>s in kotlin are immutable and you cannot change characters. Instead, you have to create a new <code>String</code>, like your second example (which, in fact, creates a new <code>String</code> for each time through the loop).</p>
<p>Kotlin has a <code>replace</code> function for you:</p>
<pre><code>fun main() {
    val input = &quot;H...H&quot;
    val output = input.replace('.', 'B')
    println(output)  // Prints &quot;HBBBH&quot;
}
</code></pre>
",,2020-10-04 15:20:26
64227477,2,64227297,,1,,6255102.0,,"<p>From Android 8.0 if you want to show a notification, you should associate it to a Notification Channel.</p>
<p>First you should create a new notification Channel then show your notification.</p>
<p>You can find more detailed information here: <a href=""https://developer.android.com/training/notify-user/channels"" rel=""nofollow noreferrer"">https://developer.android.com/training/notify-user/channels</a></p>
",,2020-10-06 14:05:04
64302424,2,64302093,,0,,20713.0,,"<pre class=""lang-kotlin prettyprint-override""><code>interface Key {
    companion object {
        @JvmStatic
        @JvmName(&quot;of&quot;)
        fun keyOf(vararg content: Any?): Key {
            ...
        }
    }
}
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>// Kotlin
import Key.keyOf
keyOf(...)
</code></pre>
<pre class=""lang-java prettyprint-override""><code>// Java
Key.of(...)
</code></pre>
<p>If you *really <code>keyOf()</code> to be a top-level function in Kotlin, you can define functions for Kotlin-only and Java-only use separately.</p>
<pre class=""lang-kotlin prettyprint-override""><code>interface Key {
    companion object {
        @JvmStatic
        @Deprecated(&quot;not for Kotlin&quot;, level = DeprecationLevel.HIDDEN) // not visible to Kotlin sources
        fun of(vararg content: Any?): Key {
            ...
        }
    }
}

@JvmSynthetic // not visible to Java sources
fun keyOf(vararg content: Any?): Key {
    ...
}
</code></pre>
",,2020-10-11 09:20:12
64518071,2,57490228,,0,,11334374.0,,"<p>Api Interface</p>
<pre><code>@Multipart
@POST(&quot;your_url&quot;)
suspend fun uploadImage(
    @Part file:MultipartBody.Part
): Response&lt;String&gt;
</code></pre>
<p>Kotlin code</p>
<pre><code>        val file: File = ImagePicker.getFile(data)!!


        val requestFile =RequestBody.create(&quot;multipart/form-data&quot;.toMediaTypeOrNull(),file)
        val requestFile=RequestBody.create(MediaType.parse(&quot;image/*&quot;),file)
        val body = MultipartBody.Part.createFormData(&quot;profile_picture&quot;, file.name, requestFile)
        uploadImage(body)
</code></pre>
",,2020-10-24 21:15:59
64585600,2,64585024,,1,,3818186.0,,"<p>Looking at the stack trace I see that you are trying to connect on the ui thread which
is causing the crash. You need to move the connection logic in to its own thread</p>
<p>Here is a link to the documentation that will help you
<a href=""https://developer.android.com/guide/components/processes-and-threads#Threads"" rel=""nofollow noreferrer"">https://developer.android.com/guide/components/processes-and-threads#Threads</a></p>
<p>try this for main activity</p>
<code>
<pre><code>import android.Manifest;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Application;
import android.content.ActivityNotFoundException;
import android.content.ContentValues;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.media.Image;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.provider.MediaStore;
import android.provider.Settings;
import android.speech.RecognitionListener;
import android.speech.RecognizerIntent;
import android.speech.SpeechRecognizer;
import android.speech.tts.TextToSpeech;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.GridLayout;
import android.widget.TextView;


import com.chaquo.python.PyObject;
import com.chaquo.python.Python;
import com.chaquo.python.android.AndroidPlatform;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.ml.vision.FirebaseVision;
import com.google.firebase.ml.vision.common.FirebaseVisionImage;
import com.google.firebase.ml.vision.text.FirebaseVisionText;
import com.google.firebase.ml.vision.text.FirebaseVisionTextDetector;

import org.w3c.dom.Text;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Random;
import java.net.*;
import java.io.*;

import static android.Manifest.permission.ACCESS_FINE_LOCATION;
import static android.Manifest.permission.CAMERA;
import static android.Manifest.permission.READ_EXTERNAL_STORAGE;
import static android.Manifest.permission.RECORD_AUDIO;
import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;



public class MainActivity extends AppCompatActivity {


    private static final String TAG = &quot;MainActivity&quot;;
    private Button btnRecognize;
    private SpeechRecognizer speechRecognizer;
    static EditText ET_ShowRecognized;
    String locality;
    private Intent intent;
    private String ET_ShowRecognizedText;
    private String ProcessingText;
    //private FusedLocationProviderClient fusedLocationProviderClient;
    //Geocoder geocoder;
    Python py;
    PyObject pyobj;
    PyObject obj;
    String currentDate;
    String currentTime;
    static TextToSpeech tts;
    Uri imageURI;
    ContentValues contentValues;
    Intent cameraIntent;
    static final int REQUEST_IMAGE_CAPTURE = 1;
    Image mediaImage;
    FirebaseVisionImage firebaseVisionImage;
    static Bitmap  imageBitmap;
    FirebaseVisionTextDetector textDetector;
    String imgText;
    Intent CameraIntent;
    static Thread sent;
    static Thread receive;
    static Socket socket;
    InputStreamReader in;
    BufferedReader bf;
    String ServerOutput;
    PrintWriter writer;
    String ServerInput;



    @SuppressLint({&quot;SetTextI18n&quot;, &quot;ClickableViewAccessibility&quot;, &quot;MissingPermission&quot;})
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ActivityCompat.requestPermissions(this, new String[]{RECORD_AUDIO, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE, ACCESS_FINE_LOCATION, CAMERA}, PackageManager.PERMISSION_GRANTED);


        ET_ShowRecognized = findViewById(R.id.ET_ShowRecognized);
        btnRecognize = findViewById(R.id.btnRecognize);








        /*fusedLocationProviderClient.getLastLocation().addOnCompleteListener(new OnCompleteListener&lt;Location&gt;() {
            @Override
            public void onComplete(@NonNull Task&lt;Location&gt; task) {

                Location location = task.getResult();
                if(location != null){

                    geocoder = new Geocoder(MainActivity.this, Locale.getDefault());
                    try {

                        List&lt;Address&gt; address = geocoder.getFromLocation(location.getLatitude(), location.getLongitude(), 1);
                        locality = address.get(0).getLocality();

                    } catch (IOException e) {
                        ;
                    }

                }
            }
        });


        if(!Python.isStarted()){

            Python.start(new AndroidPlatform(this));

        }
        py = Python.getInstance();
        pyobj = py.getModule(&quot;WolframAlpha&quot;);
        obj = pyobj.callAttr(&quot;main&quot;, locality);*/

        tts = new TextToSpeech(MainActivity.this, new TextToSpeech.OnInitListener() {
            @Override
            public void onInit(int i) {
                if (i == TextToSpeech.SUCCESS) {

                    tts.setLanguage(Locale.ENGLISH);

                }
                tts.speak(&quot;Hi you successfully ran me.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);
                tts.speak(&quot;Seems good to meet you.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);
            }
        });


        //currentDate = new SimpleDateFormat(&quot;dd-MM-yyyy&quot;, Locale.getDefault()).format(new Date());
        //currentTime = new SimpleDateFormat(&quot;HH:mm:ss&quot;, Locale.getDefault()).format(new Date());
        //textToSpeech.speak(&quot;Hi! I am your personal assistant. Today date is something something &quot;, TextToSpeech.QUEUE_FLUSH, null, null);
        //Speak(&quot;Today's weather forecast for the current location is &quot; + obj.toString());


        intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);

        speechRecognizer = SpeechRecognizer.createSpeechRecognizer(this);
        speechRecognizer.setRecognitionListener(new RecognitionListener() {
            @Override
            public void onReadyForSpeech(Bundle bundle) {

            }

            @Override
            public void onBeginningOfSpeech() {

            }

            @Override
            public void onRmsChanged(float v) {

            }

            @Override
            public void onBufferReceived(byte[] bytes) {

            }

            @Override
            public void onEndOfSpeech() {

            }

            @Override
            public void onError(int i) {

            }

            @Override
            public void onResults(Bundle bundle) {
                ArrayList&lt;String&gt; mathches = bundle.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);

                if (mathches != null) {

                    ET_ShowRecognized.setText(mathches.get(0));
                    process();


                }
            }

            @Override
            public void onPartialResults(Bundle bundle) {

            }

            @Override
            public void onEvent(int i, Bundle bundle) {

            }
        });


        btnRecognize.setOnTouchListener(new View.OnTouchListener() {

            @Override
            public boolean onTouch(View view, MotionEvent motionEvent) {

                switch (motionEvent.getAction()) {

                    case MotionEvent.ACTION_UP:
                        speechRecognizer.stopListening();

                        break;

                    case MotionEvent.ACTION_DOWN:
                        ET_ShowRecognized.setText(null);
                        ET_ShowRecognized.setText(&quot;Listening...&quot;);
                        speechRecognizer.startListening(intent);
                        break;
                    default:
                        break;
                }

                return false;
            }
        });


    }

   

    public void process() {

        ProcessingText = ET_ShowRecognized.getText().toString().toLowerCase();

        if(ProcessingText.contains(&quot;hello&quot;)) {

            tts.speak(&quot;Hi! I hope all is well.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);

        }
        else if(ProcessingText.contains(&quot;hi&quot;)){

            tts.speak(&quot;Hello! Nice to meet you.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);

        }
        else if(ProcessingText.contains(&quot;your name&quot;)){

            tts.speak(&quot;My name is assistant.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);

        }
        else if(ProcessingText.contains(&quot;recognise text&quot;)){

            tts.speak(&quot;Opening Camera.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);
            dispatchTakePictureIntent();

        }
        else if(ProcessingText.contains(&quot;bye&quot;)){

            finish();
            System.exit(0);

        }
        else if(ProcessingText.contains(&quot;current temperature&quot;)){

            sendTemp();
            recieve_data();

        }else {

            tts.speak(ProcessingText, TextToSpeech.QUEUE_FLUSH, null, null);

        }


    }

    private void dispatchTakePictureIntent() {
        CameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        try {
            startActivityForResult(CameraIntent, REQUEST_IMAGE_CAPTURE);
        } catch (ActivityNotFoundException e) {
            // display error state to the user
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == REQUEST_IMAGE_CAPTURE &amp;&amp; resultCode == RESULT_OK) {

            Bundle extras = data.getExtras();
            imageBitmap = (Bitmap) extras.get(&quot;data&quot;);
            //imageView.setImageBitmap(imageBitmap);
            detectTextFromImage();
        }

    }

    private void detectTextFromImage() {

        firebaseVisionImage = FirebaseVisionImage.fromBitmap(imageBitmap);
        textDetector = FirebaseVision.getInstance().getVisionTextDetector();
        textDetector.detectInImage(firebaseVisionImage).addOnSuccessListener(new OnSuccessListener&lt;FirebaseVisionText&gt;() {
            @Override
            public void onSuccess(FirebaseVisionText firebaseVisionText) {

                //speakTextFromImage(firebaseVisionText);
                getImgText(firebaseVisionText);


            }
        }).addOnFailureListener(new OnFailureListener() {
            @SuppressLint(&quot;SetTextI18n&quot;)
            @Override
            public void onFailure(@NonNull Exception e) {
                tts.speak(&quot;Something went wrong. Please try again later or try with another image.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);
                ET_ShowRecognized.setText(&quot;Something went wrong. Please try again later or try with another image.&quot;);
            }
        });



    }

    @SuppressLint(&quot;SetTextI18n&quot;)
    private void getImgText(FirebaseVisionText firebaseVisionText){

        List&lt;FirebaseVisionText.Block&gt; blockList = firebaseVisionText.getBlocks();
        if(blockList.size() == 0) {

            tts.speak(&quot;I think this image contains no text.&quot;, TextToSpeech.QUEUE_FLUSH, null, null);
            ET_ShowRecognized.setText(&quot;I think this image contains no text.&quot;);

        }else{

            for(FirebaseVisionText.Block block : firebaseVisionText.getBlocks()){

                imgText = block.getText().toString();
                tts.speak(&quot;The text in the image is as follows : &quot; + imgText, TextToSpeech.QUEUE_FLUSH, null, null);
                ET_ShowRecognized.setText(&quot;The text in the image is as follows : &quot; + imgText);


            }
        }



    }
    public void recieve_data(){


        ServerInput = &quot;Java client is successfully connected with the server &quot;;
        BackgroundTask bt = new BackgroundTask();
            bt.execute(ServerInput);

    }

    public void sendTemp(){
        new TempBackgroundTask().execute();
    }


    class TempBackgroundTask extends AsyncTask&lt;Void, String, Void&gt;{

        @Override
        protected Void doInBackground(String... voids) {
            try {
                socket = new Socket(&quot;myIP&quot;,12345);
            } catch (UnknownHostException e1) {
                e1.printStackTrace();

            } catch (IOException e1) {
                // TODO Auto-generated catch block
                e1.printStackTrace();
            }
            sent = new Thread(new Runnable(){

                @Override
                public void run() {

                    try {
                        bf = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                        while(true){


                            ServerOutput = bf.readLine().toString();
                            publishProgress(ServerOutput);

                        }
                    }

                    catch (IOException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }

                }
            });

            sent.start();
            try {
                sent.join();
            } catch (InterruptedException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

            return null;
        }

        @SuppressWarnings(&quot;unchecked&quot;)
        @Override
        protected void onProgressUpdate(String... text) {

          MainActivity.tts.speak(text[0], TextToSpeech.QUEUE_FLUSH, null, null);
            MainActivity.ET_ShowRecognized.setText(text[0]);
        }
    }

    class BackgroundTask extends AsyncTask&lt;String, Void, Void&gt;{

        @Override
        protected Void doInBackground(String... voids) {
            try{

                String message = voids[0];
                socket = new Socket(&quot;192.168.43.203&quot;, 24224);
                writer = new PrintWriter(socket.getOutputStream());
                writer.write(message);
                writer.flush();
                writer.close();
                socket.close();


            }catch (IOException e){
                e.printStackTrace();
            }

            return null;
        }
    }

    @Override
    protected void onPause() {

        super.onPause();
    }

    @Override
    protected void onResume() {


        super.onResume();
    }
}
</code></pre>
</code>
",,2020-10-29 05:41:49
64606762,2,64606633,,0,,11951277.0,,"<p>your <code>dataset</code> is a <code>tf.data.Dataset</code> so you can use this visualization function.
<a href=""https://www.tensorflow.org/datasets/api_docs/python/tfds/visualization/show_examples"" rel=""nofollow noreferrer"">https://www.tensorflow.org/datasets/api_docs/python/tfds/visualization/show_examples</a></p>
<pre><code>tfds.visualization.show_examples(
    ds: tf.data.Dataset,
    ds_info: tfds.core.DatasetInfo,
    **options_kwargs
)
</code></pre>
<p>implemented this way:</p>
<pre><code>import tensorflow_datasets as tfds

ds, info = tfds.load(&lt;your dataset name&gt;, split='train', with_info=True)
fig = tfds.show_examples(ds, info)
</code></pre>
",,2020-10-30 10:38:26
64641883,2,64634815,,2,,11270882.0,,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",,2020-11-02 08:10:05
64750930,2,63952517,,0,,4915484.0,,"<p>Google now has a new version of the Measurement API that should be used for GA4 properties.
At the time of writing it is in alpha but we've been using it to send purchase events to Firebase.
Still not perfect as we now have the events but still no reporting under Ecommerce.</p>
",,2020-11-09 11:38:23
64852886,2,61046511,,2,,7103882.0,,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",,2020-11-16 04:59:17
64853071,2,64731673,,0,,7333367.0,,"<p>According to <a href=""https://developer.android.com/guide/topics/media-apps/mediabuttons#restarting-inactive-mediasessions"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/mediabuttons#restarting-inactive-mediasessions</a></p>
<blockquote>
<p>If Android can identify the last active media session, it tries to restart the session by sending an ACTION_MEDIA_BUTTON Intent to a manifest-registered component (such as a service or BroadcastReceiver). This lets your app restart playback while its UI is not visible, which is the case for most audio apps.</p>
</blockquote>
<p>I think in your case, since your application was the last active MediaSession the system is trying to restart the MediaBrowserService. Try debugging your application by switching to other Media applications (then connect BT) and then check whether the System starts your service or not.</p>
<p>Also, check <a href=""https://developer.android.com/guide/topics/media-apps/mediabuttons"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/mediabuttons</a> for more information.</p>
",,2020-11-16 05:27:31
64896783,2,64882214,,3,,6260169.0,,"<p>Ok, pretty easy fix it turns out. When using a CNN with unknown input dimensions (i.e. <code>-1</code> in the <code>shape_signature</code> here, caused by setting <code>-1</code> in the input layer) the unknown dimensions in the input tensor are set to <code>1</code>. To get the model to allocate properly when using a model like this, you have to do 2 things:</p>
<ol>
<li>Manually set the shape of the input tensor to be the shape of the input data, e.g. <code>interpreter.resize_tensor_input(0, [1, input_shape[0], input_shape[1], 3], strict=True)</code>.</li>
<li>Manually set the <code>dtype</code> of the input data to match that of the model's input layer, seen in the <code>'dtype'</code> entry in the input details.</li>
</ol>
<p>It seems this is done automatically in regular TensorFlow, but the model must be prepared like this in the Lite version.</p>
<p>Edit: Regarding setting the <code>dtype</code> of the input data, this is done in the casting to <code>numpy.array</code> after it is imported from an image format, before calling <code>allocate_tensors()</code>. You can see the difference between the <a href=""https://github.com/kingfischer16/srcnn-tf2/blob/feature/simple-api/srcnn_tf2/model/srcnn_model.py"" rel=""nofollow noreferrer"">TF implementation (line 332)</a> and the <a href=""https://github.com/kingfischer16/srcnn-tf2/blob/feature/simple-api/srcnn-api/handler.py"" rel=""nofollow noreferrer"">TFLite implmentation (line 77)</a>.</p>
",,2020-11-18 16:04:45
64914260,2,64912434,,2,,14584408.0,,"<blockquote>
<p>is there a bug in Android API or something?</p>
</blockquote>
<p>Not really. The reason why you saw the padding on the right even though you set it to the left is because the <code>paddingStart</code> is applied to the text the checkbox contains. Therefore, you could not see the expected padding on the left of the box.</p>
<p>As long as you use <code>android:text</code> (not a <code>TextView</code> aligned right next to the box), clicking on either the box or the text will activate the checkbox, meaning that it gives you what you want in terms of the click area.</p>
<p>However, I suppose you meant the area on the left of the box. One thing to achieve that is to create a new drawable resource file and use it in the checkbox's <code>android:drawableStart</code>.</p>
<p>Supposing that you named your drawable file checkbox_selector, the file should look like this:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;
    &lt;item android:drawable=&quot;@drawable/ic_checkbox_default&quot;
        android:state_checked=&quot;false&quot;/&gt;
    &lt;item android:drawable=&quot;@drawable/ic_checkbox_checked&quot;
        android:state_checked=&quot;true&quot;/&gt;
    &lt;item android:drawable=&quot;@drawable/ic_checkbox_default&quot;/&gt;
&lt;/selector&gt;
</code></pre>
<p>Then you need to remove the default box to apply the selector above as a drawable resource. For that:</p>
<pre><code>android:button=&quot;@null&quot;
</code></pre>
<p>Right after that, you need to call <code>android:drawableStart</code> to use the drawable you just created, and set the padding as you would like.</p>
<pre><code>android:drawableStart=&quot;@drawable/checkbox_selector&quot;
android:drawablePadding=&quot;10dp&quot;
android:paddingStart=&quot;20dp&quot;
</code></pre>
<p>The final code should look like this:</p>
<pre><code>&lt;CheckBox
    android:id=&quot;@+id/cc_checkbox&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_marginTop=&quot;8dp&quot;
    app:layout_constraintStart_toStartOf=&quot;parent&quot;
    app:layout_constraintEnd_toEndOf=&quot;parent&quot;
    app:layout_constraintTop_toTopOf=&quot;parent&quot;
    android:button=&quot;@null&quot;
    android:drawableStart=&quot;@drawable/checkbox_selector&quot;
    android:text=&quot;@string/app_name&quot;
    android:drawablePadding=&quot;10dp&quot;
    android:paddingStart=&quot;20dp&quot;
    android:background=&quot;@android:color/white&quot;
    tools:ignore=&quot;RtlSymmetry&quot; /&gt;
</code></pre>
",,2020-11-19 14:59:26
64965419,2,64965339,,2,,4217682.0,,"<p>well, for usual apps this isn't possible for security reasons obviusly. but it probably may be done using <a href=""https://developer.android.com/guide/topics/ui/accessibility/service"" rel=""nofollow noreferrer"">AccessibilityService</a>. note that Google is filtering apps which have such big privileges and won't let your app to Play Store if it will be using <code>AccessibilityService</code> to such &quot;trivial&quot; operation (isn't very helpful, for sure isn't accessibility-kind-of)</p>
",,2020-11-23 09:08:37
64979421,2,63776434,,4,,10355475.0,,"<p>When using MirroredStrategy, the batch size refers to the global batch size. <a href=""https://www.tensorflow.org/guide/distributed_training#using_tfdistributestrategy_with_tfkerasmodelfit"" rel=""nofollow noreferrer"">You can see in the docs here</a></p>
<blockquote>
<p>For instance, if using MirroredStrategy with 2 GPUs, each batch of size 10 will get divided among the 2 GPUs, with each receiving 5 input examples in each step.</p>
</blockquote>
<p>So in your case if you want each GPU to process 32 samples per step, you can set the batch size as <code>32 * strategy.num_replicas_in_sync</code>.</p>
<p>Each GPU will compute the forward and backward passes through the model on a different slice of the input data. The computed gradients from each of these slices are then aggregated across all of the devices and reduced (usually an average) in a process known as AllReduce. The optimizer then performs the parameter updates with these reduced gradients thereby keeping the devices in sync.</p>
",,2020-11-24 02:30:27
64983299,2,64603845,,9,,3513479.0,,"<p>Finally, I got an answer by spending time with the original document and some other links.</p>
<p>if you want any kind of interaction with other apps you must add the package's name into the manifest file.</p>
<pre><code> &lt;queries&gt;
       
        &lt;package android:name=&quot;com.whatsapp&quot; /&gt;
        &lt;package android:name=&quot;com.whatsapp.w4b&quot; /&gt;
       
 &lt;/queries&gt;
</code></pre>
",,2020-11-24 09:06:43
64995190,2,64995072,,0,,8480652.0,,"<p>You will have to train in batches of data, loading them from the hard drive. You have this automated with tf.data.Dataset library, check it out: <a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/data/Dataset</a></p>
",,2020-11-24 21:34:19
65078286,2,65078195,,2,,4620609.0,,"<p>There is no keywork as <code>double</code> in Kotlin. Kotlin uses Class type implementation for double type (in JVM it still uses primitive double type)</p>
<p>You can define the function as follows:</p>
<p><code>fun multiply(x: Double, y: Double): Double { return x * y }</code></p>
<p>or if you wish to have single statement method, then you can define as below</p>
<p><code>fun multiply(x: Double, y: Double) = x * y</code></p>
",,2020-11-30 17:26:35
65104465,2,65104398,,3,,6117017.0,,"<p>No, the problem is not the usage of <code>Model()</code> API.</p>
<p>The problem is that there are some issues with the <code>tensorflow.keras</code> and plain <code>keras</code> compatiblity and my intuition tells me (according to the error you posted) that there is a problem with the <code>multi_gpu</code> function, in that it doesn't correctly detect the available devices.</p>
<p>Not surprised, since the official TensorFlow documentation states it clearly that:</p>
<blockquote>
<p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after
2020-04-01. Instructions for updating: Use
tf.distribute.MirroredStrategy instead.</p>
</blockquote>
<p>Someone here had a similar problem: <a href=""https://stackoverflow.com/questions/60581677/attributeerror-module-tensorflow-core-api-v2-config-has-no-attribute-expe"">{ AttributeError: module &#39;tensorflow_core._api.v2.config&#39; has no attribute &#39;experimental_list_devices&#39; } how can i solve this error?</a></p>
<p>My strong recommendation is to switch to <code>MirroredStrategy()</code> if you want to train the model on <code>multi_gpus</code>. Not only do you avoid such problems but it's also the recommended way in the foreseeable future.</p>
",,2020-12-02 08:22:55
65151783,2,65151135,,1,,10819573.0,,"<p><strong>Disclaimer:</strong> I do not need Kotlin syntax but AFAIK, Java code can be executed as it is in Kotlin or at least anyone working with Kotlin should be able to translate a Java code easily into Kotlin syntax.</p>
<hr />
<p>The date-time API of <code>java.util</code> and their formatting API, <code>SimpleDateFormat</code> are outdated and error-prone. It is recommended to stop using them completely and switch to the <a href=""https://www.oracle.com/technical-resources/articles/java/jf14-date-time.html"" rel=""nofollow noreferrer"">modern date-time API</a>. Learn more about the modern date-time API at <strong><a href=""https://docs.oracle.com/javase/tutorial/datetime/index.html"" rel=""nofollow noreferrer"">Trail: Date Time</a></strong>.</p>
<p><strong>Note:</strong> If you are working for an Android project and your Android API level is still not compliant with Java-8, check <a href=""https://developer.android.com/studio/write/java8-support-table"" rel=""nofollow noreferrer"">Java 8+ APIs available through desugaring</a> and <a href=""https://stackoverflow.com/questions/38922754/how-to-use-threetenabp-in-android-project"">How to use ThreeTenABP in Android Project</a>.</p>
<p><strong>Using the modern date-time API:</strong></p>
<pre><code>import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        LocalDate date = LocalDate.of(2020, 5, 16);
        String formatted = date.toString();
        System.out.println(formatted);
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>2020-05-16
</code></pre>
<p>Note that <a href=""https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#toString--"" rel=""nofollow noreferrer""><code>LocalDate#toString</code></a> already returns the string in the ISO-8601 format, which is the format you want the output string in, and therefore you do need a formatter to get the string into the required format.</p>
<p><strong>Using the legacy API:</strong></p>
<pre><code>import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class Main {
    public static void main(String[] args) {
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, 2020);
        // Note that in java.util date-time API, January is month, 0
        calendar.set(Calendar.MONTH, 4);
        calendar.set(Calendar.DAY_OF_MONTH, 16);
        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        Date date = calendar.getTime();
        String formatted = sdf.format(date);
        System.out.println(formatted);
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>2020-05-16
</code></pre>
",,2020-12-04 22:43:40
65162586,2,65160888,,1,,7220545.0,,"<p>One way to do it to use the <code>tf.data.Dataset</code> API.</p>
<p>Following is how I will implement it.</p>
<p><a href=""https://i.sstatic.net/GMJte.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/GMJte.png"" alt=""enter image description here"" /></a></p>
",,2020-12-05 22:21:19
65199270,2,62546602,,21,,5020627.0,,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",,2020-12-08 12:49:39
65236299,2,65236025,,1,,5348018.0,,"<p>Android 10 (API level 29) and higher place restrictions on when apps can start activities when the app is running in the background. These restrictions help minimize interruptions for the user and keep the user more in control of what's shown on their screen.</p>
<blockquote>
<p>For the purposes of starting activities, an app running a foreground service is still considered to be &quot;in the background&quot;</p>
</blockquote>
<p><strong>Alternatives to display activity</strong></p>
<p>Apps that are in the background should display time-sensitive notifications to provide urgent information to the user instead of directly starting an activity.</p>
<p><strong>Exceptions to the restrictions:</strong>
There are some exceptions in which app can display activity directly, some of those are:</p>
<ul>
<li>The app has a visible window, such as an activity in the foreground.</li>
<li>The app has an activity in the back stack of the foreground task.</li>
<li>The app has an activity in the back stack of an existing task on the
Recents screen.</li>
</ul>
<p>For more detailed articles, read <a href=""https://developer.android.com/guide/components/activities/background-starts"" rel=""nofollow noreferrer"">this</a></p>
",,2020-12-10 14:19:24
65282992,2,65252180,,0,,10539446.0,,"<p>Here is a <a href=""https://github.com/xamarin/xamarin-android/blob/master/Documentation/guides/messages/apt0001.md"" rel=""nofollow noreferrer"">document</a> that described this problem:</p>
<p><strong>Issue</strong>:</p>
<blockquote>
<p>The new Android aapt2 resource tool has different commandline
arguments to the older aapt tool. These are generally incompatible
with each other.</p>
</blockquote>
<p><strong>Solution</strong>:</p>
<p>If you are receiving this error, check that the values provided in</p>
<pre><code>&lt;AndroidAapt2LinkExtraArgs/&gt;
&lt;AndroidAapt2CompileExtraArgs&gt;
</code></pre>
<p>are valid for aapt2. You can use aapt2 compile and aapt2 link to view the list of valid arguments.</p>
",,2020-12-14 02:46:57
65329139,2,65328668,,0,,4704327.0,,"<p>Unfortunately there is no official API to open notifications settings directly.
Instead what you can do is to open the settings via intent <code>Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> this will not open the notification settings but it may help take user a step closer to the notification settings.</p>
",,2020-12-16 18:34:33
65353130,2,65352321,,1,,5561472.0,,"<p>Just create <code>tf.Variables</code>:</p>
<pre><code>a = tf.Variable(1.)
b = tf.Variable(1.)
c = tf.Variable(1.)
d = tf.Variable(1.)
e = tf.Variable(1.)
add_5_proba = Add()([a * out_of_1, b * out_of_2, c * out_of_3, d * out_of_4, e * out_of_5 ])
model = Model(inputs=inp, outputs=add_5_proba)
</code></pre>
<p>These variables are trainable by default - <a href=""https://www.tensorflow.org/api_docs/python/tf/Variable"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/Variable</a>. They should be optimized during training.</p>
",,2020-12-18 07:20:50
65364637,2,65352369,,0,,5536388.0,,"<p>I decided to save on the &quot;manual&quot; save of the relevant data.</p>
<ol>
<li>First, I save model.history.history whenever I save the checkpoint and on_train_end with</li>
</ol>
<pre><code>joblib.dump(model.history.history, path)
</code></pre>
<ol start=""2"">
<li>When I start the program, I check if the checkpoint exists, if yes, I load it and, at the same time, I check if the history exists and if it does I load it and store in model._history variable since model.history.history is only created after you start training!</li>
</ol>
<pre><code>model._history = joblib.load(path)
</code></pre>
<p>Additionally, I set model._current_epoch value to keep track of the last epoch:</p>
<pre><code>model._current_epoch = len(model.history.history[list(model.history.history.keys())[0]])
</code></pre>
<ol start=""3"">
<li>After starting training I assign the proper value of model.history.history and remove the old value.</li>
</ol>
<pre><code>def on_train_begin(self, logs=None):
   if '_history' in self.model.__dict__:
      self.model.history.history = self.model._history
      del self.model._history
</code></pre>
<p>Not the most elegant solution but it serves the purpose for now.</p>
",,2020-12-18 22:19:06
65365103,2,65358676,,6,,10199571.0,,"<p>Distribution strategies were introduced as part of TF2 to help distribute training across multiple GPUs, multiple machines or TPUs with minimal code changes. I'd recommend this <a href=""https://www.tensorflow.org/guide/distributed_training"" rel=""noreferrer"">guide to distributed training for starters</a>.</p>
<p>Specifically creating a model under the <code>TPUStrategy</code> will place the model in a replicated (same weights on each of the cores) manner on the TPU and will keep the replica weights in sync by adding appropriate collective communications (all reducing the gradients). For more information check the <a href=""https://www.tensorflow.org/api_docs/python/tf/distribute/experimental/TPUStrategy"" rel=""noreferrer"">API doc on TPUStrategy</a> as well as this intro to TPUs in TF2 <a href=""https://colab.research.google.com/notebooks/tpu.ipynb"" rel=""noreferrer"">colab notebook</a>.</p>
",,2020-12-18 23:15:09
65412267,2,65412145,,9,,14794380.0,,"<p>Kotlin <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.math/min.html"" rel=""noreferrer"">kotlin.math.min(a,b)</a> takes concrete types like <code>Int</code>, <code>Double</code>, <code>Float</code>, <code>Long</code> and compares them mathematically.</p>
<p>Kotlin <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.comparisons/min-of.html"" rel=""noreferrer"">kotlin.comparisons</a> <code>fun &lt;T : Comparable&lt;T&gt;&gt; minOf(a: T, b: T): T</code> takes a generic type <code>T</code>, that extends the interface <code>Comparable&lt;T&gt;</code>. This can be used in collections to sort them, based on the implementation of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-comparable/"" rel=""noreferrer"">Comparable</a> on that class.</p>
<p><strong>Which to use now?</strong></p>
<p>As you see, <code>kotlin.comparisons.minOf(a,b)</code> is a more generic implementation than <code>kotlin.math.min(a,b)</code>. If you are using number types it does not really matter which to use, as both are implemented with <code>Math.min(a, b)</code> as you already pointed out.</p>
",,2020-12-22 16:25:18
65432045,2,65414746,,1,,9851608.0,,"<blockquote>
<p>A theme is a collection of attributes that's applied to an entire app, activity, or view hierarchy—not just an individual view. When you apply a theme, every view in the app or activity applies each of the theme's attributes that it supports. Themes can also apply styles to non-view elements, such as the status bar and window background.</p>
</blockquote>
<p>This is a documentation quote which describes that themes are inheritable by default to all <strong>view</strong> or <strong>non-view</strong> elements in your app, unless you hard-coded your own theme.</p>
<p>If you notice that in <code>manifest</code>, your <code>&lt;activity&gt;</code> tag is a child of <code>&lt;application&gt;</code> tag, and yet the activity inherits the theme set in the <code>&lt;application&gt;</code> this way and cascade this inheritance all the way down.</p>
<p>This is an advantage as it keeps the coherence of your app elements and the user experience accordingly.</p>
<p>You can check <a href=""https://developer.android.com/guide/topics/ui/look-and-feel/themes"" rel=""nofollow noreferrer"">the documentation</a> for further info.</p>
",,2020-12-23 23:12:52
65473701,2,65467618,,1,,8465391.0,,"<p>You can follow below Notification Builder. I am setting small icons like this:</p>
<pre><code>val notificationBuilder: NotificationCompat.Builder =
        NotificationCompat.Builder(context, channelId)

notificationBuilder.setSmallIcon(R.mipmap.ic_launcher_round)
</code></pre>
<p><strong>UPDATE:</strong></p>
<p>I am posting my full code for showing notification.</p>
<pre><code>val pendingIntent =
        PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT)

    val notificationBuilder: NotificationCompat.Builder =
        NotificationCompat.Builder(context, channelId)

    notificationBuilder.setSmallIcon(R.mipmap.ic_launcher_round)
    notificationBuilder.color = 0x474E54

    notificationBuilder.setContentTitle(title)
        .setContentText(message)
        .setAutoCancel(false)
        .setStyle(NotificationCompat.BigTextStyle())
        .setSound(Settings.System.DEFAULT_NOTIFICATION_URI)
        .setContentIntent(pendingIntent)
        .setDefaults(Notification.DEFAULT_ALL)
        .setAutoCancel(true)
        .setCategory(NotificationCompat.CATEGORY_SOCIAL)

    val notificationManager: NotificationManager =
        context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {
        val importance = NotificationManager.IMPORTANCE_HIGH
        val notificationChannel = NotificationChannel(
            channelId,
            channelId,
            importance
        )

        notificationChannel.enableLights(true)
        notificationChannel.lightColor = Color.RED
        notificationChannel.enableVibration(true)
        notificationChannel.vibrationPattern = longArrayOf(0, 1000, 500, 1000)
        notificationBuilder.setChannelId(channelId)
        notificationManager.createNotificationChannel(notificationChannel)

    } else {
        notificationBuilder.priority = NotificationCompat.PRIORITY_HIGH
        notificationBuilder.setVibrate(longArrayOf(0, 1000, 500, 1000))
    }

    notificationManager.notify(notificationId, notificationBuilder.build())
</code></pre>
<p>You can change it as per you need. Hope this will help. :)</p>
",,2020-12-28 06:21:45
65519668,2,65516586,,0,,556495.0,,"<p>Sorry, there is no API for this in Android. There is actually not an API for this at the HCI level. Keep your number of connections low or expect errors when you try to connect too many devices.</p>
",,2020-12-31 10:32:39
65551446,2,65551098,,2,,11526492.0,,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",,2021-01-03 15:19:48
65551504,2,65551098,,2,,10003284.0,,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",,2021-01-03 15:25:47
65591795,2,65586899,,1,,3926152.0,,"<p>you have not provided the complete code. It would be important to see your labels (output) data. I have fake the output data to match the output of your single dense layer.
Also, as @yudhiesh mentioned in the comments, your tensor had just 2 dimensions. I have also fixed that in case you wanna stick with [4,16] for each input.</p>
<p>here is the code running</p>
<pre><code>const trainingData = tf.tensor3d( 
         [[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]]]
)

const output = tf.tensor3d( 
        [[ [1,2,3,4],
         [1,2,3,4],
         [1,2,3,4],
         [1,2,3,4]]]
          )

const model = tf.sequential()

model.add(tf.layers.dense({
    inputShape: [4, 16],
    activation: &quot;relu&quot;,
    units: 4
  }))



model.compile({
    loss: &quot;meanSquaredError&quot;,
    optimizer: tf.train.adam(0.05),
    metrics: ['accuracy']
  })


model.fit(trainingData,output, {epochs: 2})
  .then((history) =&gt; {
    model.predict(trainingData).print()
}).catch((e) =&gt; {
  console.log(e.message);
});

</code></pre>
",,2021-01-06 07:30:32
65618500,2,65618305,,1,,7617859.0,,"<p>The issue with your code is that you are accessing <code>getView()</code> of your fragment before the fragment has gone through the initialization of the view. The reason why you don't have the crash when you execute the transaction in your activity's <code>onCreate()</code> method is that by the time you click on a button your fragment has already gone through <code>onCreateView()</code> and initialized its view. Check out <a href=""https://developer.android.com/guide/fragments/lifecycle"" rel=""nofollow noreferrer"">fragment lifecycle guide</a> and bear in mind that you should not access your fragment view before it was created or after it was destroyed. For more information about why your fragment view is not initialized instantly <a href=""https://developer.android.com/guide/fragments/transactions#async"" rel=""nofollow noreferrer"">check out this guide</a>.
As for the solution, consider setting arguments for your fragment before adding it to your transaction like here:</p>
<pre><code>Bundle args = new Bundle();
args.putInt(DisplayFragment.IMG_RESOURCE_ARG, randomTree);
displayFragment.setArguments(args);
</code></pre>
<p>Then in your <code>onCreateView()</code> or <code>onViewCreated()</code> methods of your fragment restore the arguments like here and set the image resource:</p>
<pre><code>@Override
public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
    int resourceId = requireArguments().getInt(IMG_RESOURCE_ARG);
    img = view.findViewById(R.id.imageView);
    img.setImageResource(resourceId);
}
</code></pre>
",,2021-01-07 19:08:08
65669006,2,65668840,,6,,2232127.0,,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",,2021-01-11 14:46:19
65698939,2,61290494,,0,,4709657.0,,"<p>After a few months working on this case I now know that:</p>
<ol>
<li>Android documentation is not really correct about the old connection API not working when you target Android 10. It still works on devices with Android &lt; 10. So if you target API 29 and above, you have to write two separate logics for Andoid &lt;10 and &gt;=10...</li>
<li>In my opinion, the new connection API sucks. I use this <a href=""https://developer.android.com/guide/topics/connectivity/wifi-bootstrap"" rel=""nofollow noreferrer"">new peer-to-peer</a> API, and it takes much longer to connect, the system popup is always in English, and there are some connection (eg. in terms of using streams, reconnecting, or video streaming) issues when you connect from the app vs when you connect from settings.</li>
</ol>
<p>It seems that Google gave as a new solution that is not really stable (some issues are fixed only in Android 11) and force us to use it.  Not really happy about it, but what can you do...</p>
",,2021-01-13 09:22:04
65714964,2,65714275,,0,,5313283.0,,"<p>Unfortunately there is no internal API for that. But you can use 3rd party solutions with some prices: <a href=""https://42matters.com/docs/app-market-data/android/apps/ranks"" rel=""nofollow noreferrer"">https://42matters.com/docs/app-market-data/android/apps/ranks</a></p>
",,2021-01-14 07:32:18
65726406,2,65725165,,0,,7220545.0,,"<p>As per <a href=""https://www.tensorflow.org/datasets/api_docs/python/tfds"" rel=""nofollow noreferrer"">the Tensorflow docs</a>, tfds provides ready to use datasets. This means, there isn't any provision to upload your own and use it.</p>
<p>But, it is not the end of the road, you can follow this <a href=""https://www.tensorflow.org/tutorials/images/classification"" rel=""nofollow noreferrer"">tutorial</a> from tensorflow. I will outline the important code that you will have to use to create the dataset.</p>
<pre><code>train_ds = tf.keras.preprocessing.image_dataset_from_directory(
  data_dir,
  subset=&quot;training&quot;,
  seed=123,
  image_size=(img_height, img_width),
  batch_size=batch_size)

val_ds = tf.keras.preprocessing.image_dataset_from_directory(
  data_dir,
  subset=&quot;validation&quot;,
  seed=123,
  image_size=(img_height, img_width),
  batch_size=batch_size)
</code></pre>
<p>Here use data_dir according to your training and testing path.</p>
<p>Then you can use it to train the model.</p>
<pre><code>history = model.fit(
  train_ds,
  validation_data=val_ds,
  epochs=epochs
)
</code></pre>
",,2021-01-14 20:27:10
65780509,2,65780323,,2,,10247147.0,,"<p>attr is used when make custom view with custom attribute.
If you define attr, you can use it in xml file.</p>
<p>Normal View use default attribute such as width, height, background, text etc.
So you can use it in xml file.</p>
<pre><code>&lt;TextView
    android:width=&quot;match_parent&quot;
    android:height=&quot;wrap_content&quot;
    android:background=&quot;@color/white&quot;
    android:text=&quot;@string/app_name&quot; /&gt;
</code></pre>
<p>But there is no attribute for your custom view.</p>
<p>If your custom view needs dividerColor attribute, you can't use it android:dividerColor as following.</p>
<pre><code>&lt;YourCustomView
  android:width=&quot;match_parent&quot;
  android:height=&quot;wrap_content&quot;
  android:background=&quot;@color/white&quot;
  android:dividerColor=&quot;@color/black&quot; /&gt; // it caused compile error.
</code></pre>
<p>So you need your attribute for use in xml file.
For it, you need declare attrs in attrs.xml file. (xml file name can change.)</p>
<pre><code>&lt;declare-styleable name=&quot;Main_Theme&quot;&gt;
    &lt;attr name=&quot;dividerColor&quot; format=&quot;reference&quot; /&gt;
&lt;/declare-styleable&gt;
</code></pre>
<p>And then you can use new attribute in view xml file.</p>
<pre><code>&lt;YourCustomView
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; // need define app
      android:width=&quot;match_parent&quot;
      android:height=&quot;wrap_content&quot;
      android:background=&quot;@color/white&quot;
      app:dividerColor=&quot;@color/black&quot; /&gt; // it's works
</code></pre>
<p><strong>PS:</strong> You need to additional code for use custom attr in YourCustomView class file.</p>
<pre><code>TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.Main_Theme);
dividerColor = ta.getColor(R.styleable.MainTheme_divider_color, Color.WHITE);
</code></pre>
",,2021-01-18 18:56:46
65780828,2,65780323,,1,,12619405.0,,"<p>Attr represents an attribute in an element. Simply put attrs are allowable quantities that are defined in a schema associated with a document.</p>
<p>Whenever we create a custom view we don't want the view to accept every possible value under the sky, so we define a few values that can be accepted by the view using the attr interface. these attributes are defined using declare-stylable that enables you to define attributes for custom views.for example:</p>
<pre><code>&lt;resources&gt;
   &lt;declare-styleable name=&quot;PieChart&quot;&gt;
       &lt;attr name=&quot;showText&quot; format=&quot;boolean&quot; /&gt;
       &lt;attr name=&quot;labelPosition&quot; format=&quot;enum&quot;&gt;
           &lt;enum name=&quot;left&quot; value=&quot;0&quot;/&gt;
           &lt;enum name=&quot;right&quot; value=&quot;1&quot;/&gt;
       &lt;/attr&gt;
   &lt;/declare-styleable&gt;
&lt;/resources&gt;
</code></pre>
<p>this custom view accepts showText and label attributes. the showText accepts a boolean value and the labelPosition accepts values: left and right. like the example below</p>
<pre><code>&lt;PieChart
    showText=&quot;false&quot;
    labelPosition=&quot;left&quot;/&gt;
</code></pre>
<hr />
<p>similarly in themes we need to define certain attributes that can be used inside the theme for example if we create 2 themes and want to define a different primary color that will be used by the app when using either theme. we first declare the color attr like so in the attrs.xml:</p>
<pre><code>&lt;declare-styleable name=&quot;Main_Theme&quot;&gt;
    &lt;attr name=&quot;color_primary&quot; format=&quot;color&quot; /&gt;
  &lt;/declare-stylable&gt;
</code></pre>
<p>and then inside the styles.xml we define the values for the color_primary attr for the 2 themes</p>
<pre><code>&lt;style name=&quot;theme_one&quot;&gt;
    &lt;item name=&quot;color_primary&quot;&gt;#ff0000&lt;/item&gt; // red
&lt;/style&gt;

&lt;style name=&quot;theme_two&quot;&gt;
    &lt;item name=&quot;color_primary&quot;&gt;#00ff00&lt;/item&gt; // green
&lt;/style&gt;
</code></pre>
<p>this value could then be used in layout files like so: <code>?attr/color_primary</code></p>
<hr />
<p>similarly attr could be used to define a wide range of things. an attr element itself has 2 attributes the name with which you refer it in other parts of the code and the format which could be <code>color</code>, <code>boolean</code>, <code>dimension</code>, <code>float</code> etc. for example enums could be defined as:</p>
<pre><code>&lt;attr name=&quot;some_enum_attr&quot;&gt;
  &lt;enum name=&quot;value_one&quot; value=&quot;1&quot; /&gt;
  &lt;enum name=&quot;value_two&quot; value=&quot;2&quot; /&gt;
&lt;/attr&gt;
</code></pre>
",,2021-01-18 19:23:06
65802497,2,65802357,,0,,436341.0,,"<p>I figured out my problem. Using attrs.xml file.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;resources&gt;
&lt;attr name=&quot;searchBarBgColor&quot; format=&quot;reference&quot; /&gt;
&lt;/resources&gt;
</code></pre>
<p>And setting it in the Theme style:</p>
<pre><code>&lt;style name=&quot;DarkModeTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;
    &lt;item name=&quot;searchBarBgColor&quot;&gt;#D6D6D6&lt;/item&gt;
&lt;/style&gt;

&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;                
   &lt;item name=&quot;searchBarBgColor&quot;&gt;#383838&lt;/item&gt;
&lt;/style&gt;
</code></pre>
<p>Then setting it in the container:</p>
<blockquote>
<pre><code>            &lt;LinearLayout
                android:layout_width=&quot;match_parent&quot;
                android:layout_height=&quot;wrap_content&quot;
                android:textColor=&quot;?attr/searchBarBgColor&quot;
                android:gravity=&quot;center&quot;
                android:orientation=&quot;vertical&quot;&gt;
</code></pre>
</blockquote>
<p>Then I call it once at the beginning of the activity:</p>
<pre><code>  @Override
    public Resources.Theme getTheme() {
        Resources.Theme theme = super.getTheme();
        if(MyApp.darkMode){
            theme.applyStyle(R.style.DarkModeTheme, true);
        }
        // you could also use a switch if you have many themes that could apply
        return theme;
    }
</code></pre>
",,2021-01-20 03:02:57
65944604,2,55903777,,4,,2188312.0,,"<p>There are many ways to initialize arrays in Kotlin.  The easiest, if all values are the same (here I'm using blanks), is this:</p>
<pre><code>var chars = CharArray(26) { ' ' }
</code></pre>
<p>If you have a specific set of characters (here I made it a constant), I found this to be an easy way:</p>
<pre><code>val CHARS = &quot;abcdefghijklmnopqrstuvwxyz&quot;.toCharArray()
</code></pre>
<p>If you want to copy one to another (clone), you can do this:</p>
<pre><code>val array2 = CharArray(array.size) { i -&gt; array[i] }
</code></pre>
<p>In the example you gave above, you're trying to initialize an array of CharArray.  Not sure if that's what you really want, but you can do it this way (I have an array of 25 items, each of which is an array with 5 blanks):</p>
<pre><code>var array2D = Array&lt;CharArray&gt;(25) { CharArray(5) { ' ' } } 
</code></pre>
",,2021-01-28 20:18:02
66015008,2,66011974,,1,,10798917.0,,"<p>you can get the list of all images and labels from</p>
<pre><code>class_dict=train_generator.class_indices
labels= train_generator.labels
file_names= train_generator.filenames 
</code></pre>
<p>the class dictionary is useful to correlate the class index to the class name, it is of the form {class name, index} I find it useful to reverse the order to get a dictionary of the form {index, class name} using the code below</p>
<pre><code>for key,value in class_dict.items():
        new_dict[value]=key 
</code></pre>
<p>So when you do predictions and get the index of the prediction using index= np.argmax(p) you can get the corresponding class name from</p>
<pre><code>class_name=new_dict[index]
</code></pre>
",,2021-02-02 17:49:36
66016215,2,66015988,,7,,10134209.0,,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",,2021-02-02 19:17:05
66021376,2,66019998,,0,,2202359.0,,"<p>You can iterate over small portions of the dataset with the <code>tf.data.Dataset.take()</code> method.</p>
<pre><code>sub_dataset = dataset.take(10)
for element in sub_dataset:
    # work with the image
</code></pre>
<p>Here is the [documentation].(<a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset#take"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/data/Dataset#take</a>)</p>
",,2021-02-03 04:41:53
66089790,2,66089700,,1,,11982611.0,,"<p>1- If your implementation can be handled in local, you can use Notification Manager for this, not remote push notifications. Basically set alarms for your desired times, create notifications in OnReceive method of Alarm manager and notify the system</p>
<p><a href=""https://developer.android.com/reference/android/app/AlarmManager"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/app/AlarmManager</a></p>
<p><a href=""https://developer.android.com/training/notify-user/build-notification"" rel=""nofollow noreferrer"">https://developer.android.com/training/notify-user/build-notification</a></p>
<p>2- If you want to have more control over your notification system and dynamically manage your remote notifications, you can make it via Firebase Admin SDK.</p>
<p><a href=""https://firebase.google.com/docs/admin/setup"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/admin/setup</a></p>
",,2021-02-07 15:45:14
66118410,2,66118332,,0,,15159344.0,,"<p>Basically notifications provide short, timely information about events in your app while it's not in use. For an introduction to how notifications appear on Android, see the Notifications Overview. For sample code that uses notifications.The code on this uses the NotificationCompat APIs from the Android support library. These APIs allow you to add features available only on newer versions of Android while still providing compatibility back to Android 4.0 (API level 14). However, some new features such as the inline reply action result in a no-op on older versions.</p>
<p>Add the support library
Although most projects created with Android Studio include the necessary dependencies to use NotificationCompat, you should verify that your module-level build.gradle file includes the following dependency:</p>
<p>dependencies {
implementation &quot;com.android.support:support-c
compat:28.0.0&quot;
}</p>
<p>You can see more info here:
<a href=""https://developer.android.com/training/notify-user/channels"" rel=""nofollow noreferrer"">https://developer.android.com/training/notify-user/channels</a></p>
",,2021-02-09 11:49:03
66400146,2,66399217,,0,,10798917.0,,"<p>your model is expecting to see an input for model.predict that has the same dimensions as it was trained on. In this case it is the dimensions of vgg_features_train.The input to model.predict that you are generating is for the input to the VGG model. You are essentially trying to do transfer learning so I suggest you proceed as below</p>
<pre><code>base_model=tf.keras.applications.VGG19( include_top=False, input_shape=img_shape, pooling='max', weights='imagenet' )
x=base_model.output
x=Dense(100, activation='relu'))(x)
x=Dropout(0.5)(x)
x=BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001)(x)
output=Dense(2, activation='softmax')(x)
model=Model(inputs=base_model.input, outputs=output)
model.fit( train, epochs=100, batch_size=8, validation_data=val, callbacks=callbacks_list)
</code></pre>
<p>now for prediction you can use the same dimensions as you used to train the model.</p>
",,2021-02-27 15:10:03
66410738,2,65224178,,9,,154306.0,,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",,2021-02-28 15:33:44
66431273,2,66431140,,0,,11538132.0,,"<p>You can use sharedpreferences to store data and later you can get data from this sharedpreferences in order to check on which level user should be.</p>
<p>Check this: <a href=""https://developer.android.com/training/data-storage/shared-preferences"" rel=""nofollow noreferrer"">https://developer.android.com/training/data-storage/shared-preferences</a></p>
",,2021-03-01 23:41:28
66443018,2,66442783,,1,,5666087.0,,"<p>This is normal. According to the <a href=""https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth"" rel=""nofollow noreferrer"">TensorFlow GPU guide</a>:</p>
<blockquote>
<p>By default, TensorFlow maps nearly all of the GPU memory of all GPUs (subject to <code>CUDA_VISIBLE_DEVICES</code>) visible to the process. This is done to more efficiently use the relatively precious GPU memory resources on the devices by reducing memory fragmentation.</p>
</blockquote>
<p>Using mixed precision allows you to load larger models onto a GPU. It does not necessarily mean that TensorFlow will reserve less GPU memory.</p>
<p>There are two options to limit memory on the GPU. These examples are available in the link at the beginning of this answer.</p>
<ol>
<li>Use <code>tf.config.experimental.set_memory_growth</code>.</li>
</ol>
<pre class=""lang-py prettyprint-override""><code>gpus = tf.config.list_physical_devices('GPU')
if gpus:
  try:
    # Currently, memory growth needs to be the same across GPUs
    for gpu in gpus:
      tf.config.experimental.set_memory_growth(gpu, True)
    logical_gpus = tf.config.experimental.list_logical_devices('GPU')
    print(len(gpus), &quot;Physical GPUs,&quot;, len(logical_gpus), &quot;Logical GPUs&quot;)
  except RuntimeError as e:
    # Memory growth must be set before GPUs have been initialized
    print(e)
</code></pre>
<ol start=""2"">
<li>Use <code>tf.config.experimental.set_virtual_device_configuration</code> to set a hard upper limit on GPU memory.</li>
</ol>
<pre class=""lang-py prettyprint-override""><code>gpus = tf.config.list_physical_devices('GPU')
if gpus:
  # Restrict TensorFlow to only allocate 1GB of memory on the first GPU
  try:
    tf.config.experimental.set_virtual_device_configuration(
        gpus[0],
        [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])
    logical_gpus = tf.config.experimental.list_logical_devices('GPU')
    print(len(gpus), &quot;Physical GPUs,&quot;, len(logical_gpus), &quot;Logical GPUs&quot;)
  except RuntimeError as e:
    # Virtual devices must be set before GPUs have been initialized
    print(e)
</code></pre>
",,2021-03-02 16:13:40
66483686,2,66478696,,0,,12668481.0,,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",,2021-03-04 21:59:14
66494990,2,66494016,,2,,10082297.0,,"<p>After some debugging in <code>FragmentContainerView</code> itself, I have hopefully found all the cases of the <code>FragmentManager</code> used whilst adding a fragment via the <code>android:name</code> attribute.</p>
<ul>
<li><p>Fragments in the activity view hierarchy (from <code>Activity.setContentView(Int)</code>): <code>Activity.getSupportFragmentManager()</code></p>
</li>
<li><p>Fragments in another fragments hierarchy (from <code>Fragment.onCreateView(...))</code>: <code>Fragment.getChildFragmentManager</code></p>
</li>
<li><p>Fragments in a <code>RecyclerView</code> row, where the <code>RecyclerView</code> is <strong>either</strong> in a <code>Fragment</code> or an <code>Activity</code>: <code>Activity.getSupportFragmentManager()</code></p>
</li>
</ul>
<p>Now the first two are well documented and not of interest here, but I found the third case to be surprising, especially as it doesn't seem to make a difference what the <code>RecyclerView</code> has been inflated into. If I had to take a guess of why this is, it would probably be in <code>onCreateViewHolder</code>.When you inflate your row you pass <code>false</code> into the inflate function's <code>attachToRoot</code>, so as the <code>FragmentContainerView</code> is not attached to a parent when it is initialised, it has to use the highest level fragment manager - from the activity. However this is just speculation.</p>
<p>Regardless, in answer to your question - it is definitely the activities fragment manager.</p>
<hr />
<p>You also said that you have tried using all the fragment managers anyway and they all couldn't find your fragment, but I wasn't able to replicate this problem. I managed to find my fragment in the <code>RecyclerView</code> just fine so I would expect there's something else going on that we can't find from the code you've shown, in theory it works.</p>
",,2021-03-05 15:10:19
66511427,2,60533380,,1,,3795043.0,,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",,2021-03-06 22:44:21
66594768,2,66594712,,4,,5188516.0,,"<p>From what my understanding is regarding Activities and Fragments in Android, fragment is a sub-part of the activity in which it is called.</p>
<p><strong>Yes you are right, fragments are sub parts added dynamically on run time</strong></p>
<p>So what I want to know is that if we finish or kill the Activity in which the fragment exists, how will it effect the fragment?</p>
<p><strong>If you kill/finish an Activity fragments will also be destroyed</strong></p>
<p>NOTE: Fragment lifecycle is dependent on Activity life cycle, if an Activity is dead so the fragments are.</p>
<p>Building fragment on an Activity is like building 2,3 or 4 story building. If base is destroyed then other stories are not supposed to be stable. Just keep this rule in mind. This will help you with understanding. And further more you can apply logging on Activity and Fragment lifecycle.</p>
",,2021-03-12 05:41:16
66615100,2,66605679,,3,,3222797.0,,"<p>The easiest way to do this is to just make your ragged tensor a regular tensor by using <a href=""https://www.tensorflow.org/api_docs/python/tf/RaggedTensor#to_tensor"" rel=""nofollow noreferrer""><code>tf.RaggedTensor.to_tensor()</code></a> and then do the rest of your solution. I'll assume that you need the tensor to remain ragged. The key is to find the <a href=""https://www.tensorflow.org/api_docs/python/tf/RaggedTensor#row_lengths"" rel=""nofollow noreferrer""><code>row_lengths</code></a> of each batch in your ragged tensor, and then use this information to make your augmentation tensor ragged.</p>
<p><strong>Example</strong>:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf


# data
emb = tf.constant([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [0, 0, 0]]])
aug = tf.constant([[[8]], [[9]]])

# make embeddings ragged for testing
emb_r = tf.RaggedTensor.from_tensor(emb, padding=(0, 0, 0))

print(emb_r.shape)
# (2, None, 3)
</code></pre>
<p>Here we'll use a combination of <code>row_lengths</code> and <a href=""https://www.tensorflow.org/api_docs/python/tf/sequence_mask"" rel=""nofollow noreferrer""><code>sequence_mask</code></a> to create a new ragged tensor.</p>
<pre class=""lang-py prettyprint-override""><code># find the row lengths of the embeddings
rl = emb_r.row_lengths()

print(rl)
# tf.Tensor([2 1], shape=(2,), dtype=int64)

# find the biggest row length
max_rl = tf.math.reduce_max(rl)

print(max_rl)
# tf.Tensor(2, shape=(), dtype=int64)

# repeat the augmented data `max_rl` number of times
aug_t = tf.repeat(aug, repeats=max_rl, axis=1)

print(aug_t)
# tf.Tensor(
# [[[8]
#   [8]]
# 
#  [[9]
#   [9]]], shape=(2, 2, 1), dtype=int32)

# create a mask
msk = tf.sequence_mask(rl)

print(msk)
# tf.Tensor(
# [[ True  True]
#  [ True False]], shape=(2, 2), dtype=bool)
</code></pre>
<p>From here we can use <a href=""https://www.tensorflow.org/api_docs/python/tf/ragged/boolean_mask"" rel=""nofollow noreferrer""><code>tf.ragged.boolean_mask</code></a> to make the augmented data ragged</p>
<pre class=""lang-py prettyprint-override""><code># make the augmented data a ragged tensor
aug_r = tf.ragged.boolean_mask(aug_t, msk)
print(aug_r)
# &lt;tf.RaggedTensor [[[8], [8]], [[9]]]&gt;

# concatenate!
output = tf.concat([emb_r, aug_r], 2)
print(output)
# &lt;tf.RaggedTensor [[[1, 2, 3, 8], [4, 5, 6, 8]], [[1, 2, 3, 9]]]&gt;
</code></pre>
<p>You can find the list of tensorflow methods that support ragged tensors <a href=""https://www.tensorflow.org/api_docs/python/tf/ragged"" rel=""nofollow noreferrer"">here</a></p>
",,2021-03-13 15:17:09
66623045,2,66530758,,2,,10924801.0,,"<p>In your attires.xml you should define a theme reference attribute</p>
<pre><code>&lt;declare-styleable name=&quot;AppTheme&quot;&gt;
     &lt;attr name = &quot;pairingCardStyle&quot; format = &quot;reference&quot;/&gt;
&lt;/declare-styleable&gt;
</code></pre>
<p>Then you should define attributes in your style</p>
<pre><code>&lt;style name=&quot;Widget.AppTheme.pairingCard&quot; parent=&quot;&quot;&gt;
     &lt;item name=&quot;strokeColor&quot;&gt;?attr/colorOnSurface&lt;/item&gt;
     .....
&lt;/style&gt;
</code></pre>
<p>After then, you have to direct this style to a reference in your theme.</p>
<pre><code>&lt;style name=&quot;Theme.App&quot; parent=&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;&gt;
     &lt;item name = &quot;pairingCardStyle&quot;&gt;@style/Widget.AppTheme.pairingCard&lt;/item&gt;
     ......
&lt;/style&gt;
</code></pre>
<p>In your custom view's class, you need to define these attributes</p>
<pre><code>context.theme.obtainStyledAttributes(
        attrs,
        R.styleable.pairingCard,
        R.attr.pairingCardStyle,
        R.style.Widget_AppTheme_pairingCard
    )
</code></pre>
",,2021-03-14 09:49:11
66625969,2,66623969,,0,,209103.0,,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",,2021-03-14 14:59:02
66716800,2,63422642,,1,,13077188.0,,"<p>I found a faster and non-root way of getting the view hierarchy that also works fine in most Chrome versions (in case of webview-based apps), even in Chrome 80+, and it was ussing AccesibilityService.</p>
<p>So, i first created a service which extends AccessibilityService:</p>
<pre><code>public class BasicAccessibilityService extends AccessibilityService {

    private static BasicAccessibilityService instance;

    public static BasicAccessibilityService getInstance(){
        return instance;
    }

   
    @Override
    protected void onServiceConnected() {
        instance = this;
        super.onServiceConnected();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        return super.onStartCommand(intent, flags, startId);
    }

    @Override
    public void onAccessibilityEvent(AccessibilityEvent event) {
    }

    @Override
    public void onInterrupt() {
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
    }

    @Override
    public void onCreate() {
        super.onCreate();
    }

    @Override
    public AccessibilityNodeInfo getRootInActiveWindow() {
        try {
            return super.getRootInActiveWindow();
        } catch (Throwable ignored) {
            return null;
        }
    }
}
</code></pre>
<p>In Manifest:</p>
<pre><code>&lt;service
    android:name=&quot;BasicAccessibilityService&quot;
    android:permission=&quot;android.permission.BIND_ACCESSIBILITY_SERVICE&quot;&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=&quot;android.accessibilityservice.AccessibilityService&quot; 
    /&gt;
    &lt;/intent-filter&gt;
        &lt;meta-data
            android:name=&quot;android.accessibilityservice&quot;
            android:resource=&quot;@xml/service_config&quot; /&gt;
&lt;/service&gt;
</code></pre>
<p>In service_config.xml:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;accessibility-service
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:description=&quot;@string/accessibility_service_description&quot;
    android:accessibilityEventTypes=&quot;typeAllMask&quot;
    android:accessibilityFlags=&quot;flagReportViewIds|flagDefault|flagRequestFilterKeyEvents|flagRetrieveInteractiveWindows|flagEnableAccessibilityVolume&quot;
    android:canRetrieveWindowContent=&quot;true&quot;
    android:canRequestTouchExplorationMode=&quot;true&quot;
    android:accessibilityFeedbackType=&quot;feedbackGeneric&quot;
    android:canPerformGestures=&quot;true&quot;
    android:canRequestFilterKeyEvents=&quot;true&quot;
    android:notificationTimeout=&quot;0&quot;
    /&gt;
</code></pre>
<p>Now the Accessibility Service is set up, and can be called whenever we want to get the view hierarchy. Remember that for it to work the app must have the accessibility permission granted. When the permission is granted the <code>onServiceConnected</code> method is automatically called, so we can call our service from it instance and get the views like:</p>
<pre><code>BasicAccessibilityService.getInstance().getRootInActiveWindow()
</code></pre>
<p>This will return an <code>AccessibilityNodeInfo</code> which contains the current views information.</p>
<p>If you need to get the view hierarchy as an XML, you can use the <code>AccessibilityNodeInfoDumper</code> class from the uiautomator source code, which can be found here:</p>
<p><a href=""https://android.googlesource.com/platform/frameworks/uiautomator/+/5fe6e7f321f02b08224fad72374ed041f459b411/core/com/android/uiautomator/core/AccessibilityNodeInfoDumper.java"" rel=""nofollow noreferrer"">https://android.googlesource.com/platform/frameworks/uiautomator/+/5fe6e7f321f02b08224fad72374ed041f459b411/core/com/android/uiautomator/core/AccessibilityNodeInfoDumper.java</a></p>
<p>Also you will have to add to your code the <code>AccessibilityNodeInfoHelper</code> found in here:</p>
<p><a href=""https://android.googlesource.com/platform/frameworks/uiautomator/+/5fe6e7f321f02b08224fad72374ed041f459b411/core/com/android/uiautomator/core/AccessibilityNodeInfoHelper.java"" rel=""nofollow noreferrer"">https://android.googlesource.com/platform/frameworks/uiautomator/+/5fe6e7f321f02b08224fad72374ed041f459b411/core/com/android/uiautomator/core/AccessibilityNodeInfoHelper.java</a></p>
<p>When i implemented the above code to parse the AccessibilityNodeInfo to XML, i got almost the same problem i had before when getting the views with <code>uiautomator dump</code>. I found that the problem was in the <code>isVisibleToUser</code> method within <code>dumpNodeRec</code> in the <code>AccessibilityNodeInfoDumper</code> class.</p>
<p>For some reason, with some apps the <code>isVisibleToUser</code> method returns false with views that are visible inside webview-based application, and this behaviour changes depending on Chrome or System Web View version. So a possible solution is to not use that method and obtain all views, even those who are &quot;invisible&quot;, or another option is to make your own method to determine if some view is visible or not.</p>
<p>For me was enought commenting the line that use the <code>isVisibleToUser</code> method. Hope this helps anyone who needs to do something similar.</p>
",,2021-03-19 23:30:21
66740958,2,66725315,,0,,7473793.0,,"<p>Your connection fails with status 133. There are many questions on here regarding that topic. It's a known issue with android. <a href=""https://stackoverflow.com/a/48526891/7473793"">This answer</a> suggest to use a different version of the <a href=""https://developer.android.com/reference/android/bluetooth/BluetoothDevice#connectGatt(android.content.Context,%20boolean,%20android.bluetooth.BluetoothGattCallback,%20int)"" rel=""nofollow noreferrer"">connectGatt</a> method which would look like this for you:</p>
<pre><code>BluetoothGatt bluetoothGatt = device.connectGatt(getApplicationContext(), false, mGattCallback, BluetoothDevice.TRANSPORT_LE);
</code></pre>
<p>This would require you to use Android 6.0 (API 23) or newer but should eliminate your problem. If you need to use an earlier version of Android you could just retry to connect until it works.</p>
",,2021-03-22 05:56:48
66796997,2,66796568,,1,,2684.0,,"<p>It's unclear why you need to <em>retain</em> an instance in memory of a Fragment that is no longer visible; presumably it's expensive to recreate it so you want to save it.</p>
<p>This is a code-smell in most cases (but because I don't know your reasons and haven't seen your code, I will give you the benefit of doubt) :)</p>
<p>Assuming you have a valid reason for this, Android offers Fragments a mechanism to be retained:</p>
<p>Directly from the Android's Fragment source:</p>
<pre><code>/**
     * Control whether a fragment instance is retained across Activity
     * re-creation (such as from a configuration change). If set, the fragment
     * lifecycle will be slightly different when an activity is recreated:
     * &lt;ul&gt;
     * &lt;li&gt; {@link #onDestroy()} will not be called (but {@link #onDetach()} still
     * will be, because the fragment is being detached from its current activity).
     * &lt;li&gt; {@link #onCreate(Bundle)} will not be called since the fragment
     * is not being re-created.
     * &lt;li&gt; {@link #onAttach(Activity)} and {@link #onActivityCreated(Bundle)} &lt;b&gt;will&lt;/b&gt;
     * still be called.
     * &lt;/ul&gt;
     */
    public void setRetainInstance(boolean retain) {
</code></pre>
<p>Keep in mind the implications of doing so, for now your lifecycle is different and so are all the side-effects of expecting a normal lifecycle (and the memory impact of keeping a fragment around).</p>
<p>Alternatively, consider separating the Fragment's state from it into a ViewModel, Repository, or Beyond™, and let the fragment simply be told what its state it so it can be properly recreated in a &quot;fast&quot; and &quot;efficient&quot; manner. (I quote these because fast/efficient are in the eye of the beholder and because it's also still subject to Android rules...).</p>
<p>Now, I haven't also seen how you &quot;navigate&quot; and how you &quot;go back&quot;, so you'll have to test this yourself. Ultimately, if the FragmentManager desires to destroy your Fragment, it's probably because it found no reason to keep it around (you could, keep a hard reference and deal with all that memory wasted... which is why I suggest you keep the &quot;state&quot; outside of the Fragment instead, because creating a fragment is not that expensive, if the fragment doesn't contain 2000 lines of code in onCreate...) :)</p>
",,2021-03-25 09:56:57
66805754,2,66804781,,1,,15146772.0,,"<p>You don't need to use <code>tf.distribute.Strategy</code> unless you have TPUs or multiple CPUs/GPUs. See <a href=""https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/distribute/custom_training.ipynb#scrollTo=k53F5I_IiGyI"" rel=""nofollow noreferrer"">here</a>. You can run this as standard Tensorflow code without a strategy.</p>
<pre><code>import time

start = time.time()
tf.keras.backend.clear_session()

training_model = lstm_model(seq_len=100, stateful=False)
training_model.compile(
    optimizer=tf.keras.optimizers.RMSprop(learning_rate=0.01),
    loss='sparse_categorical_crossentropy',
    metrics=['sparse_categorical_accuracy'])

training_model.fit(
    input_fn(),
    steps_per_epoch=100,
    epochs=10
)
training_model.save_weights('/tmp/bard.h5', overwrite=True)

end = time.time()
elapsed_TPU = end - start

print(elapsed_TPU)
</code></pre>
",,2021-03-25 18:40:30
66822004,2,66819735,,2,,14434976.0,,"<p>The CheckBox component inherits from a Button View so you can use the <strong>android:background</strong> attribute to change the checkbox state with a drawable state selector instead of <strong>android:button</strong>. Example is like below:</p>
<pre><code> &lt;CheckBox
   android:id=&quot;@+id/selected_checkBox&quot;
   android:layout_width=&quot;wrap_content&quot;
   android:layout_height=&quot;wrap_content&quot;
   android:background=&quot;@drawable/checkbox_states&quot;
   android:button=&quot;@null&quot;
   app:buttonCompat=&quot;@null&quot;
   android:checked=&quot;true&quot; /&gt;
</code></pre>
",,2021-03-26 17:53:25
66822353,2,66788258,,1,,13968673.0,,"<p><code>ULong</code> is a class and you <a href=""https://pl.kotl.in/hWY-AeLrW"" rel=""nofollow noreferrer"">may write</a> Jackson serializer/deserializer for it, but a field of this type is compiled to bytecode as a field of primivite <code>long</code> type. So values exceeding <code>Long.MAX_VALUE</code> would be serialized/deserialized incorrectly (as negative), and custom serializer/deserializer won't help you.</p>
<p>Take a look at <code>kotlinx.serialization</code>. It have OOTB experimental support for unsigned integer types. See <a href=""https://github.com/Kotlin/kotlinx.serialization/blob/master/CHANGELOG.md#experimental-support-for-inline-classes-ir-only"" rel=""nofollow noreferrer"">https://github.com/Kotlin/kotlinx.serialization/blob/master/CHANGELOG.md#experimental-support-for-inline-classes-ir-only</a></p>
",,2021-03-26 18:19:06
66850569,2,66848244,,1,,14528242.0,,"<p>Kotlin <code>Int</code> should work well. Have you tried to use this value as color? Nevermind that <code>color.toInt().toString(16)</code> returns <code>-eeddcd</code>. It should return that because <code>Int</code> value dedicates highest bit for sign. That's representation issue, but the actual value is <code>0xff112233</code>. So Kotlin <code>Int</code> with value <code>-eeddcd</code> when you pass it to <code>setColor</code> should look same as <code>0xff112233</code>.</p>
<p>So try implement your function <code>Int.toColor</code> as follows:</p>
<pre><code>fun IntArray.toColor(): Int {
    var color: Int = 0xFF000000.toInt()
    val maxIndex = size - 1
    this.withIndex().forEach { (index, value) -&gt;
        color = color or (value shl (8 * (maxIndex - index)))
    }
    return color
}
</code></pre>
",,2021-03-29 07:57:22
66872850,2,66790141,,3,,932052.0,,"<p>My answer here is going to be as succinct as possible. My full code is available on <a href=""https://github.com/qbalsdon/accessibility_broadcast_dev"" rel=""nofollow noreferrer"">GitHub</a>.</p>
<p>As far as I am aware, a developer cannot perform an accessibility action via ADB, they would have to create an <a href=""https://developer.android.com/guide/topics/ui/accessibility/service"" rel=""nofollow noreferrer"">Accessibility service</a> in order to <a href=""https://developer.android.com/guide/topics/ui/accessibility/service#act-for-users"" rel=""nofollow noreferrer"">act on behalf of an Accessibility user</a> and create a <a href=""https://developer.android.com/reference/android/content/BroadcastReceiver"" rel=""nofollow noreferrer"">Broadcast Receiver</a> so that it can take input via the ADB. This is two thirds of the answer, requiring one more component as developers <s>cannot activate accessibility services via the ADB! This has to be done manually <strong>each time accessibility is toggled</strong> or through <a href=""https://support.google.com/accessibility/android/answer/7650693?hl=en"" rel=""nofollow noreferrer""><strong>accessibility shortcuts</strong></a> - of which there can be only one.</s> <strong>EDIT</strong> I figured this bit out as well :)</p>
<h3>Accessibility Service</h3>
<p>The developer documentation provides a mechanism for an <a href=""https://developer.android.com/guide/topics/ui/accessibility/service"" rel=""nofollow noreferrer"">Accessibility Service</a>:</p>
<blockquote>
<p>An accessibility service is an application that provides user interface enhancements to assist users with disabilities, or who may temporarily be unable to fully interact with a device. For example, users who are driving, taking care of a young child or attending a very loud party might need additional or alternative interface feedback.</p>
</blockquote>
<p>I followed the <a href=""https://codelabs.developers.google.com/codelabs/developing-android-a11y-service"" rel=""nofollow noreferrer"">Google Codelab</a> to construct a service that could take actions on the part of a user. Here is a snippet from the service, for swiping left and right (user navigation):</p>
<pre><code>    fun swipeHorizontal(leftToRight: Boolean) {
        val swipePath = Path()
        if (leftToRight) {
            swipePath.moveTo(halfWidth - quarterWidth, halfHeight)
            swipePath.lineTo(halfWidth + quarterWidth, halfHeight)
        } else {
            swipePath.moveTo(halfWidth + quarterWidth, halfHeight)
            swipePath.lineTo(halfWidth - quarterWidth, halfHeight)
        }
        val gestureBuilder = GestureDescription.Builder()
        gestureBuilder.addStroke(StrokeDescription(swipePath, 0, 500))
        dispatchGesture(gestureBuilder.build(), GestureResultCallback(baseContext), null)
    }
</code></pre>
<h3>Broadcast receiver.</h3>
<p>It's important to note that the Receiver is registered when the service is enabled:</p>
<pre><code>    override fun onServiceConnected() {
        IntentFilter().apply {
            addAction(ACCESSIBILITY_CONTROL_BROADCAST_ACTION)

            priority = 100

            registerReceiver(accessibilityActionReceiver, this)           
        }
   // REMEMBER TO DEREGISTER!
</code></pre>
<p>Then the receiver can respond to intents and invoke the service:</p>
<pre><code>    override fun onReceive(context: Context?, intent: Intent?) {
        require(intent != null) { &quot;Intent is required&quot; }
        val serviceReference = //get a reference to the service somehow

        intent.getStringExtra(ACCESSIBILITY_ACTION)?.let {
            serviceReference.apply {
                when (it) {
                    ACTION_NEXT -&gt; swipeHorizontal(true)
                    ACTION_PREV -&gt; swipeHorizontal(false)
                    //...
</code></pre>
<p>example usage on the adb:</p>
<pre><code>adb shell am broadcast -a com.balsdon.talkback.accessibility -e ACTION &quot;ACTION_PREV&quot;
</code></pre>
<p><strong>EDIT</strong></p>
<h3>Starting the service via adb:</h3>
<p>Thanks to <a href=""https://android.stackexchange.com/questions/225907/grant-permissions-to-a-service-launched-with-adb#comment303377_231062"">this comment</a></p>
<pre><code>TALKBACK=&quot;com.google.android.marvin.talkback/com.google.android.marvin.talkback.TalkBackService&quot;
ALLYDEV=&quot;com.balsdon.accessibilityBroadcastService/.AccessibilityBroadcastService&quot;
adb shell settings put secure enabled_accessibility_services $TALKBACK:$ALLYDEV
</code></pre>
<h3>Accessibility shortcut</h3>
<p>** EDIT: NO LONGER NEEDED BUT I'LL LEAVE IT HERE ANYWAY **</p>
<p>Possibly the most annoying thing is that every time accessibility is toggled, the service is turned off. So I added my <a href=""https://support.google.com/accessibility/android/answer/7650693?hl=en"" rel=""nofollow noreferrer"">service as a shortcut</a> with the VOLUME_UP and VOLUME_DOWN keys pressed. <a href=""https://stackoverflow.com/a/37473751/932052"">Thanks to this question</a>.</p>
<pre><code>  INPUT_DEVICE=&quot;/dev/input/event1&quot; # VOLUME KEYS EVENT FILE
  VOLUME_DOWN=114 #0x0072
  VOLUME_UP=115   #0x0073
  BLANK_EVENT=&quot;sendevent $INPUT_DEVICE 0 0 0&quot;

  INST_DN=&quot;sendevent $INPUT_DEVICE 1 $VOLUME_DOWN 1 &amp;&amp; $BLANK_EVENT &amp;&amp; sendevent $INPUT_DEVICE 1 $VOLUME_UP 1 &amp;&amp; $BLANK_EVENT&quot;
  INST_UP=&quot;sendevent $INPUT_DEVICE 1 $VOLUME_DOWN 0 &amp;&amp; $BLANK_EVENT &amp;&amp; sendevent $INPUT_DEVICE 1 $VOLUME_UP 0 &amp;&amp; $BLANK_EVENT&quot;
  adb shell &quot;$INST_DN&quot;
  sleep 3
  adb shell &quot;$INST_UP&quot;
</code></pre>
<p>I already have a script for <a href=""https://github.com/qbalsdon/talos/blob/main/scripts/talkback"" rel=""nofollow noreferrer"">toggling accessibility on/off</a>, so I just tacked this on top of that and I get my service running every time.</p>
<p><strong>EDIT 2</strong></p>
<p>I put an issue on <a href=""https://issuetracker.google.com/issues/185546073"" rel=""nofollow noreferrer"">AOSP</a> regarding the fact that a developer needs to write a &quot;service that swipes&quot; as opposed to a &quot;service that navigates&quot;. This is problematic as the gestures can be modified and then my system will not behave as expected. Instead I should be able to call the particular action I want to do <code>NAVIGATE TO NEXT ELEMENT</code> or <code>NAVIGATE TO PREVIOUS ELEMENT</code> as opposed to &quot;SWIPE RIGHT&quot; and &quot;SWIPE LEFT&quot; - having read the WCAG guidelines I do not believe that this is violating the principles.</p>
",,2021-03-30 14:25:11
66973829,2,66972127,,0,,11788715.0,,"<p>That way should work. You use a <code>Popup Window</code>, so that's how to define the attributes:</p>
<pre><code>&lt;style name=&quot;Theme.Notes&quot; parent=&quot;Theme.MaterialComponents.DayNight&quot;&gt;
    &lt;item name=&quot;android:popupMenuStyle&quot;&gt;@style/PopupMenu&lt;/item&gt;
    &lt;item name=&quot;android:textAppearanceLargePopupMenu&quot;&gt;@style/myPopupMenuTextAppearanceLarge&lt;/item&gt;
    &lt;item name=&quot;android:textAppearanceSmallPopupMenu&quot;&gt;@style/myPopupMenuTextAppearanceSmall&lt;/item&gt;
&lt;/style&gt;

&lt;style name=&quot;PopupMenu&quot; parent=&quot;@android:style/Widget.MaterialComponents.PopupMenu&quot;&gt;
    &lt;item name=&quot;android:popupBackground&quot;&gt;@android:color/white&lt;/item&gt;
    &lt;item name=&quot;android:textColor&quot;&gt;#FF01F0&lt;/item&gt;
    &lt;item name=&quot;android:textSize&quot;&gt;12sp&lt;/item&gt;
&lt;/style&gt;

&lt;style name=&quot;myPopupMenuTextAppearanceSmall&quot; parent=&quot;@android:style/TextAppearance.DeviceDefault.Widget.PopupMenu.Small&quot;&gt;
    &lt;item name=&quot;android:textColor&quot;&gt;#545656&lt;/item&gt;
    &lt;item name=&quot;android:textSize&quot;&gt;15sp&lt;/item&gt;
&lt;/style&gt;

&lt;style name=&quot;myPopupMenuTextAppearanceLarge&quot; parent=&quot;@android:style/TextAppearance.DeviceDefault.Widget.PopupMenu.Large&quot;&gt;
    &lt;item name=&quot;android:textColor&quot;&gt;#545656&lt;/item&gt;
    &lt;item name=&quot;android:textSize&quot;&gt;25sp&lt;/item&gt;    
&lt;/style&gt;
</code></pre>
",,2021-04-06 17:44:40
67028492,2,67027584,,2,,2016562.0,,"<p>The 2nd parameter of the <code>ContextThemeWrapper</code> is a theme overlay, not a style.</p>
<p>You can define in <code>attrs.xml</code> a custom attribute:</p>
<pre><code>&lt;attr name=&quot;customTextInputStyle&quot; format=&quot;reference&quot; /&gt;
</code></pre>
<p>then in your app theme:</p>
<pre><code>&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.MaterialComponents.*&quot;&gt;
    &lt;!-- ..... --&gt;
    &lt;item name=&quot;customTextInputStyle&quot;&gt;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&lt;/item&gt;
&lt;/style&gt;
</code></pre>
<p>and finally:</p>
<pre><code>    TextInputLayout til = new TextInputLayout(this,null,R.attr.customTextInputStyle);
    til.setHint(&quot;Label&quot;);
    TextInputEditText et = new TextInputEditText(til.getContext());  //important: get the themed context from the TextInputLayout
    til.addView(et);
    buttonsLayout.addView(til);
</code></pre>
<p><a href=""https://i.sstatic.net/LDU2A.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/LDU2A.png"" alt=""enter image description here"" /></a></p>
",,2021-04-09 21:26:00
67043579,2,67002032,,0,,1542667.0,,"<p>Not an answer yet, but a standalone example that might help debug this. From the example you've provided it's hard to tell if there is a logic problem in your code.</p>
<pre><code>#!/usr/bin/env kotlin

@file:Repository(&quot;https://repo1.maven.org/maven2/&quot;)
@file:DependsOn(&quot;com.squareup.okhttp3:okhttp:4.9.1&quot;)
@file:DependsOn(&quot;com.squareup.okhttp3:logging-interceptor:4.9.1&quot;)
@file:CompilerOptions(&quot;-jvm-target&quot;, &quot;1.8&quot;)

// https://stackoverflow.com/a/66364994/1542667

import okhttp3.Cache
import okhttp3.Dns
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.logging.LoggingEventListener
import java.io.File
import java.net.InetAddress
import java.net.UnknownHostException

val cache = Cache(File(&quot;/tmp/tmpcache.2&quot;), 100 * 1024 * 1024)

val systemDns = Dns.SYSTEM
var failDns = false

val client = OkHttpClient.Builder()
  .eventListenerFactory(LoggingEventListener.Factory { println(it) })
  .cache(cache)
  .dns(object : Dns {
    override fun lookup(hostname: String): List&lt;InetAddress&gt; {
      if (failDns) {
        throw UnknownHostException(&quot;NO HOST&quot;)
      }

      return systemDns.lookup(hostname)
    }
  })
  .build()

val request = Request.Builder()
  .url(&quot;https://raw.github.com/square/okhttp/master/README.md&quot;)
  .build()

makeRequest()
failDns = true
makeRequest()

fun makeRequest() {
  client.newCall(request).execute().use {
    println(it.headers)
    println(&quot;cache ${it.cacheResponse} network ${it.networkResponse}&quot;)
    println(it.body!!.string().lines().first())
  }
}
</code></pre>
<p>This example will run directly in Intellij or from the command line if you have kotlin installed. <a href=""https://stackoverflow.com/a/66364994/1542667"">https://stackoverflow.com/a/66364994/1542667</a></p>
<p>Output</p>
<pre><code>[0 ms] callStart: Request{method=GET, url=https://raw.github.com/square/okhttp/master/README.md}
[19 ms] cacheMiss
[20 ms] proxySelectStart: https://raw.github.com/
[21 ms] proxySelectEnd: [DIRECT]
[21 ms] dnsStart: raw.github.com
[64 ms] dnsEnd: [raw.github.com/185.199.109.133, raw.github.com/185.199.110.133, raw.github.com/185.199.111.133, raw.github.com/185.199.108.133]
[73 ms] connectStart: raw.github.com/185.199.109.133:443 DIRECT
[105 ms] secureConnectStart
[293 ms] secureConnectEnd: Handshake{tlsVersion=TLS_1_3 cipherSuite=TLS_AES_256_GCM_SHA384 peerCertificates=[CN=www.github.com, O=&quot;GitHub, Inc.&quot;, L=San Francisco, ST=California, C=US, CN=DigiCert SHA2 High Assurance Server CA, OU=www.digicert.com, O=DigiCert Inc, C=US, CN=DigiCert High Assurance EV Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US] localCertificates=[]}
[365 ms] connectEnd: h2
[368 ms] connectionAcquired: Connection{raw.github.com:443, proxy=DIRECT hostAddress=raw.github.com/185.199.109.133:443 cipherSuite=TLS_AES_256_GCM_SHA384 protocol=h2}
[369 ms] requestHeadersStart
[372 ms] requestHeadersEnd
[721 ms] responseHeadersStart
[723 ms] responseHeadersEnd: Response{protocol=h2, code=301, message=, url=https://raw.github.com/square/okhttp/master/README.md}
[726 ms] responseBodyStart
[726 ms] responseBodyEnd: byteCount=0
[771 ms] cacheMiss
[771 ms] connectionReleased
[771 ms] proxySelectStart: https://raw.githubusercontent.com/
[772 ms] proxySelectEnd: [DIRECT]
[772 ms] dnsStart: raw.githubusercontent.com
[797 ms] dnsEnd: [raw.githubusercontent.com/185.199.111.133, raw.githubusercontent.com/185.199.108.133, raw.githubusercontent.com/185.199.109.133, raw.githubusercontent.com/185.199.110.133]
[799 ms] connectionAcquired: Connection{raw.github.com:443, proxy=DIRECT hostAddress=raw.github.com/185.199.109.133:443 cipherSuite=TLS_AES_256_GCM_SHA384 protocol=h2}
[799 ms] requestHeadersStart
[800 ms] requestHeadersEnd
[980 ms] responseHeadersStart
[980 ms] responseHeadersEnd: Response{protocol=h2, code=200, message=, url=https://raw.githubusercontent.com/square/okhttp/master/README.md}
cache-control: max-age=300
content-security-policy: default-src 'none'; style-src 'unsafe-inline'; sandbox
content-type: text/plain; charset=utf-8
etag: W/&quot;846e6af5d55b29262841dbd93b02a95ff38f8709b68aa782be13f29d094a5421&quot;
strict-transport-security: max-age=31536000
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-github-request-id: F08E:5C09:CAD563:D4D764:6072B974
accept-ranges: bytes
date: Sun, 11 Apr 2021 09:52:07 GMT
via: 1.1 varnish
x-served-by: cache-lon4280-LON
x-cache: HIT
x-cache-hits: 1
x-timer: S1618134728.761197,VS0,VE155
vary: Authorization,Accept-Encoding
access-control-allow-origin: *
x-fastly-request-id: da78b4491988420875d181584295baef3b3f3a6d
expires: Sun, 11 Apr 2021 09:57:07 GMT
source-age: 0

cache null network Response{protocol=h2, code=200, message=, url=https://raw.githubusercontent.com/square/okhttp/master/README.md}
[1007 ms] responseBodyStart
[1007 ms] responseBodyEnd: byteCount=2747
[1007 ms] connectionReleased
[1007 ms] callEnd
OkHttp
[0 ms] callStart: Request{method=GET, url=https://raw.github.com/square/okhttp/master/README.md}
[15 ms] cacheConditionalHit: Response{protocol=http/1.1, code=301, message=, url=https://raw.github.com/square/okhttp/master/README.md}
[15 ms] connectionAcquired: Connection{raw.github.com:443, proxy=DIRECT hostAddress=raw.github.com/185.199.109.133:443 cipherSuite=TLS_AES_256_GCM_SHA384 protocol=h2}
[15 ms] requestHeadersStart
[15 ms] requestHeadersEnd
[35 ms] responseHeadersStart
[35 ms] responseHeadersEnd: Response{protocol=h2, code=301, message=, url=https://raw.github.com/square/okhttp/master/README.md}
[35 ms] responseBodyStart
[35 ms] responseBodyEnd: byteCount=0
[42 ms] cacheMiss
[52 ms] cacheHit: Response{protocol=http/1.1, code=200, message=, url=https://raw.githubusercontent.com/square/okhttp/master/README.md}
[52 ms] connectionReleased
[52 ms] callEnd
cache-control: max-age=300
content-security-policy: default-src 'none'; style-src 'unsafe-inline'; sandbox
content-type: text/plain; charset=utf-8
etag: W/&quot;846e6af5d55b29262841dbd93b02a95ff38f8709b68aa782be13f29d094a5421&quot;
strict-transport-security: max-age=31536000
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-github-request-id: F08E:5C09:CAD563:D4D764:6072B974
accept-ranges: bytes
date: Sun, 11 Apr 2021 09:52:07 GMT
via: 1.1 varnish
x-served-by: cache-lon4280-LON
x-cache: HIT
x-cache-hits: 1
x-timer: S1618134728.761197,VS0,VE155
vary: Authorization,Accept-Encoding
access-control-allow-origin: *
x-fastly-request-id: da78b4491988420875d181584295baef3b3f3a6d
expires: Sun, 11 Apr 2021 09:57:07 GMT
source-age: 0

cache Response{protocol=http/1.1, code=200, message=, url=https://raw.githubusercontent.com/square/okhttp/master/README.md} network null
OkHttp
</code></pre>
",,2021-04-11 09:53:06
67179800,2,67178061,,2,,7605543.0,,"<p>You can make use of distributed strategies in tensorflow to make sure that your multi-GPU set up is being used appropriately:</p>
<pre><code>mirrored_strategy = tf.distribute.MirroredStrategy()
with mirrored_strategy.scope():
    for test_indel in range(1,11):
         &lt;etc&gt;
</code></pre>
<p>See the docs <a href=""https://www.tensorflow.org/api_docs/python/tf/distribute/MirroredStrategy"" rel=""nofollow noreferrer"">here</a></p>
<p>Mirrored strategy is used for synchronous distributed training across multiple GPUs on a single server, which sounds like the setup you're using. There's also a more intuitive explanation <a href=""https://towardsdatascience.com/train-a-neural-network-on-multi-gpu-with-tensorflow-42fa5f51b8af"" rel=""nofollow noreferrer"">in this blog</a>.</p>
<p>Also, you could try making use of <a href=""http://tensorflow.org/guide/mixed_precision"" rel=""nofollow noreferrer"">mixed precision</a> which should free up memory significantly by altering the float type of the parameters in the model.</p>
",,2021-04-20 13:20:03
67208591,2,67067920,,0,,5267209.0,,"<p>First of all, create a background worker with work manager which is one of the jetpack components in android world. In that worker, if you got new feeds you can show local notifications to the user. Here, use this library to firing the notifications: <a href=""https://github.com/theozgurr/NotificationMan"" rel=""nofollow noreferrer"">https://github.com/theozgurr/NotificationMan</a>
<br>And you can see usage of the work manager in it.</p>
",,2021-04-22 07:23:23
67218323,2,67217227,,1,,4487858.0,,"<p>I think it's a good idea to check out the design of the <code>Composables</code> provided by the framework.
For example:</p>
<pre><code>LazyColumn(
    contentPadding = PaddingValues(horizontal = 16.dp, vertical = 8.dp),
) {
    // ...
}
</code></pre>
<p>So in short, yes it is a good idea, and I'd use it for grouping attributes.</p>
",,2021-04-22 17:45:15
67228765,2,61250353,,1,,8970591.0,,"<p>I also had a hard time differentiating between the checkpoint objects used when I looked at other people's code, so I wrote down some notes about when to use which one and how to use them in general.
Either-way, I think it might be useful for other people having the same issue:</p>
<h2>Saving model Checkpoints</h2>
<p>These are 2 ways of saving your model's checkpoints, each is for a different use case:</p>
<h3>1) Checkpoint &amp; CheckpointManager</h3>
<p>This is use-full when you are managing the training loops yourself.</p>
<p>You use them like this:</p>
1.1) Checkpoint
<p>Definition from the <a href=""https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint"" rel=""nofollow noreferrer"">docs</a>:
&quot;<em>A Checkpoint object can be constructed to save either a single or group of trackable objects to a checkpoint file</em>&quot;.</p>
<p>How to initialise it:</p>
<ul>
<li>You can pass it key value pairs for:
<ul>
<li>All the custom function calls or objects that make up your model and you want to keep track of:</li>
<li>Like a generator, discriminiator, loss function, optimizer etc</li>
</ul>
</li>
</ul>
<pre><code>ckpt = Checkpoint(discr_opt=discr_opt,
                  genrt_opt=genrt_opt,
                  wgan = wgan,
                  d_model = d_model,
                  g_model = g_model)
</code></pre>
1.2) CheckpointManager
<p>This literally manages the checkpoints you have defined to be stored at a location and things like how many to to keep.
Definition from the <a href=""https://www.tensorflow.org/api_docs/python/tf/train/CheckpointManager"" rel=""nofollow noreferrer"">docs</a>:
&quot;<em>Manages multiple checkpoints by keeping some and deleting unneeded ones</em>&quot;</p>
<p>How to initialise it:</p>
<ul>
<li>Initialise it with the CheckPoint object you create as first argument.</li>
<li>The directory where to save the checkpoint files.</li>
<li>And you probably want to define how much you want to keep, since this can be a lot of complex models</li>
</ul>
<pre><code>manager = CheckpointManager(ckpt, &quot;training_checkpoints_wgan&quot;, max_to_keep=3)
</code></pre>
<p>How to use it:</p>
<ul>
<li>We have setup the manager object with our specified checkpoints, so it's ready to use.</li>
<li>Call this at the end of each training epoch</li>
</ul>
<pre><code>manager.save()
</code></pre>
<h3>2) ModelCheckpoint (callback)</h3>
<p>You want to use this <strong>callback</strong> when you are not managing epoch iterations yourself. For example when you have setup a relatively simple Sequential model and you call model.fit(), which manages the training process for you.</p>
<p>Definition from the <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/ModelCheckpoint"" rel=""nofollow noreferrer"">docs</a>:
&quot;<em>Callback to save the Keras model or model weights at some frequency.</em>&quot;</p>
<p>How to initialise it:</p>
<ul>
<li><p>Pass in the path where to save the model</p>
</li>
<li><p>The option <em>save_weights_only</em> is set to False by default:</p>
<ul>
<li>If you want to only save the weights make sure to update this</li>
</ul>
</li>
<li><p>The option <em>save_best_only</em> is set to False by default:</p>
<ul>
<li>If you want to only save the best model instead of all of them, you can set this to True.</li>
</ul>
</li>
<li><p><em>verbose</em> is set to 0 (False), so you can update this to 1 to validate it</p>
</li>
</ul>
<pre><code>mc = ModelCheckpoint(&quot;training_checkpoints/cp.ckpt&quot;, save_best_only=True, save_weights_only=False)
</code></pre>
<p>How to use it:</p>
<ul>
<li>The model checkpoint callback is now ready to for training.</li>
<li>You pass in the object in you into your <em>callbacks</em> list when you fit the model:</li>
</ul>
<pre><code>model.fit(X, y, epochs=100, callbacks=[mc])

</code></pre>
",,2021-04-23 10:58:44
67264511,2,67263942,,0,,15519629.0,,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",,2021-04-26 09:57:28
67314287,2,67314008,,3,,4211264.0,,"<p>Try this code. I have not tested it but It will give you the desired output. Let me know If not</p>
<pre><code>private int getYears() {
int year = 2008; // get from the year edittext
int month = 9; // get from the month edittext
int day = 23; // get from the date edittext
Calendar c1 = Calendar.getInstance();
c1.set(year, month - 1, day, 0, 0); // as MONTH in calender is 0 based.

Calendar c2 = Calendar.getInstance();
int diff = c2.get(Calendar.YEAR) - c1.get(Calendar.YEAR);
if (c1.get(Calendar.MONTH) &gt; c2.get(Calendar.MONTH) ||
        (c1.get(Calendar.MONTH) == c2.get(Calendar.MONTH) &amp;&amp; c1.get(Calendar.DATE) &gt; c2.get(Calendar.DATE))) {
  diff--;
}
return diff;
</code></pre>
<p>}</p>
<p>And here is an equivalent Kotlin funtion</p>
<pre><code>private fun getYears(): Int {
    val year = 2008 // get from the year edittext
    val month = 9 // get from the month edittext
    val day = 23 // get from the date edittext
    val c1 = Calendar.getInstance()
    c1[year, month - 1, day, 0] = 0 // as MONTH in calender is 0 based.
    val c2 = Calendar.getInstance()
    var diff = c2[Calendar.YEAR] - c1[Calendar.YEAR]
    if (c1[Calendar.MONTH] &gt; c2[Calendar.MONTH] ||
        c1[Calendar.MONTH] == c2[Calendar.MONTH] &amp;&amp; c1[Calendar.DATE] &gt; c2[Calendar.DATE]
    ) {
        diff--
    }
    return diff
}
</code></pre>
",,2021-04-29 09:07:01
67335214,2,67334970,,4,,2258611.0,,"<p>The permissions are added by the dependencies of your app. An android manifest file is automatically merged with the manifest files of its dependencies.</p>
<p>The top manifest file has the priority and can alter the values of the manifest files in its dependencies.</p>
<p>To remove a permission, use the <code>tools:node=&quot;remove&quot;</code> tag. For example, to remove the <code>RECORD_AUDIO</code> permission, add this line to your app's manifest file between the <code>&lt;manifest&gt;</code> XML tags:</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot; tools:node=&quot;remove&quot; /&gt;
</code></pre>
<p>Check out the android developer guide for more information:
<a href=""https://developer.android.com/studio/build/manifest-merge#merge_rule_markers"" rel=""nofollow noreferrer"">Merge multiple manifest files</a></p>
",,2021-04-30 13:57:26
67438294,2,60578801,,2,,3586093.0,,"<p>Perhaps others may benefit from a concrete, reproducible answer. This post corresponds to this <a href=""https://tfhub.dev/tensorflow/bert_en_uncased_L-12_H-768_A-12/4"" rel=""nofollow noreferrer"">specific tfhub model</a>.</p>
<p><strong>tensorflow_hub version:  0.12.0</strong>
<br><strong>tensorflow version:  2.2.0</strong></p>
<p>I set up the following path on my Linux server:</p>
<pre class=""lang-sh prettyprint-override""><code># Note, I manually created this entire path before ever downloading tfhub models
/opt/tfhub/tf2/bert_en_uncased_L-12_H-768_A-12_4/
</code></pre>
<p>(For various reasons, we have some needs for Tensorflow 1.x still, so I figured it might be a good idea to separate models based on if they are designed to work with tensorflow 1.x vs tensorflow 2.x, hence the <code>tf2</code> in my path)</p>
<p>I then downloaded the model file, pushed it to my Linux server, placed it in the above location, and exectued:</p>
<pre class=""lang-sh prettyprint-override""><code># bash
tar xzf bert_en_uncased_L-12_H-768_A-12_4.tar.gz
</code></pre>
<p>That gave me the following files:</p>
<pre><code># python
import os
os.listdir(&quot;/opt/tfhub/tf2/bert_en_uncased_L-12_H-768_A-12_4/&quot;)
&gt;&gt;&gt; ['keras_metadata.pb', 'saved_model.pb', 'assets', 'variables']
</code></pre>
<p>So then I can load the model like so:</p>
<pre><code># python
import tensorflow_hub as tfhub
import tensorflow as tf
bert_layer = tfhub.KerasLayer(tfhub.load(&quot;/opt/tfhub/tf2/bert_en_uncased_L-12_H-768_A-12_4&quot;))
</code></pre>
",,2021-05-07 16:04:04
67487044,2,67486958,,0,,10012330.0,,"<p><a href=""https://stackoverflow.com/a/60124584/10012330"">https://stackoverflow.com/a/60124584/10012330</a> &lt;-- check here</p>
<p>If you want to use the Kotlin Random class then use like this. with below import.</p>
<pre><code>import kotlin.random.Random

val random = Random(12)
</code></pre>
",,2021-05-11 12:45:25
67558695,2,62282686,,9,,9322624.0,,"<p>In Android Developer, they don't say that clearly how to implement <strong>MediaBrowserServiceCompat</strong> and <strong>MediaBrowserCompat</strong> in the <a href=""https://developer.android.com/guide/topics/media-apps/audio-app/building-an-audio-app"" rel=""noreferrer"">Audio app overview</a> article(if you are following this article). But you can implement with the code below or update the newest version of this support library in this <a href=""https://developer.android.com/jetpack/androidx/releases/media"" rel=""noreferrer"">article</a>.</p>
<pre><code>dependencies {
    implementation &quot;androidx.media:media:1.3.1&quot;
}
</code></pre>
",,2021-05-16 15:50:08
67643697,2,67643464,,2,,11983124.0,,"<p>Kotlin is a null safe language, it tries to eliminate every possible null references from the code. You can perform a nullability check on the variable and then can use it like this</p>
<p><code>if(curfrag != null) { transaction.hide(curFrag)</code></p>
<p>This too will only work if variable <code>curfrag</code> is immutable (that means a local variable which is not modified between the check and the usage or a member val which has a backing field and is not overridable), because otherwise it might happen that <code>curfrag</code> changes to null after the check from some other thread.</p>
<p>But Safe calls <code>?.</code> with <code>let</code> always gives us non nullable result, what Safe calls operator <code>?.</code> does is, it only performs any operation following it, only if the variable is not-null otherwise it returns null.</p>
<p>It works with all mutable types or member <code>var</code>, It check for the null once and then provides the result. If value is non null it performs the defined operation otherwise skips it. <code>it</code> refers to the copy of that non-null value.</p>
<p>So when you do this</p>
<p><code>curFrag?.let { transaction.hide(curFrag) }</code></p>
<p>curFrag can be null as you are directly passing a nullable value.</p>
<p>But in this case</p>
<p><code>curFrag?.let { transaction.hide(it) }</code></p>
<p>it only passes value if it's a non-null value.</p>
",,2021-05-21 20:49:57
67660706,2,67658276,,0,,16006976.0,,"<p>Try this in your function:</p>
<pre><code>val max = modelList.maxOrNull()
</code></pre>
<p>If you need an index of max value then try this:</p>
<pre><code>val maxIndex = modelList.indexOf(max)
</code></pre>
<p>Also I suggest you look at this <a href=""https://kotlinlang.org/docs/collection-aggregate.html"" rel=""nofollow noreferrer"">https://kotlinlang.org/docs/collection-aggregate.html</a>
There is a lot of useful info about how to manipulate with collections in kotlin.
There is also a cool series of exercises from kotlin team, which can help a lot, when you are trying to learn how to work with collections:
<a href=""https://play.kotlinlang.org/koans/Collections/Introduction/Task.kt"" rel=""nofollow noreferrer"">https://play.kotlinlang.org/koans/Collections/Introduction/Task.kt</a></p>
",,2021-05-23 14:15:32
67661911,2,67660154,,0,,14253444.0,,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",,2021-05-23 16:17:40
67747013,2,67746743,,1,,2398000.0,,"<p>As stated in the comments above it is up to your implementation. Information can be updated outside of what your UI can do. You can create a user with your UI, but your UI doesn't dictate when the User is online, that is dictated by an outside source of information which could be represented in your database, and through that chain is then represented in your UI.</p>
",,2021-05-29 01:38:21
67776519,2,67775846,,5,,1540818.0,,"<p>You can iterate the string's characters using <code>map</code> directly.</p>
<p>With Kotlin &gt;= 1.6:</p>
<pre class=""lang-kotlin prettyprint-override""><code>var numberList = readln().map { it.digitToInt() }
</code></pre>
<p>With Kotlin &gt;= 1.5 but &lt; 1.6:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = readLine() ?: error(&quot;Missing input&quot;)
var numberList = input.map { it.digitToInt() }
</code></pre>
<p>With Kotlin &lt; 1.5:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = readLine() ?: error(&quot;Missing input&quot;)
var numberList = input.map { &quot;$it&quot;.toInt() }
</code></pre>
<p>The character is converted to a string using <code>&quot;$it&quot;</code> because <code>Char.toInt()</code> would return the ASCII code of the character instead of the value represented by the digit. <code>String.toInt()</code> actually parses the number represented by the string in base 10.</p>
<p>This possibly unexpected behaviour is the reason <code>Char.digitToInt()</code> and <code>Char.code</code> were introduced in Kotlin 1.5.</p>
",,2021-05-31 15:25:37
67812589,2,67631263,,2,,932052.0,,"<p>I would ask you to consider <a href=""https://www.w3.org/WAI/WCAG21/Understanding/on-focus"" rel=""nofollow noreferrer"">WCAG Guideline 3.2.1:</a></p>
<blockquote>
<p>The intent of this Success Criterion is to ensure that functionality is predictable as visitors navigate their way through a document. Any component that is able to trigger an event when it receives focus must not change the context. Examples of changing context when a component receives focus include, but are not limited to:</p>
<ul>
<li>forms submitted automatically when a component receives focus;</li>
<li>new windows launched when a component receives focus;</li>
<li><strong>focus is changed to another component when that component receives focus;</strong> &lt;-- emphasis here</li>
</ul>
</blockquote>
<p>Also a quote from the <a href=""https://youtu.be/bTodlNvQGfY?t=1017"" rel=""nofollow noreferrer"">Android Accessibility Team</a>:</p>
<blockquote>
<p>So something similar that people like to do is manage accessibility focus themselves. And again, this is a bad idea. accessibility focus has to be determined by the accessibility service, and just like announcements this creates an inconsistency in experience. And actually, that one of the biggest issues that accessibility users face, inconsistency, across applications and over time.</p>
</blockquote>
<p>With that said, you may want to consider looking at ensuring the <a href=""https://developer.android.com/training/keyboard-input/navigation#Direction"" rel=""nofollow noreferrer"">focus order / priority</a> of the component using the following attributes:</p>
<pre><code>android:nextFocusUp
android:nextFocusDown
android:nextFocusLeft
android:nextFocusRight
</code></pre>
<p>And also ensure that any group component that may get highlighted has the <a href=""https://developer.android.com/reference/android/view/View#attr_android:importantForAccessibility"" rel=""nofollow noreferrer""><code>importantForAccessibility</code></a> attribute set.</p>
<p>I'd like to try help some more, but without an example XML file, it's difficult to get to your particular use case. Have you tried testing the view layout with accessibility users?</p>
",,2021-06-02 21:06:08
67838891,2,65380957,,-1,,3831588.0,,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",,2021-06-04 14:19:50
67861802,2,67860691,,2,,11983124.0,,"<p>It is possible to show custom options for your custom option using enum format in your <code>declare-styleable</code> tag for your custom view.</p>
<p>First, you declare your desired attributes in your attrs.xml file like this</p>
<pre><code>&lt;declare-styleable name=&quot;customView&quot;&gt;
  &lt;attr name=&quot;customOption&quot; format=&quot;enum&quot;&gt;
    &lt;enum name=&quot;option1&quot; value=&quot;0&quot; /&gt;
    &lt;enum name=&quot;option2&quot; value=&quot;1&quot; /&gt;
  &lt;/attr&gt;
&lt;/declare-styleable&gt;
</code></pre>
<p>Now get this <code>customOption</code> value in your customView like this</p>
<pre><code>const val OPTION_1 = 0 //for readability
const val OPTION_2 = 1 //for readability
var customOption = OPTION_1

init {
  paint.isAntiAlias = true
  setupAttributes(attrs)
}

private fun setupAttributes(attrs: AttributeSet?) {
  val typedArray = context.theme.obtainStyledAttributes(attrs, R.styleable.customView, 0, 0)
  customOption = typedArray.getInt(R.styleable.customView_customOption, OPTION_1.toInt())
}
</code></pre>
",,2021-06-06 17:20:10
67949230,2,67949085,,0,,195176.0,,"<p>I answer myself, platform attributes works, but they start with &quot;android:...&quot;.</p>
<p>So, using <code>&quot;android:background&quot;</code> it works.</p>
",,2021-06-12 13:17:41
69135992,2,69131422,,1,,7729375.0,,"<p>This is easier using the APIs provided in Kotlin</p>
<p>I left some comments to clarify each individual step.
Generally, manual manipulation of strings will be more difficult than the provided APIs</p>
<p>Realistically, usage of RegEx would be your best friend, but I wanted to keep this code related rather than solving it in that manner.</p>
<p>Also, in Kotlin, there is a distinct difference between double quotes <code>&quot;</code> and single quotes <code>'</code>
Double quotes are a string, and Single quotes are a Char. There is a different API under the 2.</p>
<p>I use the single quote in string iterator methods to keep it more simple and efficient, rather than having to create new strings each time</p>
<pre><code>val myUsername = &quot;super dude 25&quot;
val expectedUsername = &quot;super_dude_25&quot;

val lotsOfSpaces = &quot;  super    dude   58    &quot;
val expectedSpaces = &quot;super_dude_58&quot;

fun formatUsername(string: String): String {
    // Set var to detect duplicate chars
    var prevChar = ' '

    return string.trim() // Remove surrounding spaces to simplify
        .replace(' ', '_') // Spaces into underscores
        .filter { char -&gt; // Remove duplicated underscores
            if (char == '_' &amp;&amp; prevChar == '_') false
            else {
               prevChar = char
               true 
            }
        }
}

val updated = formatUsername(myUsername)
println(updated) // super_dude_25
assert(updated == expectedUsername)

val second = formatUsername(lotsOfSpaces)
println(second)
assert(second == expectedSpaces)
</code></pre>
",,2021-09-10 17:35:15
69861451,2,69860322,,0,,4292033.0,,"<p>When you instantiate the model <code>model = tf.keras.Model(inputs=input, outputs=normalized)</code>, the model has not yet been built. You will need to call the build method, usually when you do everything by hand using the gradient tape, or when you first call the fit method. At that point, the weights will be initialized. Now, if you use the <em>fit</em> method or call your model <code>output_tensors = mymodel(input_tensors, training=True)</code>, or conversely if you use the <em>predict</em> method or <code>use output_tensors = mymodel(input_tensors, training=False)</code>, the training flag will be set to True or False, (which is obvious if you call the model directly).</p>
",,2021-11-06 04:27:13
70035892,2,70035501,,0,,4221943.0,,"<p>Kotlin's equality operators (== and !=) can handle nulls, while the order comparison operators (&lt;, &lt;=, &gt;, &gt;=) can't.</p>
<p>You have to check the nullability before doing the comparison.</p>
<p>You may also use another value if the live data is null (like 0) using the Elvis operator, but I won't suggest this solution, because the <em>null</em> value is not the same as the <em>zero</em> value.</p>
",,2021-11-19 13:49:57
70055067,2,70054731,,0,,9657861.0,,"<p>There are actually two formats you can use to save your model. Either you simply save your model with the older Keras H5 format <code>model.save(&quot;test&quot;, save_format='h5')</code> or you use the <code>Tensorflow SavedModel format</code> by either explicitly setting <code>model.save(&quot;test&quot;, save_format='tf')</code> or simply <code>model.save(&quot;test&quot;)</code>, since the <code>tf</code> format is used by default when you call <code>model.save</code>. With <code>model.save(&quot;model.h5&quot;, save_format='tf')</code>, you seem to be trying to use both formats at once, which does not look like it is working. Saving your model with the <code>tf</code> format should work. More information can be found <a href=""https://www.tensorflow.org/guide/keras/save_and_serialize"" rel=""nofollow noreferrer"">here</a>. The following model, for example, can only be saved when using <code>model.save</code> or <code>model.save(&quot;test&quot;, save_format='tf')</code>:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

class SomeModel(tf.keras.Model):

  def __init__(self):
    super(SomeModel, self).__init__()
    self.dense1 = tf.keras.layers.Dense(4, activation=tf.nn.relu, )
    self.dense2 = tf.keras.layers.Dense(5, activation=tf.nn.softmax)

  def call(self, inputs):
    x = self.dense1(inputs)
    return self.dense2(x)

model = SomeModel()
model.compute_output_shape(input_shape=(1,1))
model.save(&quot;model&quot;)
</code></pre>
<p>Calling <code>model.save(&quot;test&quot;, save_format='h5')</code> or <code>model.save(&quot;test.h5&quot;)</code> or even <code>model.save(&quot;model.h5&quot;, save_format='tf')</code> on this subclassed model will in result in an error.</p>
<p><code>Checkpoints</code> are especially useful when you need to interrupt the training or it crashes and you want to resume training your model from a saved state. During inference, you could easily load the latest checkpoint of your model and make predictions without having to recompile it.</p>
",,2021-11-21 13:41:43
70068776,2,70068474,,1,,448875.0,,"<p>Kotlin does not have 2D arrays, so it does not support operations for 2D arrays. Assuming we have an array of arrays and we know the size of each row is e.g. <code>3</code>, we can get averages using the following:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val arr = arrayOf(
    arrayOf(1, 2, 3),
    arrayOf(4, 5, 6),
)

val result = (0 until 3).map { col -&gt;
    arr.map { it[col] }.average()
}

println(result) // [2.5, 3.5, 4.5]
</code></pre>
<p>If you often perform such operations then you can look at <a href=""https://github.com/Kotlin/multik"" rel=""nofollow noreferrer"">Multik</a> which is a multi-dimensional array implementation for Kotlin.</p>
",,2021-11-22 16:03:14
70084460,2,70083421,,0,,8950365.0,,"<p>To get data stored by <code>tensorflow::Tensor</code> you can:</p>
<p>[1] Use <code>Tensor::data()</code> method which returns <code>void*</code>. Data in tensor is stored in row major order, so in case of 2D tensor you can write:</p>
<pre><code>float* data = static_cast&lt;float*&gt;(tensor.data());
int width = ...; // read here second dim of tensor
auto accessData = [&amp;](int y, int x) {
    return data[y * width + x];
};
cv::Mat m(height,width,CV_32FC1);
for (int y = 0; y &lt; height; ++y)
    for (int x = 0; x &lt; width; ++x)
        m.at&lt;float&gt;(y,x) = accessData(y,x);
</code></pre>
<p>[2] Use <code>tensor&lt;T,NDIMS&gt;()</code> template method of <code>tensorflow::Tensor</code> to get wrapper for <code>data()</code> pointer, which provides <code>operator()(Indices...)</code> operator which simplifies data access:</p>
<pre><code>auto tensorMap = tensor.tensor&lt;float,2&gt;();
for (int y = 0; y &lt; height; ++y)
   for (int x = 0; x &lt; width; ++x)
      m.at&lt;float&gt;(y,x) = tensorMap(y,x);
</code></pre>
<p>(<code>'type: float shape: [16900,13]'</code> indices that tensor has 2-dims, so <code>resized_tensor.shape().dim_sizes()[2];</code> is out of bounds access)</p>
",,2021-11-23 16:32:30
70095264,2,58320492,,5,,3252091.0,,"<p>You can use <a href=""https://github.com/mockative/mockative"" rel=""noreferrer"">Mockative</a> to mock interfaces in Kotlin/Native and Kotlin Multiplatform, not unlike how you'd mock dependencies using MockK or Mockito.</p>
<p><strong>Full disclosure: I am one of the authors of Mockative</strong></p>
<p>Here's an example:</p>
<pre class=""lang-kotlin prettyprint-override""><code>class GitHubServiceTests {
    @Mock val api = mock(classOf&lt;GitHubAPI&gt;())

    val service = GitHubService(api)

    @Test
    fun test() {
        // Given
        val id = &quot;mockative/mockative&quot;
        val mockative = Repository(id = id, name = &quot;Mockative&quot;)
        given(api).invocation { fetchRepository(id) }
            .thenReturn(mockative)

        // When
        val repository = service.getRepository(id)

        // Then
        assertEquals(mockative, repository)

        // You can also verify function calls on mocks
        verify(api).invocation { fetchRepository(id) }
            .wasInvoked(exactly = once)
    }
}
</code></pre>
<p>Spies aren't currently supported, but they are on the roadmap.</p>
",,2021-11-24 11:28:53
70182443,2,70181237,,1,,9657861.0,,"<p>Not sure how efficient this is and if it is a viable option for you, but you could try using <code>tf.TensorArray</code> with <code>tf.sparse.sparse_dense_matmul</code>:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

a = tf.constant([[10],
                 [0],
                 [4]])
s = tf.sparse.from_dense(a)
b = tf.constant([[3, 4],
                 [1, 2],
                 [2, 5]])

ta = tf.TensorArray(dtype=tf.int32, size=0, dynamic_size=True)
for i in range(len(b)):
  if i == len(b):
    ta = ta.write(ta.size(), tf.sparse.sparse_dense_matmul(s, b[i:])[i])
  else:
    ta = ta.write(ta.size(), tf.sparse.sparse_dense_matmul(s, b[i:i + 1])[i])
print(ta.stack())
</code></pre>
<pre><code>tf.Tensor(
[[30 40]
 [ 0  0]
 [ 8 20]], shape=(3, 2), dtype=int32)
</code></pre>
",,2021-12-01 10:18:20
70192311,2,70190133,,1,,13968673.0,,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",,2021-12-01 22:59:59
70222677,2,70216538,,1,,17546839.0,,"<p>If you open task manager, at time of importing tensorflow and creating your model, will it show extremely high values of GPU memory reserved?</p>
<p>If so, it may not be the size of either the model or the data, but the fact that tensorflow reserves as much memory as possible for all model training.</p>
<p>For my personal example, my 3080 has 10 GB of Dedicated GPU Memory and tensorflow took 9.7GB of it.</p>
<p>If this is the case, have a look at the set_memory_growth method on <a href=""https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth"" rel=""nofollow noreferrer"">https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth</a>.</p>
<p>Using this reduced my Dedicated GPU Memory usage from 9.7GB to in between 3.2GB and 4 GB.</p>
<p>EDIT: I'm not sure at which point it will aim to allocate that Memory, but if you attempt to train the model and keep an eye on Task Manager Performance for the GPU you should find if it is behaving this way!</p>
",,2021-12-04 02:49:39
70234516,2,57420203,,4,,5360439.0,,"<p>Kotlin stdlib provides this function since <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/digit-to-char.html"" rel=""nofollow noreferrer"">1.5.0</a>.</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun Int.digitToChar(): Char
</code></pre>
<blockquote>
<p>Returns the Char that represents this decimal digit. Throws an exception if this value is not in the range 0..9.</p>
</blockquote>
<blockquote>
<p>If this value is in 0..9, the decimal digit Char with code '0'.code + this is returned.</p>
</blockquote>
<p>Example</p>
<pre class=""lang-kotlin prettyprint-override""><code>println(5.digitToChar()) // 5
println(3.digitToChar(radix = 8)) // 3
println(10.digitToChar(radix = 16)) // A
println(20.digitToChar(radix = 36)) // K
</code></pre>
",,2021-12-05 12:57:41
70345018,2,65491916,,3,,3252091.0,,"<p>You can use <a href=""https://github.com/mockative/mockative"" rel=""nofollow noreferrer"">Mockative</a> to mock interfaces in Kotlin/Native and Kotlin Multiplatform, not unlike how you'd mock dependencies using MockK or Mockito.</p>
<p><strong>Full disclosure: I am one of the authors of Mockative</strong></p>
<p>Here's an example:</p>
<pre class=""lang-kotlin prettyprint-override""><code>class GitHubServiceTests {
    @Mock val api = mock(classOf&lt;GitHubAPI&gt;())

    val service = GitHubService(api)

    @Test
    fun test() {
        // Given
        val id = &quot;mockative/mockative&quot;
        val mockative = Repository(id = id, name = &quot;Mockative&quot;)
        given(api).invocation { fetchRepository(id) }
            .thenReturn(mockative)

        // When
        val repository = service.getRepository(id)

        // Then
        assertEquals(mockative, repository)

        // You can also verify function calls on mocks
        verify(api).invocation { fetchRepository(id) }
            .wasInvoked(exactly = once)
    }
}
</code></pre>
",,2021-12-14 07:14:56
70375758,2,62189457,,3,,2049647.0,,"<p>I really like @leetwinski's and @Michael's answers.</p>
<p>There's so many possibilities with Kotlin, it's amazing :)</p>
<p>Another possible solution based on the above:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun String.indexesOf(substr: String, ignoreCase: Boolean = true) : List&lt;Int&gt; =
    (if (ignoreCase) Regex(substr, RegexOption.IGNORE_CASE) else Regex(substr))
        .findAll(this).map { it.range.first }.toList()

@JvmName(&quot;indexesOfNullable&quot;)
fun String?.indexesOf(substr: String, ignoreCase: Boolean = true) = this?.indexesOf(substr, ignoreCase) ?: emptyList()
</code></pre>
",,2021-12-16 08:13:07
70410840,2,70410775,,0,,7575924.0,,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",,2021-12-19 11:02:26
70462685,2,70459969,,0,,8432410.0,,"<p>I have fixed this issue by making changes to the manifest file.</p>
<p>Make sure to add <code>android:required=&quot;false&quot;</code> for every &quot;uses-feature&quot; line you add in the manifest - if the app can work without that feature as well.</p>
<p>This has fixed my issue.</p>
",,2021-12-23 13:20:17
70470884,2,70468297,,2,,17455524.0,,"<p>You can change the code <code>[MetaData(&quot;android.accessibilityservice.AccessibilityService&quot;, Resource = &quot;@xml/accessibility_service_config&quot;)]</code> to the <code>[MetaData(&quot;android.accessibilityservice&quot;, Resource = &quot;@xml/accessibility_service_config&quot;)]</code>. The first parameter is the name of the metadata, and it should obey the rules in android.</p>
",,2021-12-24 08:19:41
70519789,2,70515568,,1,,1731626.0,,"<p>To use <strong>Kotlin</strong> functions, including <strong>Scope functions</strong>, add dependency:</p>
<pre><code>implementation &quot;org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version&quot;
</code></pre>
<p>This is <strong><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/"" rel=""nofollow noreferrer"">Kotlin Standard Library</a></strong>, which provides living essentials for everyday work with <strong>Kotlin</strong>. These include:</p>
<ul>
<li>Higher-order functions implementing idiomatic patterns (let, apply, use, synchronized, etc).</li>
<li>Extension functions providing querying operations for collections (eager) and sequences (lazy).</li>
<li>Various utilities for working with strings and char sequences.</li>
<li>Extensions for JDK classes making it convenient to work with files, IO, and threading.</li>
</ul>
",,2021-12-29 13:01:55
70535875,2,70534344,,0,,13976193.0,,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",,2021-12-30 19:24:21
70556830,2,70555980,,0,,16915219.0,,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",,2022-01-02 14:34:35
70559054,2,70546468,,1,,9657861.0,,"<p>This is happening because <code>tf.ragged.stack</code> is creating a ragged_rank which equals to 2. Check the <a href=""https://www.tensorflow.org/guide/ragged_tensor#ragged_rank_and_flat_values"" rel=""nofollow noreferrer"">docs</a> for more information. You could explicitly define how to partition a ragged tensor like this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf
import numpy as np

x1 = np.asarray([1,0,0])
x2 = np.asarray([0,1,0])
x3 = np.asarray([0,0,1])

ac = tf.RaggedTensor.from_row_splits(
    values=[x1, x2, x3],
    row_splits=[0, 2, 3])

print(ac.shape)
print(ac)
</code></pre>
<pre><code>(2, None, 3)
&lt;tf.RaggedTensor [[[1, 0, 0], [0, 1, 0]], [[0, 0, 1]]]&gt;
</code></pre>
",,2022-01-02 19:23:12
70597883,2,70590483,,1,,4514785.0,,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",,2022-01-05 18:29:46
70612654,2,70607875,,3,,417513.0,,"<p>Notifications on Android TV OS are significantly different than mobile Android. There is an area to display notifications within the launcher, but it is limited to system-level notifications that are important for the user (e.g., issues with your account or info about OS updates). General app notifications do not show up, which means you need to display any kind of notification within your own app UI and not with the regular NotificationManager and related APIs.</p>
<blockquote>
<p>Can we use Notification Manager. / Can we set the Notification priority</p>
</blockquote>
<p>Yes, but it won't result in a notification being visible to the user and shouldn't be done on Android TV OS.</p>
<blockquote>
<p>Proper method to implementation Android TV notification.</p>
</blockquote>
<p>This should be handled within app UI. Most apps have a reserved space to show these on the main screen so that users see them as soon as they open the app.</p>
<blockquote>
<p>Possible way to find out whether the user has seen/interacted with notification or not</p>
</blockquote>
<p>Since you'll have to display it in your own UI, you can use regular View methods. For example, if you want to know if the user clicked the message, you can add that code to the OnClickListener.</p>
<blockquote>
<p>Handling list of notification messages by Local Database or any other method.</p>
</blockquote>
<p>This is a bit vague to give a specific answer, so you may want to post a separate question with more details about what you're trying to accomplish. One general way to go about it is that you have a server endpoint that understands the state of notifications for a given user and you sync that with your local database (easiest is probably Sqlite using Room). Your UI needs to be told if there's a relevant notification to display within the app, but the details of that depend on your app architecture.</p>
",,2022-01-06 19:31:07
70684447,2,70595718,,0,,4569103.0,,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",,2022-01-12 15:45:54
70701258,2,70701009,,-1,,17905764.0,,"<p>Before you can train your model, you must build it and compile it.</p>
<p>Building the model creates all variables of the model depending on the <code>input_shape</code> of your training data.</p>
<p>Compiling the model sets the optimizer and loss function you would like to use during training.</p>
<p>When you call the model, it is automatically built with the shape of the data you inserted. Because of that, you can train the model, after you have called it.</p>
",,2022-01-13 18:18:21
71007445,2,71003062,,1,,9657861.0,,"<p>I would recommend using the <code>tf.data.Dataset</code> API. Check out this <a href=""https://www.tensorflow.org/tutorials/load_data/pandas_dataframe"" rel=""nofollow noreferrer"">tutorial</a>. Here is a working example based on your data structure:</p>
<pre><code>import pandas as pd
import tensorflow as tf

df = pd.DataFrame(data= {'text': ['some text', 'some more text'], 'class': [0, 1]})
labels = df.pop('class')
dataset = tf.data.Dataset.from_tensor_slices((df, labels))

for x, y in dataset:
  print(x, y)
</code></pre>
<pre><code>tf.Tensor([b'some text'], shape=(1,), dtype=string) tf.Tensor(0, shape=(), dtype=int64)
tf.Tensor([b'some more text'], shape=(1,), dtype=string) tf.Tensor(1, shape=(), dtype=int64)
</code></pre>
",,2022-02-06 13:08:03
71129608,2,67801377,,0,,1860314.0,,"<h3>As of 02.2022</h3>
<p>The Validation process is supposed to run at the same time with the Training process so that whenever a new Checkpoint is saved, the Validation process immediately loads the Checkpoint and starts validating.</p>
<p>Please see my other <a href=""https://stackoverflow.com/a/71129513/1860314"">answer</a> in this regard.</p>
",,2022-02-15 16:02:22
71186849,2,71186826,,0,,15224052.0,,"<p>Disclaimer: I have never used Android Studio or the Android SDK.</p>
<p>I searched &quot;android checkbox listener&quot; on Google and this is the first result: <a href=""https://developer.android.com/guide/topics/ui/controls/checkbox"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/controls/checkbox</a>.</p>
<blockquote>
<p>To define the click event handler for a checkbox, add the android:onClick attribute to the  element in your XML layout. The value for this attribute must be the name of the method you want to call in response to a click event. The Activity hosting the layout must then implement the corresponding method.</p>
</blockquote>
",,2022-02-19 16:24:45
71231654,2,71231079,,0,,9580471.0,,"<p>Do not touch the FragmentManager yourself when using the Navigation library.
<br>Let <a href=""https://developer.android.com/guide/navigation/navigation-getting-started"" rel=""nofollow noreferrer"">Navigation</a> manage Navigation between fragments, that's what it's used for.</p>
<p>The message:</p>
<blockquote>
<p>I/FragmentNavigator: Ignoring navigate() call: FragmentManager has
already saved its state</p>
</blockquote>
<p>is defined in the <code>androidx.navigation.fragment.FragmentNavigator#navigate</code>
The Fragment state is saved by the Activity. It usually appears when the Activity goes into the onStop state. Means should not be operated the fragmentManger after leaving the current Activity. (but still can use <code>androidx.fragment.app.FragmentTransaction#commitAllowingStateLoss</code> to ignore the warning , but this state will not be restored when the Activity is recreated.)</p>
<p>In your scenes, I recommend jumping to the next activity for editing, returning and refreshing the list</p>
",,2022-02-23 05:11:25
71240068,2,69912322,,1,,18290744.0,,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",,2022-02-23 15:47:50
71309125,2,59234916,,1,,8033785.0,,"<blockquote>
<p>Binary     -&gt; 1 Kilobyte = 1024 Byte</p>
<p>Non-Binary -&gt; 1 Kilobyte = 1000 Byte</p>
</blockquote>
<p>Native kotlin method below, if your API level is less than or equal to 24(Nougat), it uses binary format. If greater, it uses non-binary format.</p>
<pre><code>Formatter.formatFileSize(context, yourValueAsByte)
</code></pre>
<p>So i suggest to add your custom method. Here is the mine:</p>
<pre><code>fun Long.formatBinarySize(): String {
    val kiloByteAsByte = 1.0 * 1024.0
    val megaByteAsByte = 1.0 * 1024.0 * 1024.0
    val gigaByteAsByte = 1.0 * 1024.0 * 1024.0 * 1024.0
    val teraByteAsByte = 1.0 * 1024.0 * 1024.0 * 1024.0 * 1024.0
    val petaByteAsByte = 1.0 * 1024.0 * 1024.0 * 1024.0 * 1024.0 * 1024.0

    return when {
        this &lt; kiloByteAsByte -&gt; &quot;${this.toDouble()} B&quot;
        this &gt;= kiloByteAsByte &amp;&amp; this &lt; megaByteAsByte -&gt; &quot;${String.format(&quot;%.2f&quot;, (this / kiloByteAsByte))} KB&quot;
        this &gt;= megaByteAsByte &amp;&amp; this &lt; gigaByteAsByte -&gt; &quot;${String.format(&quot;%.2f&quot;, (this / megaByteAsByte))} MB&quot;
        this &gt;= gigaByteAsByte &amp;&amp; this &lt; teraByteAsByte -&gt; &quot;${String.format(&quot;%.2f&quot;, (this / gigaByteAsByte))} GB&quot;
        this &gt;= teraByteAsByte &amp;&amp; this &lt; petaByteAsByte -&gt; &quot;${String.format(&quot;%.2f&quot;, (this / teraByteAsByte))} TB&quot;
        else -&gt; &quot;Bigger than 1024 TB&quot;
}}
</code></pre>
",,2022-03-01 13:21:21
71334419,2,71333686,,1,,2258611.0,,"<p>Right now you only check the state of your checkbox when the <code>order</code> runs.
If you want to isntantly react to the checkbox being checked / unchecked, you need to specify a listener.</p>
<p>Checkboxes allow you to specify a method in the XML, which is called whenever its state changes with &quot;<code>android:onClick=</code>&quot;.</p>
<p>You can change your code like this:</p>
<p>In your xml layout, add this to your <code>CheckBox</code> element:</p>
<pre><code>android:onClick=&quot;onCheckboxClicked&quot;
</code></pre>
<p>In your activity, add this new method:</p>
<pre><code>public void onCheckboxClicked(View view) {
    boolean checked = ((CheckBox) view).isChecked();
    if(checked) {
        // TODO: Show that whipped cream is selected
    }
    else {
        // TODO: Show that whipped cream is not selected
    }
}
</code></pre>
<p>Reference: <a href=""https://developer.android.com/guide/topics/ui/controls/checkbox#java"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/controls/checkbox#java</a></p>
<h2>Opinion on Android app code structure</h2>
<p>You should have separate methods which react to UI events like clicking buttons and toggeling checkboxes. Ideally, those methods should update a UI state object.</p>
<p>Google's opinionated recommendation is that the state of your UI should be determined by UI state data classes. In your example a UI state class would hold the data for the price, the quantity and the selected extras (whipped cream).</p>
<p>Events like button presses will then update the UI state object. Whenever your UI state changes, you update the UI.</p>
<p>Check out this guide here: <a href=""https://developer.android.com/jetpack/guide/ui-layer#define-ui-state"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/guide/ui-layer#define-ui-state</a></p>
",,2022-03-03 08:57:02
71353718,2,71353146,,1,,506796.0,,"<p>The checked state of a CheckBox and text in an EditText will be automatically preserved if you make sure they have the same <code>id</code> in both layouts. However, it only automatically preserves the things that can be changed through the UI, so if you programmatically changed the text of a CheckBox, that is not automatically preserved. Typically, that sort of thing is handled with a ViewModel and LiveData/Flow.</p>
<p>This behavior is controlled by the <a href=""https://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"" rel=""nofollow noreferrer""><code>saveEnabled</code></a> property of a view, which is true by default.</p>
",,2022-03-04 15:36:48
67975284,2,64595311,,4,,14766731.0,,"<p>This worked for me:<br>
Create a style resource file with v27 configuration for the activities you want in fullscreen and without cutout:</p>
<pre><code>&lt;style name=&quot;Theme.MyApp.ActivityFullscreenNoCutout&quot;&gt;
    &lt;item name=&quot;android:windowLayoutInDisplayCutoutMode&quot;&gt;shortEdges&lt;/item&gt;
&lt;/style&gt;
</code></pre>
<p>And assign the style to your activity in the manifest:</p>
<pre><code>&lt;activity android:name=&quot;.MyActivity&quot;
        android:theme=&quot;@style/Theme.MyApp.ActivityFullscreenNoCutout&quot;/&gt;
</code></pre>
<p>Link: <a href=""https://developer.android.com/guide/topics/display-cutout"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/display-cutout</a></p>
<p>If you have an action/app bar, you'll have to add the toolbar to your activity and not use the default one.</p>
<p>Link: <a href=""https://developer.android.com/training/appbar/setting-up"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar/setting-up</a></p>
",,2021-06-14 18:15:49
68006287,2,67983018,,0,,11997127.0,,"<p>We are looking at this indeed. However, since it is a very compute intensive set of tasks, we want to make sure it can run on a wide range of devices, rather than just flagship phones. If you are looking for this functionality today, I would go with the <a href=""https://google.github.io/mediapipe/solutions/holistic.html"" rel=""nofollow noreferrer"">MediaPipe solution</a> like you reference as well.</p>
",,2021-06-16 16:03:06
68045240,2,68044639,,8,,10134209.0,,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",,2021-06-19 09:02:21
68136455,2,68135964,,0,,2398000.0,,"<p>Use a <code>shared view model</code> where <code>ConnectionListener</code> exists in the <code>ViewModel</code> and any fragment or activity that wants to know about the connection status can grab the <code>ViewModel</code>. As for reacting to the connection events.</p>
<pre><code>public class ShardViewModel extends ViewModel{
     private ConnectionListener connectionListener;
     private List&lt;ConnectionListener&gt; listeners = new ArrayList&lt;&gt;();
     
     //call this once in main activity
     public void init(){
        connectionListener = new ConnectionListener {
           @Override
           public void closed(ConnectionEvent connectionEvent) {
               for(ConnectionListener listner : listners)
                    listener.closed(connectionEvent);
           }
           @Override
           public void disconnected(ConnectionEvent connectionEvent) {
               for(ConnectionListener listner : listners)
                    listener.disconnected(connectionEvent);
           }
           @Override
           public void opened(ConnectionEvent connectionEvent) {
               for(ConnectionListener listner : listners)
                    listener.opened(connectionEvent);
           }
        }
        //add the &quot;real&quot; listener whatever you are using to monitor connection.
     }
     //Fragments add their implementation of the ConnectionListener 
     //Meaning they can do whatever they want when they receive a message.
     public void addConnectionListener(ConnectionListener listener){
         if(listners!=null)
            listeners.add(listener);
     }
}
</code></pre>
",,2021-06-25 19:54:56
68191463,2,68191307,,1,,13634832.0,,"<p>If by auto-checked you mean by default selected, then that can be done in two ways</p>
<ol>
<li>In layout xml, set android:<strong>checked</strong>=&quot;true&quot;</li>
<li>Programmatically set <strong>checkBox</strong>.setChecked(true);</li>
</ol>
",,2021-06-30 08:50:17
68254825,2,62060834,,0,,4837579.0,,"<p>First of all, FragmentStatePagerAdapter is deprecated now. So, it's better to use FragmentStateAdapter with ViewPager2.</p>
<p>I couldn't find any proper solution in case if you need to pass something into  Fragment's constructor with ViewPager2 because it ignores FragmentFactory. I was thinking about implementing the FragmentFactory in createFragment method of FragmentStateAdapter but don't know where to get the proper class loader in this case.</p>
<p>The only solution I found is to use FragmentManager.FragmentLifecycleCallbacks. Here you have a fragment so you can cast it to you particular implementation. You can set callbacks or whatever you want to your fragment after its (re)creation. So in this case you don't need to pass something in to fragment's constructor but also can avoid creating Bundles.</p>
<pre><code>fragmentManager?.registerFragmentLifecycleCallbacks(object : FragmentManager.FragmentLifecycleCallbacks() {
        override fun onFragmentPreCreated(fm: FragmentManager, f: Fragment, savedInstanceState: Bundle?) {
            super.onFragmentPreCreated(fm, f, savedInstanceState)
        }
    }, true)
</code></pre>
<p>I tested this code using childFragmentManager and it works fine. But I have to admit that this is not a clear solution. And if you can avoid passing something to Fragment's constructor while using FragmentStateAdapter, avoid it. Because the most proper solution is to use a FragmentFactory.</p>
<p>Also, as an option, your fragment knows about the parent Activity. So, you can do callbacks directly to the parent Activity.</p>
<p>Link to documentation: <a href=""https://developer.android.com/reference/androidx/fragment/app/FragmentManager#registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks,%20boolean)"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/fragment/app/FragmentManager#registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks,%20boolean)</a></p>
",,2021-07-05 10:48:23
68255154,2,68253088,,1,,12813741.0,,"<p>Probably you need to create a fragment container view in activity and proceed with fragment transaction. Please refer to docs - <a href=""https://developer.android.com/guide/fragments/create"" rel=""nofollow noreferrer"">https://developer.android.com/guide/fragments/create</a></p>
<p>Basically you will have something like this:</p>
<pre><code>&lt;!-- res/layout/example_activity.xml --&gt;
&lt;androidx.fragment.app.FragmentContainerView
   xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
   android:id=&quot;@+id/fragment_container_view&quot;
   android:layout_width=&quot;match_parent&quot;
   android:layout_height=&quot;match_parent&quot; /&gt;

fun getBookingView() {
    supportFragmentManager.commit {
        add(BookingFragment.start())
    }
}
</code></pre>
",,2021-07-05 11:12:26
68300002,2,68298342,,1,,16401339.0,,"<p>If the SparseTensors have the same <code>dense_shape</code> you can create a unique SparseTensor instead of a list and pass it to <code>from_tensor_slices</code>.</p>
<p>For example the following code produce separate SparseTensors from a large SparseTensor <code>s</code> splitting them along the first dimension</p>
<pre><code>s = tf.sparse.SparseTensor(
    indices=tf.constant([[0, 0, 0], [1, 0, 0], [1, 0, 1], [2, 1, 1]], dtype=tf.int64), 
    values=tf.range(4, dtype=tf.float32), 
    dense_shape=(3, 2, 2))
d = tf.data.Dataset.from_tensor_slices(s)
for t in d:
    print(t)
&gt;&gt;&gt; SparseTensor(indices=tf.Tensor([[0 0]], shape=(1, 2), dtype=int64), values=tf.Tensor([0.], shape=(1,), dtype=float32), dense_shape=tf.Tensor([2 2], shape=(2,), dtype=int64))
SparseTensor(indices=tf.Tensor(
[[0 0]
 [0 1]], shape=(2, 2), dtype=int64), values=tf.Tensor([1. 2.], shape=(2,), dtype=float32), dense_shape=tf.Tensor([2 2], shape=(2,), dtype=int64))
SparseTensor(indices=tf.Tensor([[1 1]], shape=(1, 2), dtype=int64), values=tf.Tensor([3.], shape=(1,), dtype=float32), dense_shape=tf.Tensor([2 2], shape=(2,), dtype=int64))
</code></pre>
<p>To use <code>from_tensor_slices</code> in this way, you need a function to convert the list <code>sparse_lists</code> to a large SparseTensor <code>s</code> (reported below).</p>
<p>To recap, you can do</p>
<pre><code>import tensorflow as tf

def sparse_list_to_sparse_tensor(sparse_lists):
    n = len(sparse_lists)
    shape = sparse_lists[0].dense_shape
    out_shape = (n, *shape)
    out_values = tf.concat([s.values for s in sparse_lists], axis=0)
    out_indices = []
    for i, s in enumerate(sparse_lists):
        element_idx = tf.cast(tf.fill((s.indices.shape[0], 1), i), dtype=tf.int64)
        out_indices.append(tf.concat([element_idx, s.indices], axis=1))
    out_indices = tf.concat(out_indices, axis=0)
    return tf.sparse.SparseTensor(out_indices, out_values, out_shape)


tf.data.Dataset.from_tensor_slices(sparse_list_to_sparse_tensor(sparse_lists))
</code></pre>
",,2021-07-08 10:35:56
68315917,2,68298342,,0,,16401339.0,,"<p>An alternative solution uses <code>from_tensor_slices</code> on every sparse tensor (after the addition of a dummy batch dimension) to create many datasets with a single element that can be concatenated in a single dataset.</p>
<pre><code>dataset = None
for sparse_tensor in sparse_list:
    batched_sparse_tensor = tf.sparse.expand_dims(sparse_tensor, axis=0)
    element_dataset = tf.data.Dataset.from_tensor_slices(batched_sparse_tensor)
    if dataset is None:
        dataset = element_dataset
    else:
        dataset = dataset.concatenate(element_dataset)
</code></pre>
<p>Notice that using this solution the sparse tensors can have different <code>dense_shape</code>s.</p>
",,2021-07-09 11:20:19
68450785,2,68432386,,2,,12097952.0,,"<p>You may want to look at the variable names that you have. Usually the <code>GraphDisconnected</code> error is caused by having overriding names in the program.</p>
",,2021-07-20 07:03:04
68481202,2,68480784,,2,,5133585.0,,"<p>You can do this with the <a href=""https://kotlinlang.org/docs/command-line.html"" rel=""nofollow noreferrer""><code>kotlinc</code> command</a>. You can simply use the <code>-d</code> option to specify the output jar or directory. For example,</p>
<pre><code>kotlinc sourceFile1.kt sourceFile2.kt -include-runtime -d output.jar
java -jar output.jar
</code></pre>
",,2021-07-22 07:59:47
68519916,2,68519570,,0,,8838032.0,,"<p>You can go through this document for more details.
<a href=""https://developer.android.com/work/managed-profiles"" rel=""nofollow noreferrer"">https://developer.android.com/work/managed-profiles</a></p>
",,2021-07-25 15:13:36
68586238,2,68584799,,0,,1380933.0,,"<p>To convert <code>Char</code> back to <code>Int</code> use <code>code</code> property:</p>
<pre class=""lang-kotlin prettyprint-override""><code>49.toChar() // =&gt; '1' (Char)
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>49.toChar().code // =&gt; 49 (Int)
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>49.toChar().code.toString() // =&gt; &quot;49&quot; (String)
</code></pre>
<p><code>Char</code> type in Kotlin represents a 16-bit Unicode character. Code 49 corresponds to character '1'.</p>
",,2021-07-30 06:15:11
68853324,2,68852721,,0,,9636037.0,,"<p>Add this permission to the Manifest file.</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.DOWNLOAD_WITHOUT_NOTIFICATION&quot; /&gt;
</code></pre>
<p><strong>Note</strong><br />
Most of the manifest permissions will be auto-completed by Android Studio, but this will not be auto-completed. Rest assured, it will work.</p>
",,2021-08-19 19:03:25
68959128,2,68958519,,0,,4327305.0,,"<p>In this case <a href=""https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView"" rel=""nofollow noreferrer"">FragmentContainerView</a> and FragmentManager ,<a href=""https://developer.android.com/guide/fragments/transactions#java"" rel=""nofollow noreferrer"">Fragment transactions</a> help us .</p>
<blockquote>
<p>FragmentContainerView is a customized Layout designed specifically for Fragments. It extends FrameLayout, so it can reliably handle Fragment Transactions, and it also has additional features to coordinate with fragment behavior.</p>
<p>At runtime, a FragmentManager can add, remove, replace, and perform other actions with fragments in response to user interaction.</p>
</blockquote>
<p>So you can take a <code>FragmentContainerView</code> in your activity_main.xml where you can add different fragment by button/user action.</p>
<p>So your activity_main.xml looks like now -</p>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
   &lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;

    &lt;Button
        android:id=&quot;@+id/button&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Test button&quot;&gt;&lt;/Button&gt;

    &lt;androidx.fragment.app.FragmentContainerView
        android:id=&quot;@+id/fragment_container_view&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_below=&quot;@+id/button&quot;&gt;
    &lt;/androidx.fragment.app.FragmentContainerView&gt;


&lt;/RelativeLayout&gt;
</code></pre>
<p>Now Create a new Blank Fragment to your project to test . IDE automatically override some methods and layout for your fragment also for this .</p>
<p><a href=""https://i.sstatic.net/6leFu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/6leFu.png"" alt=""enter image description here"" /></a></p>
<p>So your <code>BlankFragment.class</code> looks like -</p>
<pre><code>package com.example.myapplication;

import android.os.Bundle;

import androidx.fragment.app.Fragment;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link BlankFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class BlankFragment extends Fragment {

    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = &quot;param1&quot;;
    private static final String ARG_PARAM2 = &quot;param2&quot;;

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    public BlankFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment BlankFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static BlankFragment newInstance(String param1, String param2) {
        BlankFragment fragment = new BlankFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_blank, container, false);
    }
}
</code></pre>
<p>Now From your Activity you can show the Blank Fragment in <code>FragmentContainerView</code> , we define its id <code>fragment_container_view</code> in activity_main.xml .</p>
<p>Here Your <code>MainActivity.class</code> -</p>
<pre><code>public class MainActivity extends AppCompatActivity {

private ActivityMainBinding binding;
private Button button;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    setContentView(R.layout.activity_main);
    button = findViewById(R.id.button);
    button.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {

            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
            transaction.setReorderingAllowed(true);
            transaction.replace(R.id.fragment_container_view, BlankFragment.class, null);
            transaction.commit();

        }
    });


}

  }
</code></pre>
<p>All of these just for example . You should check documentation to know more .</p>
",,2021-08-27 20:38:28
68992156,2,68992116,,16,,6561930.0,,"<p>Add this  to your manifest</p>
<pre><code>&lt;manifest package=&quot;com.example.game&quot;&gt;

    &lt;queries&gt;
             &lt;package android:name=&quot;com.google.android.apps.maps&quot; /&gt;
    &lt;/queries&gt;
    ...

&lt;/manifest&gt;
</code></pre>
<p>If your app targets Android 11 or higher and needs to interact with apps other than the ones that are visible automatically, add the  element in your app's manifest file. Within the  element, specify the other apps by package name, by intent signature, or by provider authority</p>
<p>More details here  <a href=""https://developer.android.com/training/package-visibility/declaring#package-name"" rel=""noreferrer"">Declaring package visibility needs </a></p>
",,2021-08-31 02:25:14
69000523,2,68998096,,0,,7370153.0,,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",,2021-08-31 14:27:50
69080938,2,69077031,,2,,10134209.0,,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",,2021-09-06 23:00:27
69141252,2,69141200,,3,,4072335.0,,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",,2021-09-11 08:21:18
69143994,2,69124156,,0,,7122582.0,,"<p>You are writing the gamemode as a normal <strong>Byte</strong>, however the Minecraf client expects it to be an <strong>Unsigned Byte</strong>.</p>
<p>The difference between the two is that <strong>Unsigned Byte</strong> doesn't have a sign (+/-). Therefore, it takes less memory and is practically a completely different data type.</p>
<p>In Kotlin <strong>Unsigned Byte</strong> is represented by <code>UByte</code> class. You can write it to <code>Output</code> using <code>.writeUByte()</code> extension function.</p>
",,2021-09-11 14:41:41
69189898,2,69187608,,1,,13648824.0,,"<p>The tf.train.Saver() constructor takes an optional argument called max_to_keep, which defaults to keeping the 5 most recent checkpoints of your model. To save more models, simply specify a value for that argument:</p>
<p>To keep all checkpoints, pass the argument <strong>max_to_keep=None</strong> to the saver constructor.</p>
<p><strong>max_to_keep</strong> - indicates the maximum number of recent checkpoint files to keep. As new files are created, older files are deleted. If None or 0, no checkpoints are deleted from the filesystem but only the last one is kept in the checkpoint file. Defaults to 5 (that is, the 5 most recent checkpoint files are kept.)</p>
<p><strong>keep_checkpoint_every_n_hours</strong> - In addition to keeping the most recent max_to_keep checkpoint files, you might want to keep one checkpoint file for every N hours of training. This can be useful if you want to later analyze how a model progressed during a long training session. For example, passing keep_checkpoint_every_n_hours=2 ensures that you keep one checkpoint file for every 2 hours of training. The default value of 10,000 hours effectively disables the feature.</p>
",,2021-09-15 08:49:14
69213079,2,68615121,,0,,4283005.0,,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",,2021-09-16 17:54:12
69296165,2,69291492,,4,,1103872.0,,"<p>Your question is completely analogous to the realization that the OS can suspend a thread at any point in its execution and reschedule it to another CPU core.  That works not because the code in question is &quot;multicore-safe&quot;, but because it is a guarantee of the environment that a single thread behaves according to its program-order semantics.</p>
<p>Kotlin's coroutine execution environment likewise guarantees the safety of your sequential code. You are supposed to program to this guarantee without any worry about how it is maintained.</p>
<p>If you want to descend into the details of &quot;how&quot; out of curiosity, the answer becomes &quot;it depends&quot;. Every coroutine dispatcher can choose its own mechanism to achieve it.</p>
<p>As an instructive example, we can focus on the specific dispatcher you use in your posted code: JDK's <code>fixedThreadPoolExecutor</code>. You can submit arbitrary tasks to this executor, and it will execute each one of them on a single (arbitrary) thread, but many tasks submitted together will execute in parallel on different threads.</p>
<p>Furthermore, the executor service provides the guarantee that the code leading up to <code>executor.execute(task)</code> <em>happens-before</em> the code within the task, and the code within the task <em>happens-before</em> another thread's observing its completion (<code>future.get()</code>, <code>future.isCompleted()</code>, getting an event from the associated <code>CompletionService</code>).</p>
<p>Kotlin's coroutine dispatcher drives the coroutine through its lifecycle of suspension and resumption by relying on these primitives from the executor service, and thus you get the &quot;sequential execution&quot; guarantee for the entire coroutine. A single task submitted to the executor ends whenever the coroutine suspends, and the dispatcher submits a new task when the coroutine is ready to resume (when the user code calls <code>continuation.resume(result)</code>).</p>
",,2021-09-23 08:02:51
69427112,2,69426486,,0,,4954307.0,,"<p>It is because Array&lt;Int&gt; in Kotlin is Integer[] in Java.<br>
Try to use <strong>IntArray</strong> in Java it will be int[].</p>
<p>I tried your example with IntArray and it works.</p>
<pre><code>@BindingAdapter(&quot;availableGradesIndexes&quot;)
fun LinearLayout.bindGradeWithMarks( availableGradesIndexes: IntArray ) {
}
</code></pre>
<p>Can you show your layout XML?</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;layout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
        xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;

    &lt;data&gt;
        &lt;variable
            name=&quot;availableGradesIndexes&quot;
            type=&quot;int[]&quot; /&gt;
    &lt;/data&gt;

    &lt;LinearLayout
        android:layout_width=&quot;0dp&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:orientation=&quot;horizontal&quot;
        app:availableGradesIndexes=&quot;@{availableGradesIndexes}&quot;
        tools:layout_height=&quot;match_parent&quot; /&gt;

&lt;/layout&gt;
</code></pre>
",,2021-10-03 17:06:14
69555577,2,69549113,,2,,16513143.0,,"<p>Thread.sleep() is a blocking method, while delay() is a suspend one. Kotlin coroutines may run on a single thread asynchronously, there is a state machine inside, which switches between suspend calls, but when you call Thread.sleep(), it blocks the entire thread.</p>
",,2021-10-13 12:27:36
69574471,2,69574295,,1,,5437363.0,,"<p>Well first, that is not how to define a list in Kotlin. Since there are no list literals in Kotlin.</p>
<p>Instead, it's like <code>listOf(1, 2, 3, 4,)</code> for a normal list, and <code>mutableListOf(1, 2, 3, 4,)</code> for a mutable (editable) list.</p>
<p>MutableList is basically an ArrayList in Kotlin. But there is still <code>arrayListOf()</code> in Kotlin.</p>
<p>There is also <code>toMutableList()</code> extension to most <code>Collection</code> subclasses in Kotlin</p>
",,2021-10-14 16:46:44
69622543,2,68638911,,2,,9215780.0,,"<p>Not sure if the following answer or workaround is stable for complex network design. But here are some pointers. The reason you got</p>
<pre><code>Ragged Tensors have no len()
</code></pre>
<p>is because of <strong>ResNet</strong> models, as it expects <code>tensor</code> and not <code>ragged_tensor</code>. I'm not sure however if the <strong>ResNet(weights=None)</strong> is able to take <code>ragged_tensor</code> or not directly. So, if we can convert the ragged data right before the <strong>ResNet</strong> gets fed, maybe it won't complain. Below is the full working code according to this. But please note, there is probably some efficient approach maybe possible.</p>
<hr />
<p><strong>Data</strong></p>
<pre><code>import tensorflow as tf

# Synthetic Data Pipeline
def synthetic_gen():
  varShape = tf.random.uniform((), minval=1, maxval=12, dtype=tf.int32)
  image = tf.random.normal((varShape, 256, 256, 1))
  image = tf.RaggedTensor.from_tensor(image, ragged_rank=1)
  yield image

ds = tf.data.Dataset.from_generator(synthetic_gen, 
                                    output_signature=(tf.RaggedTensorSpec(
                                        shape=(None, 256, 256, 1), 
                                        dtype=tf.float32, ragged_rank=1
                                        )
                                    )
                                )
ds = ds.repeat().batch(8)
</code></pre>
<h2>Basic Model</h2>
<pre><code># Build Model
inputs = tf.keras.Input(
    type_spec=tf.RaggedTensorSpec(
        shape=(8, None, 256, 256, 1), 
        dtype=tf.float32, 
        ragged_rank=1))

ResNet50 = tf.keras.applications.ResNet50(
    include_top=True, 
    input_shape=(256, 256, 1),
    weights=None)

def merge(x):
  x = x.merge_dims(0, 1)
  return x
</code></pre>
<h2>Ragged Model</h2>
<p>Here we convert <code>ragged_tensor</code> to <code>tensor</code> before passing the data to <strong>ResNet</strong>.</p>
<pre><code>class RagModel(tf.keras.Model):
    def __init__(self):
        super(RagModel, self).__init__()
        # base models 
        self.a = tf.keras.layers.Lambda(merge)
        # convert: tensor = ragged_tensor.to_tensor()
        self.b = tf.keras.layers.Lambda(lambda x: x.to_tensor())
        self.c = ResNet50
    
    def call(self, inputs, training=None, plot=False, **kwargs):
        x = self.a(inputs)
        x = self.b(x) if not plot else x
        x = self.c(x)
        return x
    
    # a helper function to plot 
    def build_graph(self):
        x = tf.keras.Input(type_spec=tf.RaggedTensorSpec(
            shape=(8, None, 256, 256, 1),
            dtype=tf.float32, ragged_rank=1)
        )
        return tf.keras.Model(inputs=[x],
                              outputs=self.call(x, plot=True))
   
x_model = RagModel()
</code></pre>
<h2>Run</h2>
<pre><code>data = next(iter(ds)); print(data.shape)
x_model(data).shape 
(8, None, 256, 256, 1)
TensorShape([39, 1000])
</code></pre>
<h2>Plot</h2>
<pre><code>tf.keras.utils.plot_model(x_model.build_graph(), 
              show_shapes=True, show_layer_names=True)
</code></pre>
<p><a href=""https://i.sstatic.net/dBit6.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/dBit6.png"" alt=""enter image description here"" /></a></p>
<pre><code>x_model.build_graph().summary()

Model: &quot;model_1&quot;
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_4 (InputLayer)         [(8, None, 256, 256, 1)]  0         
_________________________________________________________________
lambda_2 (Lambda)            (None, 256, 256, 1)       0         
_________________________________________________________________
resnet50 (Functional)        (None, 1000)              25630440  
=================================================================
Total params: 25,630,440
Trainable params: 25,577,320
Non-trainable params: 53,120
_________________________________________________________________
</code></pre>
",,2021-10-18 21:01:23
69759611,2,69759403,,4,,10908375.0,,"<p>During training, Tensorflow tracks all <code>tf.Variable</code> objects defined in the model. If you define your constant as a <code>tf.Variable</code>, it will be ajusted via backpropagation.</p>
<p>Let's say we have a dataset wi <code>X</code>, and <code>y</code> which is <code>y = X * 2</code>:</p>
<pre><code>import tensorflow as tf

x = tf.random.uniform((10_000, 1))
y = x * 2
</code></pre>
<p>We will create a model which has a constant inside, which will need to replicate the relationship between <code>X</code> and <code>y</code>. We will of course initialize this value as something other than 2. The relationship between <code>X</code> and <code>y</code> is 2 so the training should make the constant converge towards 2. So let's define a model that is nothing but a constant.</p>
<pre><code>class CustomModel(tf.keras.models.Model):
    def __init__(self):
        super(CustomModel, self).__init__()
        self.constant = tf.Variable(initial_value=0.1, dtype=tf.float32, trainable=True)

    def call(self, x, **kwargs):
        x = self.constant * x
        return x


model = CustomModel()
</code></pre>
<p>Now just compile and train the model:</p>
<pre><code>model.compile(loss='mae')

history = model.fit(x, y, epochs=25, verbose=0)
</code></pre>
<p>Now look at the weights. The constant, which was initialized with value 0.1, is now 2. It was optimized, as it understood the relationship between <code>X</code> and <code>y</code>, which is 2.</p>
<pre><code>model.weights
</code></pre>
<pre><code>[&lt;tf.Variable 'Variable:0' shape=() dtype=float32, numpy=2.0&gt;]
</code></pre>
",,2021-10-28 19:08:28
69815786,2,69814560,,4,,506796.0,,"<p>I am theorizing from looking at <a href=""https://youtrack.jetbrains.com/issue/KT-10151"" rel=""nofollow noreferrer"">this old issue</a> that the Kotlin developers at one time accidentally treated <code>CharBuffer.charAt()</code> and <code>CharBuffer.get()</code> as equivalent and hid the <code>charAt()</code> method in Kotlin and mapped it to <code>get()</code>. They might have done this in an effort to promote the use of array-access syntax (brackets) and avoid supposed redundancy.</p>
<p>And perhaps later when the above issue was fixed, they missed unhiding the method.</p>
<p><code>buffer.charAt(i)</code> would be <code>buffer[buffer.position() + i]</code> in Kotlin. You could write an extension function so you can continue to use it:</p>
<pre><code>fun CharBuffer.charAt(index: Int) = this[position() + index]
</code></pre>
<p>The error message if you choose an out-of-bounds index will be slightly less informative than the one in the original method.</p>
<p>Maybe someone should open an issue on YouTrack for this...</p>
",,2021-11-02 19:10:41
71377884,2,71300786,,1,,9657861.0,,"<p>IIUC and assuming you want to leave your <code>tfp.layers.DistributionLambda</code> as it is, you have a few options, which can you experiment with:</p>
<p><strong>Option 1</strong>: Use two <code>Dense</code> layers with the <code>Keras</code> functional API:</p>
<pre><code># Your code
#[.....]

tfd = tfp.distributions
sample_layer = tfp.layers.DistributionLambda(lambda t: tfd.Normal(loc=t[..., :1],
                           scale=1e-3 + tf.math.softplus(0.05 * t[...,1:])))
def get_df_model():
  inputs = tf.keras.layers.Input(shape=[len(df.columns),])
  x = tf.keras.layers.Dense(10, activation='relu')(inputs)
  x = tf.keras.layers.Dense(10, activation='relu')(x)
  outputs1 = tf.keras.layers.Dense(len(target.columns))(x)
  outputs2 = tf.keras.layers.Dense(len(target.columns))(x) # there are 2 outputs, so we want a mean + standard deviation for EACH of the outputs
    
  outputs1 = sample_layer(outputs1)
  outputs2 = sample_layer(outputs2)
  model = tf.keras.Model(inputs, [outputs1, outputs2])

  negloglik = lambda y, rv_y: -rv_y.log_prob(y)

  model.compile(optimizer=tf.optimizers.Adam(learning_rate=0.01), loss=negloglik)
  return model


model = get_df_model()
model.summary()
model.fit(df, target, epochs=10)
</code></pre>
<pre><code>Model: &quot;model&quot;
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 1)]          0           []                               
                                                                                                  
 dense_24 (Dense)               (None, 10)           20          ['input_1[0][0]']                
                                                                                                  
 dense_25 (Dense)               (None, 10)           110         ['dense_24[0][0]']               
                                                                                                  
 dense_26 (Dense)               (None, 2)            22          ['dense_25[0][0]']               
                                                                                                  
 dense_27 (Dense)               (None, 2)            22          ['dense_25[0][0]']               
                                                                                                  
 distribution_lambda_10 (Distri  ((None, 1),         0           ['dense_26[0][0]',               
 butionLambda)                   (None, 1))                       'dense_27[0][0]']               
                                                                                                  
==================================================================================================
Total params: 174
Trainable params: 174
Non-trainable params: 0
__________________________________________________________________________________________________
Epoch 1/10
157/157 [==============================] - 1s 2ms/step - loss: 522.2677 - distribution_lambda_10_loss: 247.8716 - distribution_lambda_10_1_loss: 274.3961
Epoch 2/10
157/157 [==============================] - 1s 3ms/step - loss: 20.3496 - distribution_lambda_10_loss: 9.5429 - distribution_lambda_10_1_loss: 10.8067
Epoch 3/10
157/157 [==============================] - 1s 6ms/step - loss: 13.7444 - distribution_lambda_10_loss: 6.6085 - distribution_lambda_10_1_loss: 7.1359
Epoch 4/10
157/157 [==============================] - 1s 7ms/step - loss: 11.3713 - distribution_lambda_10_loss: 5.5506 - distribution_lambda_10_1_loss: 5.8206
Epoch 5/10
157/157 [==============================] - 1s 4ms/step - loss: 10.2081 - distribution_lambda_10_loss: 5.0250 - distribution_lambda_10_1_loss: 5.1830
Epoch 6/10
157/157 [==============================] - 0s 3ms/step - loss: 9.5528 - distribution_lambda_10_loss: 4.7256 - distribution_lambda_10_1_loss: 4.8272
Epoch 7/10
157/157 [==============================] - 0s 2ms/step - loss: 9.1495 - distribution_lambda_10_loss: 4.5393 - distribution_lambda_10_1_loss: 4.6102
Epoch 8/10
157/157 [==============================] - 1s 6ms/step - loss: 8.8837 - distribution_lambda_10_loss: 4.4159 - distribution_lambda_10_1_loss: 4.4678
Epoch 9/10
157/157 [==============================] - 0s 3ms/step - loss: 8.7027 - distribution_lambda_10_loss: 4.3319 - distribution_lambda_10_1_loss: 4.3708
Epoch 10/10
157/157 [==============================] - 0s 3ms/step - loss: 8.5743 - distribution_lambda_10_loss: 4.2724 - distribution_lambda_10_1_loss: 4.3019
&lt;keras.callbacks.History at 0x7f51001c2f50&gt;
</code></pre>
<p>Note what the <a href=""https://www.tensorflow.org/probability/api_docs/python/tfp/layers/DistributionLambda?hl=de"" rel=""nofollow noreferrer"">docs</a> state regarding the distributions when using <code>DistributionLambda</code>:</p>
<blockquote>
<p>By default, a distribution is represented as a tensor via a random draw, e.g., tfp.distributions.Distribution.sample</p>
</blockquote>
<p><strong>Option 2</strong>: Use one <code>Dense</code> layer and split the output into two:</p>
<pre><code>def get_df_model():
  sample_layer = tfp.layers.DistributionLambda(lambda t: tfd.Normal(loc=t[..., :1],
                           scale=1e-3 + tf.math.softplus(0.05 * t[...,1:])))
  
  inputs = tf.keras.layers.Input(shape=[len(df.columns),])
  x = tf.keras.layers.Dense(10, activation='relu')(inputs)
  x = tf.keras.layers.Dense(10, activation='relu')(x)
  x = tf.keras.layers.Dense(2 * len(target.columns))(x)
  x1, x2 = tf.split(x, num_or_size_splits=2, axis=-1)
  outputs1 = sample_layer(x1)
  outputs2 = sample_layer(x2)
  model = tf.keras.Model(inputs, [outputs1, outputs2])

  negloglik = lambda y, rv_y: -rv_y.log_prob(y)

  model.compile(optimizer=tf.optimizers.Adam(learning_rate=0.01), loss=negloglik)
  return model
</code></pre>
<p><strong>Option 3</strong>: Use slice :2</p>
<pre><code># Your code
#[.....]

tfd = tfp.distributions
sample_layer = tfp.layers.DistributionLambda(lambda t: tfd.Normal(loc=t[..., :2],
                           scale=1e-3 + tf.math.softplus(0.05 * t[...,2:])))
def get_df_model():
  inputs = tf.keras.layers.Input(shape=[len(df.columns),])
  x = tf.keras.layers.Dense(10, activation='relu')(inputs)
  x = tf.keras.layers.Dense(10, activation='relu')(x)
  outputs = tf.keras.layers.Dense(2*len(target.columns))(x)
  outputs = sample_layer(outputs)
  model = tf.keras.Model(inputs, [outputs])

  negloglik = lambda y, rv_y: -rv_y.log_prob(y)

  model.compile(optimizer=tf.optimizers.Adam(learning_rate=0.01), loss=negloglik)
  return model


model = get_df_model()
model.summary()
model.fit(df, target, epochs=10)
</code></pre>
<p><strong>Additionally</strong>: If you want to <em>explicitly</em> use independent distributions based on the parameters <code>x1</code> and <code>x2</code>, try:</p>
<pre><code>def get_df_model():
  inputs = tf.keras.layers.Input(shape=[len(df.columns),])
  x = tf.keras.layers.Dense(10, activation='relu')(inputs)
  x = tf.keras.layers.Dense(10, activation='relu')(x)
  x = tf.keras.layers.Dense(2 * len(target.columns))(x)
  x1, x2 = tf.split(x, num_or_size_splits=2, axis=-1)
  
  outputs1 = tfp.layers.DistributionLambda(lambda t: tfd.Normal(loc=t[..., :1],
                           scale=1e-3 + tf.math.softplus(0.05 * t[...,1:])))(x1)
  outputs2 = tfp.layers.DistributionLambda(lambda t: tfd.Normal(loc=t[..., :1],
                           scale=1e-3 + tf.math.softplus(0.05 * t[...,1:])))(x2)
  model = tf.keras.Model(inputs, [outputs1, outputs2])

  negloglik = lambda y, rv_y: -rv_y.log_prob(y)

  model.compile(optimizer=tf.optimizers.Adam(learning_rate=0.01), loss=negloglik)
  return model
</code></pre>
",,2022-03-07 07:53:01
71395862,2,70876373,,0,,1506153.0,,"<p>The solution for me was to make the AppBarLayout a custom view class. I then removed all the variables from the xml and made custom attributes in the attr.xml file. Now I had full control from the &quot;host&quot; xml. I now do not &quot;include&quot; a layout file but just use the custom view in the &quot;host&quot; xml like an i.e. TextView. For additional features I added binding adapters.</p>
",,2022-03-08 13:29:26
71519403,2,71517152,,2,,4292033.0,,"<p>These might help: <a href=""https://www.tensorflow.org/guide/checkpoint"" rel=""nofollow noreferrer"">Training checkpoints</a> and <a href=""https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint"" rel=""nofollow noreferrer"">tf.train.Checkpoint</a>. According to the documentation, you should be able to load the model using something like this:</p>
<pre><code>model = tf.keras.Model(...)
checkpoint = tf.train.Checkpoint(model)
# Restore the checkpointed values to the `model` object.
checkpoint.restore(save_path)
</code></pre>
<p>I am not sure it will work if the checkpoint contains other variables. You might have to use <code>checkpoint.restore(path).expect_partial()</code>.</p>
<p>You can also check the content that has been saved (according to the documentation) by <em>Manually inspecting checkpoints</em> :</p>
<pre><code>reader = tf.train.load_checkpoint('./tf_ckpts/')
shape_from_key = reader.get_variable_to_shape_map()
dtype_from_key = reader.get_variable_to_dtype_map()

sorted(shape_from_key.keys())
</code></pre>
",,2022-03-17 21:47:52
71583809,2,71581783,,0,,13211263.0,,"<p>In the <code>StickerView</code> file:</p>
<ol>
<li>Remove the <code>StickerView(Context context)</code> constructor</li>
<li>Put the initialization code also in the <code>StickerView(Context context, AttributeSet attributeSet)</code> constructor (creating a dedicated method is a good approach) and</li>
<li>Change <code>this(context, attributeSet, 0)</code> to <code>super(context, attributeSet)</code></li>
</ol>
<pre><code>public StickerView(Context context, AttributeSet attributeSet) {
    super(context, attributeSet);
    setup();
}

public StickerView(Context context, AttributeSet attributeSet, int i) {
    super(context, attributeSet, i);
    setup();
}

private void setup() {
    this.mOldDistance = 0.0f;
    this.mOldRotation = 0.0f;
    this.mCurrentMode = ActionMode.NONE;
    this.mTouchSlop = 3;
    Paint paint = new Paint();
    this.mBorderPaint = paint;
    paint.setAntiAlias(true);
    this.mBorderPaint.setColor(-16777216);
    this.mBorderPaint.setAlpha(128);
    this.mSizeMatrix = new Matrix();
    this.mDownMatrix = new Matrix();
    this.mMoveMatrix = new Matrix();
    this.mStickerRect = new RectF();
     **//Below line #129 the compiler select BitmapStickerIcon**
    this.mDeleteIcon = new BitmapStickerIcon(ContextCompat.getDrawable(getContext(), R.drawable.ic_close_white_18dp));
    this.mZoomIcon = new BitmapStickerIcon(ContextCompat.getDrawable(getContext(), R.drawable.ic_scale_white_18dp));
}
</code></pre>
",,2022-03-23 08:15:55
71771479,2,71771137,,2,,9215780.0,,"<p>Based on the <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/Input"" rel=""nofollow noreferrer"">tf-documentation</a>, you can still pass the <code>sparse</code> tensor even if the <code>sparse</code> argument is set as <code>False</code>, as long as the input data is a sparse matrix.</p>
<blockquote>
<p>sparse : A boolean specifying whether the placeholder to be created is sparse. Only one of 'ragged' and 'sparse' can be True. <strong>Note that, if sparse is False, sparse tensors can still be passed into the input - they will be densified with a default value of 0.</strong></p>
</blockquote>
<pre><code>input = tf.keras.Input(batch_shape=(2,None,5), sparse=False)
x = tf.keras.layers.Dropout(0.1)(input)
x = tf.keras.layers.Dense(1)(x)
model = tf.keras.models.Model(inputs=[input], outputs=[x])
print(model.summary())
# OK 
</code></pre>
<h2>Update</h2>
<p>Based on the comment below.</p>
<pre><code>class toDense(keras.layers.Layer):
    def call(self, input):
        if isinstance(input, tf.sparse.SparseTensor):
            return tf.sparse.to_dense(input)
        return input
</code></pre>
<p>Place it right after <code>Input</code> and before the <code>Dropout</code> layer of the above model. Like,</p>
<pre><code>input = tf.keras.Input(batch_shape=(2,None,5))
x = toDense()(input)
x = tf.keras.layers.Dropout(0.1)(x)
...
</code></pre>
<p>Next, you can do</p>
<pre><code>dummy_input = np.random.random((2,10,5))
dummy_sp = tf.sparse.from_dense(dummy_input)
dummy_output= np.random.random((2,10,1))

model(dummy_sp).shape 
&gt;&gt; TensorShape([2, 10, 1])

model.compile(loss='mse')
model.fit(x=dummy_sp, y=dummy_output, epochs=1)
1/1 [=====] - 0s 416ms/step - loss: 0.2746
</code></pre>
",,2022-04-06 17:48:25
71819449,2,71818932,,1,,11407290.0,,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",,2022-04-10 18:29:00
71869528,2,71745066,,-1,,5258200.0,,"<p>Looking through the <a href=""https://github.com/tensorflow/tfx/blob/r1.7.0/tfx/components/trainer/fn_args_utils.py"" rel=""nofollow noreferrer"">documentations</a>, <code>DataAccessor</code> seems to be a utility wrapper around a <code>tf.data.Dataset</code> factory. The object that is returned is an instance of <code>tf.data.Dataset</code> - so any subsequent methods that apply to a normal <code>Dataset</code> object are valid here too.</p>
<p>I cant comment on the distributed training support and it is not documented anywhere as you rightly pointed out</p>
",,2022-04-14 09:40:57
71893993,2,70801207,,1,,12727990.0,,"<p>You need same aapt2 version,but another architecture,because Android studio use amd64 from aapt,aapt2 version</p>
",,2022-04-16 12:47:10
71947197,2,71945586,,0,,4067774.0,,"<p>I would not suggest you put any toolbar in your fragment as Fragments are not usually meant for holding toolbars. Your fragment is basically a mini activity on it's own with no knowledge of the UI components of it's activity. It would make more sense to adapt the Activity's toolbar according to the fragment loaded. You could look into <a href=""https://developer.android.com/guide/navigation/navigation-getting-started"" rel=""nofollow noreferrer"">Android Navigation Component</a> for this.</p>
<p>However, I'm not sure of your use case since you want the collapsing toolbar effect. If you still want to hide the activity toolbar on collapse of your fragments CoordinatorLayout you could look into the the solution provided <a href=""https://stackoverflow.com/questions/31682310/android-collapsingtoolbarlayout-collapse-listener/33891727#33891727"">here</a> and using that access your activities toolbar programmatically and change it's visibility. Or rather use the offset to smoothly decrease/increase the activity's toolbar opacity property.</p>
",,2022-04-20 23:25:35
71951328,2,71947836,,1,,9657861.0,,"<p>Simplest way would be to use <code>tf.data.Dataset.zip</code>:</p>
<pre><code>import tensorflow as tf
import numpy as np

X = np.arange(100)
Y = X*2

sample_length = 20
input_dataset = tf.keras.preprocessing.timeseries_dataset_from_array(
  X, None, sequence_length=sample_length, sequence_stride=sample_length)
target_dataset = tf.keras.preprocessing.timeseries_dataset_from_array(
  Y, None, sequence_length=sample_length, sequence_stride=sample_length)

dataset = tf.data.Dataset.zip((input_dataset, target_dataset))

for x, y in dataset:
  print(x.shape, y.shape)
</code></pre>
<pre><code>(5, 20) (5, 20)
</code></pre>
<p>You can then feed <code>dataset</code> directly to your model.</p>
",,2022-04-21 08:36:53
71982200,2,67468914,,1,,5343031.0,,"<p>You have to use the AccessibilityService in Android 10 and above.</p>
<p>MainActivity code:</p>
<pre><code>@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

       
        if (Build.VERSION.SDK_INT &gt;= 29) {
            if (!isAccessibilityServiceEnabled()) {
                startActivity(new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS));
            }
        }

    }
    private boolean isAccessibilityServiceEnabled() {
        int accessibilityEnabled = 0;
        final String service = getPackageName() + &quot;/&quot; + RecordingAccessibilityService.class.getCanonicalName();

        try {
            accessibilityEnabled = Settings.Secure.getInt(getApplicationContext().getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED);
        } catch (Settings.SettingNotFoundException e) {

        }
        TextUtils.SimpleStringSplitter mStringColonSplitter = new TextUtils.SimpleStringSplitter(':');

        if (accessibilityEnabled == 1) {
            String settingValue = Settings.Secure.getString(getApplicationContext().getContentResolver(), Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES);

            if (settingValue != null) {
                mStringColonSplitter.setString(settingValue);
                while (mStringColonSplitter.hasNext()) {
                    String accessibilityService = mStringColonSplitter.next();

                    if (accessibilityService.equalsIgnoreCase(service)) {
                        return true;
                    }
                }
            }
        }

        return false;

    }

</code></pre>
<p>AccessibilityService code:</p>
<pre><code>public class RecordingAccessibilityService extends AccessibilityService {


    @Override
    protected void onServiceConnected() {
        instance = this;
        super.onServiceConnected();

      TelephonyManager mgr = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);
        PhoneStateListener phoneStateListener = new PhoneStateListener() {
            @Override
            public void onCallStateChanged(int state, String incomingNumber) {

                if (state == TelephonyManager.CALL_STATE_OFFHOOK) {
                    Toast.makeText(getApplicationContext(), &quot;onServiceConnected&quot;, Toast.LENGTH_SHORT).show();
                    updateNotification();
                    startRecord();
                }

                if (state == TelephonyManager.CALL_STATE_IDLE) {
                    stopRecord();
                }
                super.onCallStateChanged(state, incomingNumber);
            }
        };

        if (mgr != null) {
            mgr.listen(phoneStateListener, PhoneStateListener.LISTEN_CALL_STATE);
        }
    }
}
</code></pre>
<p>Manifest Code:</p>
<pre><code> &lt;service
            android:name=&quot;.RecordingAccessibilityService&quot;
            android:exported=&quot;false&quot;
            android:label=&quot;@string/accessibility_description&quot;
            android:permission=&quot;android.permission.BIND_ACCESSIBILITY_SERVICE&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.accessibilityservice.AccessibilityService&quot; /&gt;
            &lt;/intent-filter&gt;

            &lt;meta-data
                android:name=&quot;android.accessibilityservice&quot;
                android:resource=&quot;@xml/accessibility_service_config&quot; /&gt;
        &lt;/service&gt;
</code></pre>
<p>accessibility service config code:</p>
<pre><code>&lt;accessibility-service xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:accessibilityEventTypes=&quot;typeWindowContentChanged|typeWindowStateChanged&quot;
    android:accessibilityFeedbackType=&quot;feedbackGeneric&quot;
    android:accessibilityFlags=&quot;flagReportViewIds|flagRetrieveInteractiveWindows&quot;
    android:canRetrieveWindowContent=&quot;true&quot;
    android:description=&quot;@string/accessibility_description&quot;
    android:label=&quot;@string/app_name&quot;
    android:notificationTimeout=&quot;100&quot; /&gt;
</code></pre>
<p>also must use BroadcastReceiver:</p>
<pre><code>public class CallBroadcastReceiver extends BroadcastReceiver
{
    public void onReceive(Context context, Intent intent) {

        if (intent.getAction().equals(Intent.ACTION_NEW_OUTGOING_CALL)) {
            String numberToCall = intent.getStringExtra(Intent.EXTRA_PHONE_NUMBER);
            // Log.d(&quot;CallRecorder&quot;, &quot;CallBroadcastReceiver intent has EXTRA_PHONE_NUMBER: &quot; + numberToCall);
        }

        PhoneListener phoneListener = new PhoneListener(context);
        TelephonyManager telephony = (TelephonyManager)
                context.getSystemService(Context.TELEPHONY_SERVICE);
        telephony.listen(phoneListener, PhoneStateListener.LISTEN_CALL_STATE);

    }

}
</code></pre>
<p>documentation:</p>
<p><a href=""https://developer.android.com/reference/android/accessibilityservice/AccessibilityService"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/accessibilityservice/AccessibilityService</a></p>
",,2022-04-23 17:43:14
72298322,2,72297950,,12,,768644.0,,"<p>To explain this, lets explain why java's <code>LinkedList</code> is almost entirely useless. This should then segue into why an actual useful LinkedList is a bit tricky to implement, API-wise.</p>
<blockquote>
<p>Using a linked list has better insertion and deletion time for some cases with large data sets.</p>
</blockquote>
<p>No it doesn't, except in very very exotic circumstances. Let's get to it.</p>
<p>Let's say you have a list with 50 elements inside it, and you want to add something right in the middle. For arraylists, this means the system has to 'move' 25 elements up a slot so that there's 'room', and it gets a little worse if the backing array is exactly at capacity (in which case we have to create a new array, copy the original to this newly created one in two chunks and then set the new value at the right index). But at least the system knows <em>where</em> to cut.</p>
<p>Now lets look at Linked Lists. In theory, it's an O(1) operation: Create a new tracker object, set its 'prev' to the 24th element, its 'next' to the 25th element, then update the tracker of the 24th element to have its 'next' point to the new tracker, and update the tracker of what was the 25th element so that its 'prev' points to the new tracker. Done. This algorithm works even if the list has a few bazillion entries in it. O(1). Right?</p>
<p>No. The problem is, how do you <strong>get</strong> there?</p>
<p><code>list.add(25, newItem)</code> cannot magically skip around LinkedList's nearly fatal downside, which is: <strong>It has to iterate through 25 elements just to get to the right tracker in the first place</strong>. In other words, <strong>LinkedList's <code>.add(idx, newItem)</code> method is just as O(n) as ArrayList's is!</strong></p>
<p>If you leave O(n) land behind and get to pragmatics one might say that LinkedList has excellent performance when you add near the 'start' of the list, whereas ArrayList would be at its worst there (LinkedList needs to iterate only a few trackers to get to the right one, whereas ArrayList needs to move a gigantic chunk), but you don't want to do that - when we leave theoretic performance models (that is, O(n) notation) behind and get to actual performance, LinkedList's is truly <em>deplorable</em> - just about everything that isn't algorithmic that could go wrong, does go wrong with LinkedList.</p>
<p>LinkedList's 'fast at the start' grows to perfection once we talk about 'add at the beginning', with a guaranteed O(1) behaviour. However, this is kinda fake - you can trivially get the same performance out of an arraylist, simply wrap it into a thing that reverses all operations (<code>.get(x)</code> is implemented as <code>.get(size() - 1 - x)</code>, for example), because ArrayList is O(1) for insertion at the end. So that's not much of a bonus there. Mostly, just use ArrayDeque, which has fantastic performance for add-near-start and just as great for add-near-end.</p>
<p>About those pragmatics:</p>
<p>LinkedList needs a tracker object: An extra object which has 3 fields:</p>
<ul>
<li><code>value</code>: The actual value at this position in the linked list</li>
<li><code>prev</code>: The tracker object for the item before us in this list (because LinkedList is two-way traversable; if you don't need two-way, you can leave this one out). It's <code>null</code> for the first element.</li>
<li><code>next</code>: The tracker object for the item after us in this list - it's <code>null</code> for the last.</li>
</ul>
<p>Finally the list itself is simply 2 fields: <code>start</code> and <code>end</code>, with start pointing at the tracker of the first object and <code>end</code> at the tracker of the last. With an empty linkedlist having <code>null</code> values.</p>
<p>Those tracker objects are <strong>expensive</strong>.</p>
<p>Modern CPUs cannot access memory. At all. They can only access an on-die cache which comes in an entire page. The only operation that the CPU can send to the memory controller is 'flush this ENTIRE page to main memory' (it cannot flush half of a page; a page size depends on your CPU, but think 64k or so), and 'replace this on-die cache by loading in this ENTIRE page from main memory'. And both of these operations take 500 or more CPU cycles - so the CPU is really gonna do quite the thumb twiddling whilst the slow-as-molasses memory controller does its work. That main memory bank is quite a few lightnanoseconds away from the CPU, that alone makes it slow as molasses!</p>
<p>Hence, when you are talking about a smallish arraylist, given that the JVM guarantees that arrays are 'contiguous in memory', as long as the entire list fits in a single page, then <strong>effectively all operations on it are instantaneous</strong>, and that whole <code>O(n)</code> thing sounds nice but, it's just entirely pointless, really.</p>
<p>As they say, In theory, the practice is just like the theory. But in practice.... it usually is nowhere near.</p>
<p>LinkedList goes in the opposite direction - the nature of modern CPU design ('modern' in quotes here - on-die cache pages and no actual direct memory access by a CPU is at this point over a decade old) actually is bad news: Those extra trackers have a nasty tendency to <strong>not be contiguous</strong>, meaning a full traversal of a linked list causes a load of cache misses, and each cache miss comes with a free 500+ CPU cycles worth of thumb twiddling. OUCH.</p>
<h2>So how do I squeeze O(1) performance out of this thing??</h2>
<p>In java? The only way is to use <code>.listIterator()</code>, or <code>.iterator().remove()</code>. <strong>The only way to get O(1) performance out of a LinkedList where ArrayList has O(n), is via those!</strong></p>
<p>You can use the ListIterator to iterate your way to the right position (this will be <code>O(n)</code>, if you want to add in the middle), but from there you can add as much as you like, and each <code>.add</code> operation is indeed O(1), though the trackers you're making are likely in a different cache page, so you're negatively impacting any future performance of this list.</p>
<h2>That sucks. Is there a better way?</h2>
<p>There surely is! Imaginea linkedlist of Strings. But now imagine that java's own <code>String</code> class has 2 more fields than you're used to: <code>String next;</code> and <code>String prev;</code>, with next and prev pointing at the next/previous string in the list. Now you can just 'add a new thing between this string and the next string in the list please', from any string, by simply updating <code>.next.prev</code>, and then <code>.next</code>, to point at the new string (and, of course, assigning the next and prev fields in the new string with the right values). Now it doesn't matter how you got to any item in the list, once you have it, obtained however, you can do O(1) ops on the list. And we even get to 'save' on trackers - we don't need em (fields themselves within a single object are guaranteed contiguous, though note that all non-primitive fields are, of course, pointers, and the thing they're pointing at might not be).</p>
<p>But java doesn't work that way.</p>
<p>Some languages make it easy to make an ersatz 'combi-type' that acts in memory as a single new type (i.e. guarantees contiguousness of the combination of some type and some additions to the type), this is often called 'mixins'. With that power, you can make your own linked lists, and you wouldn't even have any type named <code>LinkedList</code> - some type just 'grows' next and prev variables on command.</p>
<p>java just isn't like that. Javascript can be - objects really are just hashmaps and you're free to introduce a prev and next pointer if you want. To do this, you don't need any built-in types of any sort, you just need a tutorial, really.</p>
<h2>Still, it'd have been nice</h2>
<p>Actually javascript has almost no batteries included. Famously, something as crazy simplistic as left-padding a string needs a <a href=""https://qz.com/646467/how-one-programmer-broke-the-internet-by-deleting-a-tiny-piece-of-code/"" rel=""noreferrer"">rather notorious library</a>.</p>
<p>So, more generally, the answer to 'why does javascript not have X baked in' is a very generally applicable: 'Because javascript just doesnt have much baked in at all'.</p>
<h2>I don't believe you - I am a card carrying member of the church of <code>O(n)</code>!</h2>
<p>Well, some skepticism is quite healthy as a programmer, so good for you!</p>
<p>You should write some code to test your preconceptions. And to test my theories while you're at it!</p>
<p>Make code that e.g. inserts in the middle using <code>list.set(list.size() / 2, newElem)</code> and time it for both when <code>list</code> is an instance of ArrayList as well as for an instance of LinkedList. Make sure you use a framework to knows how to properly do this, because between hotspot compilation, JVM warming, optimizations to skip code that doesn't produce any results that are used entirely, modern CPU design, and the fact that modern OSes aren't realtime, it's really hard to do that. Hence, use <a href=""https://www.baeldung.com/java-microbenchmark-harness"" rel=""noreferrer"">Java Microbenchmark Harness</a> to run these tests.</p>
<p>You'll find that it is quite difficult to create a scenario where LinkedList significantly outperforms ArrayList, and quite easy for the reverse. Even in cases where basic big-O notation would suggest otherwise.</p>
<h2>So what should I use instead?</h2>
<p>There are certainly scenarios where ArrayList's performance characteristics are no good. However, for just about every imaginable scenario where that's true, LinkedList is not the best, or even a good answer as an alternative. Instead, look at <code>ArrayDeque</code>, or rewrite the algorithm to use <code>TreeMap</code> or <code>HashMap</code>, use databases, skiplists, primitive lists (as you can have really quite sizable primitive lists and still get fantastic performance), or enumsets.</p>
<p>Most of which do not have javascript equivalents either, but all of which have third party libraries in the node ecosystem that do. Of course, if you do that, you may eventually run into that whole padLeft debacle thing, but then you're kinda signing up for that the moment you decide to use javascript in the first place.</p>
",,2022-05-19 03:31:52
72335237,2,72334829,,1,,5577765.0,,"<p>Use the <a href=""https://processing.org/reference/mousePressed_.html"" rel=""nofollow noreferrer""><code>mousePressed()</code></a> and move the slider to the next line when the button is pressed:</p>
<pre class=""lang-java prettyprint-override""><code>void mousePressed() {
    if (mouseX &gt; bx-boxSize &amp;&amp; mouseX &lt; bx+boxSize &amp;&amp; 
        mouseY &gt; by-boxSize &amp;&amp; mouseY &lt; by+boxSize) {  
        if (x &gt; 75) {
            x = ((x+39 - 75) / 40) * 40 + 75;
            x -= 40;
        }
    }
    if (mouseX &gt; sbx-sboxSize &amp;&amp; mouseX &lt; sbx+sboxSize &amp;&amp; 
        mouseY &gt; sby-sboxSize &amp;&amp; mouseY &lt; sby+sboxSize) {
        if (x &lt; 475) {
            x = ((x - 75) / 40) * 40 + 75;
            x += 40;
        }
    }
}
</code></pre>
<hr />
<p>Complete example:</p>
<p><a href=""https://i.sstatic.net/PEDYz.gif"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/PEDYz.gif"" alt="""" /></a></p>
<pre class=""lang-java prettyprint-override""><code>int x=75;
int lsW=17;
int lsH=50;
float bx =17;
float by = 25;
int boxSize = 50;
float xOffset = 0.0; 
float yOffset = 0.0;
float sbx = 483;
float sby = 25;
int sboxSize = 50;
float sxOffset = 0.0; 
float syOffset = 0.0;

void setup() {
  size(550,300);
}

void mousePressed() {
    if (mouseX &gt; bx-boxSize &amp;&amp; mouseX &lt; bx+boxSize &amp;&amp; 
        mouseY &gt; by-boxSize &amp;&amp; mouseY &lt; by+boxSize) {  
        if (x &gt; 75) {
            x = ((x+39 - 75) / 40) * 40 + 75;
            x -= 40;
        }
    }
    if (mouseX &gt; sbx-sboxSize &amp;&amp; mouseX &lt; sbx+sboxSize &amp;&amp; 
        mouseY &gt; sby-sboxSize &amp;&amp; mouseY &lt; sby+sboxSize) {
        if (x &lt; 475) {
            x = ((x - 75) / 40) * 40 + 75;
            x += 40;
        }
    }
}


void draw() {
  background(0);
  fill (100);
  rect (75, 25, 400, 50); //the slider track
  
  if(mousePressed) {
  if (mouseX &gt;=75 &amp;&amp; mouseX &lt;= 475) //mousepress for the slider track
    {x=mouseX;}
    }
    
  float value = map(x, 75, 475, 0, 100);

  fill(255);
  rect (x, 20, 3, 60); //the slider thumb, positioned at x}
  fill (100);

  if (mouseX &gt; bx-boxSize &amp;&amp; mouseX &lt; bx+boxSize &amp;&amp; 
      mouseY &gt; by-boxSize &amp;&amp; mouseY &lt; by+boxSize) {
      fill(255);
  }
  
  rect(bx, by, boxSize, boxSize);
  fill(10);
  triangle(30, 50, 50, 40, 50, 60);
  
  fill(100);
  if (mouseX &gt; sbx-sboxSize &amp;&amp; mouseX &lt; sbx+sboxSize &amp;&amp; 
      mouseY &gt; sby-sboxSize &amp;&amp; mouseY &lt; sby+sboxSize){
      fill(255);
  }
  
  
  rect(483,25,50,50);
  fill(10);
  triangle(520, 50, 500, 40, 500, 60);
  
  println(value);
  

  line (115, 60, 115, 90);
  line (155, 60, 155, 90);
  line (195, 60, 195, 90);
  line (235, 60, 235, 90);
  line (275, 60, 275, 90);
  line (315, 60, 315, 90);
  line (355, 60, 355, 90);
  line (395, 60, 395, 90);
  line (435, 60, 435, 90);
}
</code></pre>
",,2022-05-22 06:18:45
72345801,2,72265189,,0,,334402.0,,"<p>The ExoPlayer documentation discusses this:</p>
<blockquote>
<p>In ExoPlayer every piece of media is represented by a MediaItem. However internally, the player needs MediaSource instances to play the content. The player creates these from media items using a MediaSource.Factory.</p>
</blockquote>
<p>(<a href=""https://exoplayer.dev/media-sources.html"" rel=""nofollow noreferrer"">https://exoplayer.dev/media-sources.html</a>)</p>
<p>and:</p>
<blockquote>
<p>The playlist API is based on MediaItems, which can be conveniently built using MediaItem.Builder. Inside the player, media items are converted into playable MediaSources by a MediaSource.Factory</p>
</blockquote>
<p>If all you want is to play a media item or create a playlist then you probably only need to use MediaItem - there are some good examples in the latest CodeLabs: <a href=""https://developer.android.com/codelabs/exoplayer-intro#0"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/exoplayer-intro#0</a></p>
",,2022-05-23 08:56:55
72415024,2,72414918,,0,,14500957.0,,"<p>To define Global Variable you can make use of static Keyword</p>
<pre><code>public class insertionsort {
    public static int[] ul = new int[] {2, 5, 7, 3, 6, 10, 8, 7, 7, 1};
    public static void main(String[] args) {
    UnsortedListPrintout();
    Insertionsort();
  }

  public static void UnsortedListPrintout() {
    System.out.println(&quot;Unsorted List: &quot; + Arrays.toString(ul));
  }


  public static void Insertionsort() {
    System.out.println(ul[1]);
  }
}
</code></pre>
",,2022-05-28 10:48:00
72434146,2,72365267,,0,,1124509.0,,"<p>I managed to implement a solution based on <code>Schema.newValidatorHandler()</code>. I lost most time with the fact that <code>SaxParser.parse()</code> only accepts a <code>DefaultHandler</code>. To insert a custom <code>ContentHandler</code>, one has to use <code>SaxParser.getXMLReader().setContentHandler()</code>.</p>
<p>I am aware that this proof of concept is not very robust, because it is parsing the validation error message to extract the <code>maxLength</code> schema information. So this solution is relying on a very specific SAX implementation.</p>
<p>I looked at schema aware XSLT transformation, but could not find any indication that the schema information can be accessed in the transformation expressions.</p>
<p>Writing my own specialized schema parser is still not completely off the table.</p>
<pre><code>import java.io.IOException;
import java.io.StringReader;
import java.util.Map.Entry;
import java.util.SortedMap;
import java.util.TreeMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.xml.XMLConstants;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.ValidatorHandler;

import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

public class TestFixMaxLength {
    public static void main(String[] args) throws Exception {
        SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
        Schema schema = schemaFactory.newSchema(new StreamSource(TestFixMaxLength.class.getResourceAsStream(&quot;schema.xsd&quot;)));

        // validation on original input should fail
        // schema.newValidator().validate(new StreamSource(TestFixMaxLength.class.getResourceAsStream(&quot;input.xml&quot;)));

        CustomContentHandler customContentHandler = new CustomContentHandler();
        ValidatorHandler validatorHandler = schema.newValidatorHandler();
        validatorHandler.setContentHandler(customContentHandler);
        validatorHandler.setErrorHandler(customContentHandler);

        SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
        saxParserFactory.setNamespaceAware(true);
        SAXParser saxParser = saxParserFactory.newSAXParser();

        XMLReader xmlReader = saxParser.getXMLReader();
        xmlReader.setContentHandler(validatorHandler);
        xmlReader.parse(new InputSource(TestFixMaxLength.class.getResourceAsStream(&quot;input.xml&quot;)));
        // not: saxParser.parse(TestFixMaxLength.class.getResourceAsStream(&quot;input.xml&quot;), ???);

        System.out.println();
        System.out.println();
        System.out.println(customContentHandler.m_outputBuilder.toString());

        // validation on corrected input should pass
        schema.newValidator().validate(new StreamSource(new StringReader(customContentHandler.m_outputBuilder.toString())));
    }

    /****************************************************************************************************************************************/
    private static class CustomContentHandler extends DefaultHandler {
        private StringBuilder m_outputBuilder = new StringBuilder();
        private SortedMap&lt;String, String&gt; m_prefixMappings = new TreeMap&lt;&gt;();
        private int m_lastValueLength = 0;
        private Matcher m_matcher = Pattern.compile(
                &quot;cvc-maxLength-valid: Value '(.+?)' with length = '(.+?)' is not facet-valid with respect to maxLength '(.+?)' for type '(.+?)'.&quot;,
                Pattern.CASE_INSENSITIVE | Pattern.DOTALL).matcher(&quot;&quot;);

        @Override
        public void error(SAXParseException e) throws SAXException {
            if (e.getMessage().startsWith(&quot;cvc-maxLength-valid&quot;)) {
                System.out.println(&quot;error: &quot; + e);
                m_matcher.reset(e.getMessage());
                if (m_matcher.matches()) {
                    int maxLength = Integer.parseInt(m_matcher.group(3));
                    m_outputBuilder.setLength(m_outputBuilder.length() - m_lastValueLength + maxLength);
                } else {
                    System.out.println(&quot;unexpected message format&quot;);
                }
            }
        }

        @Override
        public void startDocument() throws SAXException {
            System.out.println(&quot;startDocument&quot;);
        }

        @Override
        public void endDocument() throws SAXException {
            System.out.println(&quot;endDocument&quot;);
        }

        @Override
        public void startPrefixMapping(String prefix, String uri) throws SAXException {
            System.out.println(&quot;startPrefixMapping: prefix: &quot; + prefix + &quot;, uri: &quot; + uri);
            m_prefixMappings.put(prefix, uri);
        }

        @Override
        public void endPrefixMapping(String prefix) throws SAXException {
            System.out.println(&quot;endPrefixMapping: prefix: &quot; + prefix);
        }

        @Override
        public void startElement(String uri, String localName, String qName, Attributes attributes)
                throws SAXException {
            System.out.println(&quot;startElement: uri: &quot; + uri + &quot;, localName: &quot; + localName + &quot;, qName: &quot; + qName
                    + &quot;, attributes: &quot; + attributes.getLength());

            m_outputBuilder.append('&lt;');
            m_outputBuilder.append(qName);

            for (int i = 0; i &lt; attributes.getLength(); i++) {
                m_outputBuilder.append(' ');
                m_outputBuilder.append(attributes.getQName(i));
                m_outputBuilder.append('=');
                m_outputBuilder.append('\&quot;');
                m_outputBuilder.append(attributes.getValue(i));
                m_outputBuilder.append('\&quot;');
            }

            if (!m_prefixMappings.isEmpty()) {
                for (Entry&lt;String, String&gt; mapping : m_prefixMappings.entrySet()) {
                    m_outputBuilder.append(&quot; xmlns:&quot;);
                    m_outputBuilder.append(mapping.getKey());
                    m_outputBuilder.append('=');
                    m_outputBuilder.append('\&quot;');
                    m_outputBuilder.append(mapping.getValue());
                    m_outputBuilder.append('\&quot;');
                }

                m_prefixMappings.clear();
            }

            m_outputBuilder.append('&gt;');
        }

        @Override
        public void endElement(String uri, String localName, String qName) throws SAXException {
            System.out.println(&quot;endElement: uri: &quot; + uri + &quot;, localName: &quot; + localName + &quot;, qName: &quot; + qName);

            m_outputBuilder.append('&lt;');
            m_outputBuilder.append('/');
            m_outputBuilder.append(qName);
            m_outputBuilder.append('&gt;');
        }

        @Override
        public void characters(char[] ch, int start, int length) throws SAXException {
            System.out.println(
                    &quot;characters: '&quot; + new String(ch, start, length) + &quot;', start: &quot; + start + &quot;, length: &quot; + length);

            m_outputBuilder.append(ch, start, length);
            m_lastValueLength = length;
        }

        @Override
        public void skippedEntity(String name) throws SAXException {
            System.out.println(&quot;skippedEntity: name: &quot; + name);
        }

        @Override
        public void ignorableWhitespace(char[] ch, int start, int length) throws SAXException {
            System.out.println(&quot;ignorableWhitespace: '&quot; + new String(ch, start, length) + &quot;', start: &quot; + start
                    + &quot;, length: &quot; + length);
            m_outputBuilder.append(ch, start, length);
        }

        @Override
        public void processingInstruction(String target, String data) throws SAXException {
            System.out.println(&quot;processingInstruction: target: &quot; + target + &quot;, data: &quot; + data);
        }

        @Override
        public InputSource resolveEntity(String publicId, String systemId) throws IOException, SAXException {
            System.out.println(&quot;resolveEntity&quot;);
            return null;
        }
    }
}
</code></pre>
",,2022-05-30 12:11:57
72442670,2,72442561,,1,,19189183.0,,"<p><code>List</code> Does not have any <code>poll</code> method. It comes from <code>Queue</code> interface.Only  <code>LinkedList</code> implements both <code>List</code> and the <code>Queue</code> interface. You are creating an instance of <code>List</code> here instead of creating an instance of  <code>LinkedList</code>.</p>
<p>So better to use :</p>
<pre><code>LinkedList list = new LinkedList&lt;&gt;();
</code></pre>
",,2022-05-31 05:33:27
72443985,2,58955434,,3,,10164508.0,,"<p>In Kotlin You can just use decode function for byteArray...</p>
<pre><code>private fun stringToBitmap(encodedString: String): Bitmap {
        val imageBytes = decode(encodedString, DEFAULT)
        return BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.size)
    }
</code></pre>
",,2022-05-31 07:47:27
72450577,2,72447755,,0,,415448.0,,"<p>You can write a SAX <code>ContentHandler</code> that duplicates each event sending it to two different <code>ContentHandler</code>s, one being your current one, and the other being a JAXP <code>TransformerHandler</code> that serializes the stream of events to a <code>StreamResult</code>.</p>
",,2022-05-31 15:35:06
72454693,2,72451860,,3,,888580.0,,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",,2022-05-31 22:26:51
72461463,2,72449527,,1,,7951454.0,,"<p>In your scenario, you'll need to use addNotificationReceivedListener, this listener will be triggered after the user clicks on the notification, inside that listener you can access the notification response data and navigate to another screen.</p>
<p>You can read more about it here <a href=""https://docs.expo.dev/push-notifications/receiving-notifications/"" rel=""nofollow noreferrer"">https://docs.expo.dev/push-notifications/receiving-notifications/</a></p>
<p>Example of the notification listener function</p>
<pre><code>const handleNotificationResponse = (response: NotificationResponse) =&gt; {
    const { data } = response.notification.request.content
    if (data) {
        navigationRef?.current?.push('your_screen_name', {
            id: data?.id,
            otherImportantData: data.others,
          })
    }
  }
</code></pre>
",,2022-06-01 11:56:01
72471473,2,72471200,,0,,7019324.0,,"<p>The issue you encounter is a classloading issue during initialization of your EntityManager on your JBoss application environement.</p>
<p>Disabling the logging will not fix this error, but hide it. Check your deployment classpath, and your JDK version. And verify that all required hibernate libraries are present. You can check which libraries you need on the classpath by looking at the dependencies on a site such as mvnRepository (example: <a href=""https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core/6.0.2.Final"" rel=""nofollow noreferrer"">https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core/6.0.2.Final</a>).</p>
<p>Are you using a dependency manager, such as Maven or Gradle?</p>
",,2022-06-02 06:14:55
72508793,2,72508483,,1,,967162.0,,"<p>Below applies to any deep learning library …</p>
<ol>
<li>Build model</li>
<li>Train model.</li>
<li>Save model (should be saving parameters/weights as well).</li>
<li>Load model from the saved file (any time any where).</li>
<li>Continue with more training.</li>
</ol>
",,2022-06-05 15:45:14
72534183,2,72527214,,1,,10225299.0,,"<p>So, from your comment, you need to change this setting for quite a lot of devices (around 500). I don't have time to create a detailed solution for you, but I'll suggest these two approaches.</p>
<h1>Approach 1: Scripting</h1>
<p>Use <code>adb</code> to grab coordinates and simulate touches. Write a script to automate the process.</p>
<p>See <a href=""https://stackoverflow.com/questions/18924968/using-adb-to-access-a-particular-ui-control-on-the-screen"">Using ADB to access a particular UI control on the screen</a>.</p>
<p><strong>Edit:</strong> <a href=""https://github.com/dtmilano/AndroidViewClient/wiki/Culebra-GUI"" rel=""nofollow noreferrer"">Culebra GUI</a> seems to make your life a lot easier should you take this approach.</p>
<h2>Pros</h2>
<ul>
<li>Pretty straightforward.</li>
</ul>
<h2>Cons</h2>
<ul>
<li>Quite tedious when your flow is complex (kind of a personal opinion, so take this with a grain of salt).</li>
</ul>
<h1>Approach 2: AccessibilityService</h1>
<p>Utilize Android's <a href=""https://developer.android.com/reference/android/accessibilityservice/AccessibilityService"" rel=""nofollow noreferrer"">AccessibilityService</a>. You will need to write an Android app that has an <code>AccessibilityService</code> and bulk install it on the devices (via <code>adb</code> or any other means).</p>
<h2>Pros</h2>
<ul>
<li>Powerful API.</li>
<li>Doesn't require <code>adb</code>.</li>
</ul>
<h2>Cons</h2>
<ul>
<li>Needs to install your app on the devices.</li>
<li>Lots of boilerplate code.</li>
<li><code>AccessibilityService</code> needs to be enabled manually. This <a href=""https://stackoverflow.com/questions/10061154/how-to-programmatically-enable-disable-accessibility-service-in-android/38939299#38939299"">answer</a> shows how to automate it, but I have yet to test if it works.</li>
</ul>
<h1>TL;DR</h1>
<ul>
<li>Write a shell script that uses <code>adb</code> for simple, one-off operations.</li>
<li>Use <code>AccessibilityService</code> for more complex use cases.</li>
</ul>
",,2022-06-07 15:48:29
72573476,2,72572323,,0,,17073807.0,,"<p>Okay so first step is to write a getter setter method inside your pref manager class.</p>
<pre><code>public String BUTTON_STATE= &quot;KEY_BUTTONSTATE&quot;;

    public void setbuttonstate(boolean state) {
            editor.putBoolean(BUTTON_STATE, state);
            editor.commit();
        }
    
        public boolean getbuttonstate() {
            return sharedPreferences.getBoolean(BUTTON_STATE, false);
        }
</code></pre>
<p>Now your getter should return a boolean value on which you will verify the last state of your button, by default it will be false</p>
<p>Now first intialize your pref manager class inside adapter and after that inside your  <code>holder.btnacp</code> click listener do this:</p>
<pre><code>yourprefmanagerclassname.setbuttonstate(true)
</code></pre>
<p>What this means is that when the button is clicked it is set checked to true and the above line will save it's state to the method written in your prefmanager</p>
<p>Now for the final step add this line in start of adapter:</p>
<pre><code>if ( yourprefmanagerclassname.getbuttonstate) {
            btnacp.setEnabled(true);
}
</code></pre>
<p>Whenever your adapter will be initialised, this above method will check it's last state and set it accordingly, don't forget to add null checks for pref manager class and then for methods !!</p>
<p>Do let me know if this helps you !!</p>
",,2022-06-10 11:21:49
72580068,2,72579979,,0,,17949945.0,,"<p>You don't need to use the <code>LinkedList</code> class built-in in the JDK. Instead, you have to utilize a very basic custom implementation of the <a href=""https://en.wikipedia.org/wiki/Linked_list#Singly_linked_list"" rel=""nofollow noreferrer""><em>Singly linked list</em></a> data structure.</p>
<p>If you choose the language level <strong>Java 8</strong>, then almost ready to go implementation will be provided for you.</p>
<p>You only need to implement a <em>single method</em> that does precisely what required according to the challenge description, and nothing more:</p>
<pre><code>public static void printLinkedList(SinglyLinkedListNode head) {
    SinglyLinkedListNode cur = head;
    while (cur != null) { // while current node exists
        System.out.println(cur.data); // print its data
        cur = cur.next;               // and reassign the current node to its next node
    }
}
</code></pre>
",,2022-06-10 21:39:33
72590434,2,72589659,,0,,7189597.0,,"<p>You can download <code>jNativeHook</code> and hook the global listener to <code>globalScreen</code>.</p>
<p>you can use it as a normal swing listener.</p>
<p>Here is the link:</p>
<p><a href=""https://code.google.com/p/jnativehook/"" rel=""nofollow noreferrer"">https://code.google.com/p/jnativehook/</a></p>
<p>By using this library you achieve a wide range of functions to control the mouse events!!</p>
",,2022-06-12 08:00:29
72609673,2,72609585,,0,,7728273.0,,"<p>It's pretty hard to debug without having full access but it seems that in your adapter there are some hardcoded things right now</p>
<pre><code> @Override
public int getItemCount() {
    return 0;
}
</code></pre>
<p>Try changing that to be</p>
<pre><code> @Override
public int getItemCount() {
    return list.size;
}
</code></pre>
<p>So that when you call notify adapter, it doesn't operate with hardcoded 0 lengths. I would also recommend you updating the adapter using some custom method, so that data from the original list doesn't mixed data in adapter</p>
",,2022-06-13 22:22:44
72673268,2,72672215,,3,,1831987.0,,"<p>Since you want custom mouse behavior, you should not use <a href=""https://docs.oracle.com/en/java/javase/18/docs/api/java.desktop/javax/swing/JComponent.html#setComponentPopupMenu(javax.swing.JPopupMenu)"" rel=""nofollow noreferrer"">setComponentPopupMenu</a>.</p>
<p>Instead, display the JPopupMenu yourself, using JPopupMenu’s <a href=""https://docs.oracle.com/en/java/javase/18/docs/api/java.desktop/javax/swing/JPopupMenu.html#show(java.awt.Component,int,int)"" rel=""nofollow noreferrer"">show</a> method:</p>
<pre><code>JPopupMenu menu = /* ... */;

path_tbl.addMouseListener(new MouseAdapter() {
    private void showPopupMenuFor(MouseEvent e) {
        if (menu.isPopupTrigger(e)) {
            Point point = e.getPoint();
            int row = path_tbl.rowAtPoint(point);

            if (!path_tbl.isRowSelected(row)) {
                path_tbl.setRowSelectionInterval(row, row);
            }

            menu.show(path_tbl, e.getX(), e.getY());
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        showPopupMenuFor(e);
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        showPopupMenuFor(e);
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        showPopupMenuFor(e);
    }
});
</code></pre>
<p>You must check the MouseEvent in both mousePressed <em>and</em> mouseReleased, because exactly when a context menu is triggered depends on the platform and the look-and-feel.  (Checking in mouseClicked may or may not be necessary, but it doesn’t hurt.)</p>
",,2022-06-18 22:53:27
72679458,2,72650808,,0,,14594371.0,,"<p>I later figured out that the better way of implementing what I'm trying to accomplish is to use <a href=""https://developer.android.google.cn/reference/kotlin/android/accessibilityservice/AccessibilityService?hl=es"" rel=""nofollow noreferrer"">AccessibilityService</a>.</p>
",,2022-06-19 18:40:24
72679993,2,72679908,,0,,19334496.0,,"<p>This code cancels out the start / end position.
for</p>
<pre><code>line.startX  = line.startX + deltaX
=
line.startX  = line.startX +(mouseEvent.x - (line.startX + line.endX))
= 
line.startX  = -line.endX+mouseEvent.x
</code></pre>
<p>So now you dont even have the start position</p>
<p>You should have</p>
<pre><code>var deltaX=mouseEvent.x
var deltaY = mouseEvent.y
line.startX  = line.startX + deltaX
line.startY  = line.startY +deltaY
line.endX = line.endX + deltaX
line.endY = line.endX +deltaY
</code></pre>
<p>Make sure the mouse Positions update</p>
",,2022-06-19 20:05:14
72700591,2,72699081,,2,,19025903.0,,"<blockquote>
<ol>
<li><p>How could it determine the right key if the equals is always false?</p>
</li>
<li><p>How could it get the right key without even calling an equals for getting an object by the key?</p>
</li>
</ol>
</blockquote>
<p>you can refer <code>hashTable internal working</code> for detail information as it is difficult to explain it here. Have tried to explain in short.</p>
<ul>
<li>Every hash-based DataStructure internally follows <code>HashTable</code>.</li>
</ul>
<pre><code>    Map&lt;Person, String&gt; peopleMap = new HashMap&lt;&gt;();
</code></pre>
<ul>
<li>here <code>init_capacity=16</code> (HashMap) =&gt; 16 distinct <em>bucketId's</em> [0-15] , like an array of references, initially value= <code>null</code>.</li>
</ul>
<p><em>each slot of array is called as</em> <strong>bin/bucket</strong></p>
<p><em>Java HashTable internally use</em> <strong>Singly Linear LinkedList</strong></p>
<ul>
<li><p>bucketId calculated internally like, <code>bucketId = @Overrided HashCode + some internal calculation</code></p>
</li>
<li><p>your Hashcode() returns everytime <strong>1</strong> implies <code>bucketId = 1 + (say)3 = 4 [everytime]</code>.</p>
</li>
</ul>
<pre><code>     peopleMap.put(person3, &quot;SomeValue3&quot;);
</code></pre>
<ol>
<li>invokes <strong>Hashcode one time</strong> =&gt; bucketId = 4 is empty initially <strong>so JVM do NOT invokes</strong> <em>equals()</em> &amp; directly attach data <strong>(node)</strong>(in simple language).</li>
</ol>
<pre><code>     peopleMap.put(person2, &quot;SomeValue1&quot;);
</code></pre>
<ol start=""2"">
<li>invokes <strong>Hashcode one time</strong> =&gt; bucketId = 4. Now <strong>invokes equals 1 time</strong> since to check if person2 value equal to previous added value ie. person3.</li>
</ol>
<pre><code>     peopleMap.put(person1, &quot;SomeValue2&quot;);
</code></pre>
<p>3.invokes <strong>Hashcode one time</strong> =&gt; bucketId = 4. Now <strong>invokes equals 2 times</strong> to check duplicates . ie. 1time for person3, 2ndly for person2.</p>
<p><strong>hence output:</strong></p>
<blockquote>
<p>Hashcode is called</p>
<p>Hashcode is called</p>
<p>Equals is called</p>
<p>Hashcode is called</p>
<p>Equals is called</p>
<p>Equals is called</p>
</blockquote>
<p><a href=""https://i.sstatic.net/ve1ow.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ve1ow.png"" alt=""DIAGRAM:"" /></a></p>
<p><strong>HOPE THIS HELPS :)</strong></p>
",,2022-06-21 12:13:31
72763030,2,72437618,,2,,3902663.0,,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",,2022-06-26 15:50:33
72877664,2,72877204,,-2,,18285375.0,,"<p>According to your description, this is actually a small program that counts specific strings, and doesn't even need LinkedList
I modified your code and now it should satisfy the two conditions you proposed</p>
<pre class=""lang-java prettyprint-override""><code>    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        LinkedList&lt;String&gt; cointoss = new LinkedList&lt;String&gt;();
        boolean head = true;
        boolean tail = false;
        boolean streak = true;
        int streakcount = 0;

        System.out.println(&quot;Welcome to the Program #2 &quot;);
        // ask for the boolean value. It can be head and tail or true and false.
        System.out.println(&quot;Enter the boolean value (head=true, tail=false): &quot;);

        for (int i = 0; i &lt; 18; i++) {
            String next = input.next();
            if (next.equals(&quot;true&quot;) || next.equals(&quot;head&quot;)) {
                streakcount++;
            }
            cointoss.add(next);
        }

        if (streakcount &gt;= 10) {
            System.out.println(&quot;Streak is found! &quot;);
        } else {
            System.out.println(&quot;Streak is broken! &quot;);
        }
    }
</code></pre>
",,2022-07-06 03:31:32
72936168,2,72935951,,1,,11121568.0,,"<p>I think <strong>yes</strong> is the answer to your question.</p>
<p>I do it by myself in my projects.</p>
<p>I say you why!</p>
<p>The usual auto-incremented id works perfectly fine. Well, there are a few cases where UUID might become handy. Even though excellent web portals have widely used UUID identifiers as primary ID systems (<a href=""https://trello.com"" rel=""nofollow noreferrer"">https://trello.com</a>, <a href=""https://slack.com"" rel=""nofollow noreferrer"">https://slack.com</a>), many new start-ups and developments are still based on auto-incremented primary keys as IDs.</p>
<ul>
<li><p>One is related to security. A UUID is way more challenging to remember than a simple number. So someone passing by, glancing at your screen, would not be able to know what file number you are working on. Hacking into a system to retrieve information is way more difficult if you don't see what you're looking for or where to look.</p>
</li>
<li><p>Another is concerning database scaling. Imagine you've been writing blog articles on two self-hosted blogging platforms. And for some reason, you want to merge those two blogs into one. If you had used the usual auto-incrementing IDs, you would have to re-index every blog post of the databases and update every foreign key that might point to them. But if you had used UUID as primary keys… No work to do!</p>
</li>
<li><p>If you use Autoincrement IDs, a bad guy could create an account in your system, create a company, check the Network tab in the Chrome browser and see that his ID is 136. He now knows that your system has only 135 companies ever created by other clients. You may say &quot;not a big deal,&quot; but are you 100% sure the total entity count info put is not sensitive?</p>
</li>
<li><p>When you use UUIDs, you can't say how many records were created before. Also, you could use UUIDv4 in secret (e.g. share) links. Hackers will need eternity to guess it even if you will have millions of secret links.</p>
</li>
</ul>
<p>There are indeed some other benefits to using UUID as primary keys; look around on the internet.</p>
<p>Ultimately, this is your project, and you should decide which strategy fits your project the best.</p>
",,2022-07-11 09:14:02
72983240,2,72882869,,0,,9698517.0,,"<p>You will need to change your domain; from <code>Cost</code>, I can see you require the Jobs to be ordered, but <code>Job</code> does not have any problem properties (i.e. non-planning variable fields) that can be used to determine the order (for example, a datetime field).</p>
<p>To enforce an order,there are two different models you can use:</p>
<ul>
<li><p>the chained model, where each <code>Job</code> point to the previous <code>Job</code> (and the first <code>Job</code> points to <code>Employee</code>). This is explained by <a href=""https://www.optaplanner.org/docs/optaplanner/latest/planner-configuration/planner-configuration.html#chainedPlanningVariable"" rel=""nofollow noreferrer"">https://www.optaplanner.org/docs/optaplanner/latest/planner-configuration/planner-configuration.html#chainedPlanningVariable</a> and <a href=""https://www.optaplanner.org/docs/optaplanner/latest/design-patterns/design-patterns.html#chainedThroughTimePattern"" rel=""nofollow noreferrer"">https://www.optaplanner.org/docs/optaplanner/latest/design-patterns/design-patterns.html#chainedThroughTimePattern</a> .</p>
</li>
<li><p>Using <code>@PlanningListVariable</code>, where each <code>Employee</code> is assigned an ordered <code>List</code> of jobs (and each job goes to exactly one employee). This changes <code>Employee</code> to the <code>@PlanningEntity</code> with a <code>@PlanningListVariable</code> for jobs, and <code>Job</code> to a <code>shadow entity</code> (changing its <code>@PlanningVariable</code> to an <code>@InverseRelationShadowVariable</code>). An example of this is <a href=""https://github.com/kiegroup/optaplanner-quickstarts/tree/stable/use-cases/vehicle-routing"" rel=""nofollow noreferrer"">https://github.com/kiegroup/optaplanner-quickstarts/tree/stable/use-cases/vehicle-routing</a> .</p>
</li>
</ul>
<p>The final form of the constraints will vary depending on which model is used.</p>
",,2022-07-14 15:42:03
72983306,2,72982671,,0,,642706.0,,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",,2022-07-14 15:47:09
73025395,2,73025233,,0,,8035759.0,,"<p>I found something similar to your requirement
Not 100% sure but maybe this could help</p>
<p>You need your mapper to read the tree
Assuming you are using Jackson</p>
<p>You can have</p>
<pre><code>
ObjectMapper mapper=new ObjectMapper();
JsonNode object1=mapper.readTree(response1):
JsonNode object2=mapper.readTree(response2);


assertEquals(object1, object2);
</code></pre>
<p>Even though the order is not the same, it should give you true.</p>
<p>Click <a href=""https://www.baeldung.com/jackson-compare-two-json-objects"" rel=""nofollow noreferrer"">here</a> for more</p>
",,2022-07-18 16:08:34
73039173,2,73039057,,1,,102937.0,,"<p>You need to initialize your <code>driver</code> variable in your <code>CommonFunctions</code> class.</p>
<pre><code>WebDriver driver = new WebDriver(... etc);
</code></pre>
<p>Or, write a constructor that initializes this variable.</p>
<pre><code>public class CommonFunctions 
{
  public WebDriver driver;

  public CommonFunctions() // Constructor
  {
      driver = new WebDriver();
  }
</code></pre>
",,2022-07-19 14:53:23
73046667,2,73041436,,1,,9657861.0,,"<p>So, <code>tff.to_type</code> creates a <code>tff</code> type with the dtype <code>tf.int64</code> and the shape <code>[2]</code>. It is like defining a <code>tf.TensorSpec</code> that describes the properties of a tensor. It has a <code>shape</code> argument as well as a <code>dtype</code> argument. For better understanding, run:</p>
<pre><code>import tensorflow as tf
tf.TensorSpec(dtype=tf.int64, shape=[2])
</code></pre>
<pre><code>TensorSpec(shape=(2,), dtype=tf.int64, name=None)
</code></pre>
<p>This tensor will, therefore, have two values with the data type <code>tf.int64</code>.</p>
",,2022-07-20 06:06:27
73064025,2,73063788,,0,,1803853.0,,"<p>There is no automatic way to split a big xml in several smaller xml.</p>
<p>As an extreme simplification a single xml represent a single object with properties.
Splitting it in different xmls means splitting a single object in multiple objects. This is not something that can be done automatically.</p>
<p>Let show a simple example. Imagine to have this xml</p>
<pre><code>&lt;note&gt;
  &lt;to&gt;Tove&lt;/to&gt;
  &lt;from&gt;Jani&lt;/from&gt;
  &lt;heading&gt;Reminder&lt;/heading&gt;
  &lt;body&gt;Don't forget me this weekend!&lt;/body&gt;
&lt;/note&gt;
</code></pre>
<p>How do you split it? Is the following a valid way to split it? (It is a business decision how to split and recombine it).</p>
<pre><code>&lt;note&gt;
  &lt;to&gt;Tove&lt;/to&gt;
  &lt;from&gt;Jani&lt;/from&gt;
&lt;/note&gt;

&lt;note&gt;
  &lt;heading&gt;Reminder&lt;/heading&gt;
  &lt;body&gt;Don't forget me this weekend!&lt;/body&gt;
&lt;/note&gt;
</code></pre>
<p>If the problem is not related to spliting a big xml to smaller xmls, but to split a single big file to smaller files you can split it as</p>
<pre><code>&lt;note&gt;
  &lt;to&gt;Tove&lt;/to&gt;
  &lt;from&gt;Jani&lt;/from&gt;
</code></pre>
<p>and</p>
<pre><code>  &lt;heading&gt;Reminder&lt;/heading&gt;
  &lt;body&gt;Don't forget me this weekend!&lt;/body&gt;
&lt;/note&gt;
</code></pre>
<p>But if the problem is the size of the file to send it over the internet or to save space when saving it, consider also to compress it. Compressing an xml file results in a very smaller compressed result. Eventually you can split the compressed file.</p>
<p>If the problem instead is to hold in memory the whole file simply don't do that.  Use a SAX parser instead of a DOM parser so you can hold in memory just a little portion of the original xml. A <a href=""https://en.wikipedia.org/wiki/Simple_API_for_XML"" rel=""nofollow noreferrer"">Sax parser</a> is:</p>
<blockquote>
<p><strong>SAX</strong> (Simple API for XML) <strong>is an event-driven online algorithm for parsing XML documents</strong>, with an API developed by the XML-DEV mailing list.<a href=""https://en.wikipedia.org/wiki/Simple_API_for_XML"" rel=""nofollow noreferrer"">1</a> SAX provides a mechanism for reading data from an XML document that is an alternative to that provided by the Document Object Model (DOM). Where the DOM operates on the document as a whole—building the full abstract syntax tree of an XML document for convenience of the user—SAX parsers operate on each piece of the XML document sequentially, issuing parsing events while making a single pass[clarification needed] through the input stream.</p>
</blockquote>
",,2022-07-21 09:47:44
73100068,2,73099275,,1,,16897000.0,,"<p><a href=""https://stackoverflow.com/questions/8386832/android-checkbox-listener"">Android: checkbox listener</a>
First you need to add the checkBox to your ViewHolder</p>
<p>Then you apply a checkbox listener specified in the link above.
when isChecked is true, then you add the sum of its calorie to an integer, if not you remove it:</p>
<pre><code>var calorieSum : Int = 0
override fun onBindViewHolder(holder: ViewHolder, position: Int) {
val food = userList[position].foodItems.first()!!
    holder.numeLista.text= food.foodName
    holder.caloriiLista.text=food.calories.toString()

    holder.checkBox.setOnCheckedChangeListener(object : CompoundButton.OnCheckedChangeListener {

       override fun onCheckedChanged(buttonView : CompoundButton, isChecked : Boolean) {
  if (isChecked){
            calorieSum += food.calories
        }else{
            calorieSum -= food.calories
       }
     }
 });    

}
</code></pre>
",,2022-07-24 16:16:17
73128939,2,73128726,,0,,180719.0,,"<p>The easiest is probably the following.</p>
<p>Create a <code>LinkedHashMap</code> filled with the elements of the list and their mapping.</p>
<pre><code>var newMap = list.stream()
  .collect(toMap(x -&gt; x, map::get, (k, v) -&gt; v, LinkedHashMap::new));
</code></pre>
",,2022-07-26 19:43:20
73144845,2,73144825,,4,,768644.0,,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",,2022-07-27 21:30:34
73149418,2,73142587,,1,,8990644.0,,"<p>I assume that this custom layer operates on a batch having varied number of tuples per sample. For example, an input batch may be</p>
<pre><code>[[(1, 0, 0), (0, 0, 1), (1, 1, 2)],
 [(1, 0, 0), (1, 1, 2)]]
</code></pre>
<p>and the desired output tensors would be</p>
<pre><code>[[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0],
 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]]
</code></pre>
<p>Since the samples can be of uneven sizes, the batch needs to be converted to <code>tf.RaggedTensor</code> (instead of normal <code>Tensor</code>) before being fed to the layer. However, the following solution works with both <code>tf.Tensor</code> and <code>tf.RaggedTensor</code> as input.</p>
<pre><code>class FillOneLayer(tf.keras.layers.Layer):
    def __init__(self, shape, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.shape = shape
    
    def call(self, inputs, training=None):
        num_samples = inputs.nrows() if isinstance(inputs, tf.RaggedTensor) else tf.shape(inputs)[0]
        num_samples = tf.cast(num_samples, tf.int32)
        ret = tf.TensorArray(tf.float32, size=num_samples, dynamic_size=False)
        for i in range(num_samples):
            sample = inputs[i]
            sample = sample.to_tensor() if isinstance(sample, tf.RaggedTensor) else sample
            updates_shape = tf.shape(sample)[:-1]
            tmp = tf.zeros(self.shape)
            tmp = tf.tensor_scatter_nd_update(tmp, sample, tf.ones(updates_shape))
            ret = ret.write(i, tf.reshape(tmp, (-1,)))

        return ret.stack()
</code></pre>
<p>Output for normal input tensor</p>
<pre><code>&gt;&gt;&gt; a = tf.constant([[(1, 0, 0), (0, 0, 1), (1, 1, 2)],
                     [(1, 0, 0), (0, 0, 1), (1, 0, 2)]])
&gt;&gt;&gt; FillOneLayer((2,2,3))(a)

&lt;tf.Tensor: shape=(2, 12), dtype=float32, numpy=
array([[0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       [0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0.]], dtype=float32)&gt;
</code></pre>
<p>Output for ragged tensor</p>
<pre><code>&gt;&gt;&gt; a = tf.ragged.constant([[(1, 0, 0), (0, 0, 1), (1, 1, 2)], 
                            [(1, 0, 0), (0, 0, 1)]])
&gt;&gt;&gt; FillOneLayer((2,2,3))(a)

&lt;tf.Tensor: shape=(2, 12), dtype=float32, numpy=
array([[0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1.],
       [0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.]], dtype=float32)&gt;
</code></pre>
<p>The solution also works when you decorate <code>call()</code> with <code>tf.function</code>, which is usually what happens when you call <code>fit</code> on a model whom this layer is a member of. In that case, to avoid graph retracing, you should ensure that all batches are of the same type, i.e., either all <code>RaggedTensor</code> or all <code>Tensor</code>.</p>
",,2022-07-28 08:15:55
73164930,2,73154412,,2,,6316044.0,,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",,2022-07-29 10:02:25
73195935,2,73195743,,-1,,7949704.0,,"<p>I am tring the next</p>
<ol>
<li><p>Install SDK man <a href=""https://sdkman.io/"" rel=""nofollow noreferrer"">https://sdkman.io/</a></p>
</li>
<li><p>In the terminal, I installed the next version 8.332.08.1-amzn</p>
</li>
</ol>
<blockquote>
<p>sdk install java 8.332.08.1-amzn</p>
</blockquote>
<ol start=""3"">
<li>Executed the next command when you will finish the step 2.</li>
</ol>
<blockquote>
<p>sdk use java 8.332.08.1-amzn</p>
</blockquote>
<ol start=""4"">
<li>Execut mvn test</li>
</ol>
",,2022-08-01 15:16:26
73214423,2,73210869,,0,,9926179.0,,"<p>Either you can add the certificates require to validate the server identity in the default java truststore i.e <code>cacerts</code> or you can set the application environment to use different truststore as mentioned below.</p>
<pre><code>@Configuration
public class TrustStoreConfig {

    @Value(&quot;${trust-store}&quot;)
    private Resource trustStore;

    @Value(&quot;${trust-store-password}&quot;)
    private String trustStorePassword;

    @PostConstruct
    public void init() throws IOException {
        System.setProperty(&quot;javax.net.ssl.trustStore&quot;, trustStore.getFile().getPath());
        System.setProperty(&quot;javax.net.ssl.trustStorePassword&quot;, trustStorePassword);
    }

}
</code></pre>
<p>application.properties</p>
<pre><code>trust-store=classpath:certificates.p12  
trust-store-password=password
</code></pre>
",,2022-08-02 22:27:19
73216441,2,73197098,,0,,15776106.0,,"<p><strong>Try this:</strong></p>
<p>After adapter initialization:</p>
<pre><code>adapter.setHasStableIds(true);
</code></pre>
<p>In adapter class:</p>
<pre><code> @Override
    public long getItemId(int position) {
        return itemList.get(position).hashCode();
    }
</code></pre>
",,2022-08-03 04:52:18
73251536,2,73217835,,1,,412446.0,,"<p>I don't know how you are composing your application, but I would recommend you to use a build tool like Maven or Gradle that manages dependencies for you. You are clearly lacking the proper JPA API artifact. Depending on your Hibernate version, it might be JPA API 2.2: <a href=""https://search.maven.org/artifact/javax.persistence/javax.persistence-api/2.2/jar"" rel=""nofollow noreferrer"">https://search.maven.org/artifact/javax.persistence/javax.persistence-api/2.2/jar</a></p>
",,2022-08-05 14:45:08
73255412,2,73250020,,1,,19543022.0,,"<p>When the mouse is just pressed on one of the left images, create a temporary variable to store the mouse position and then once the mouse is just let go of on another image, draw a line using ShapeRenderer like this:</p>
<pre><code>sr.line(tempMousePosOnClick, tempMousePosOnLetGo);
</code></pre>
<p>Both variables in the function are <code>Vector2</code>s btw.
Also, there is no default function for checking to see if the mouse was let go of but using <code>InputProcessor</code>, you can code it yourself (I already have done it for one of my projects so here it is:</p>
<pre><code>package com.physicsSimApplicationEisa.physicsSimulator2d;

/**
 * InputProcessor to process more complicated input than Gdx.input.XXX can
 */
public class InputProcessor implements com.badlogic.gdx.InputProcessor {
    private static final boolean[] justPressedButtons = new boolean[5];
    private static final boolean[] justLetGoButtons = new boolean[5];
    private static final boolean[] justPressedKeys = new boolean[255];
    private static final boolean[] justLetGoKeys = new boolean[255];

    private static String keyValue;

    private static Integer keycodeOfKeyDown;
    private static Integer keycodeOfKeyUp = -1;

    private static boolean isKeyUp = false;
    private static boolean isKeyDown = false;

    private static Integer keycodeOfButtonDown;
    private static Integer keycodeOfButtonUp = -1;

    private static boolean isButtonUp = false;
    private static boolean isButtonDown = false;

    private static boolean isKeyJustDown = false;
    private static boolean justTouched;
    private static boolean justLetGo;
    private static boolean justPressed;
    private static boolean justUp;

    /**
     * @return String: the value which was typed i.e. for the key Input.Keys.A, it would be 'a'
     */
    public static String getKeyTyped() {
        return keyValue;
    }

    /**
     * @return int: the keycode for the key that was pressed.
     */
    public static int getKeyPressed() {
        return keycodeOfKeyDown;
    }

    /**
     * @return int: the keycode for the key that was most recently pressed but is not anymore.
     */
    public static int getKeyLetGo() {
        return keycodeOfKeyUp;
    }

    /**
     * @return int: the keycode for the button that was pressed.
     */
    public static int getButtonPressed() {
        return keycodeOfButtonDown;
    }

    /**
     * @return int: the keycode for the button that was most recently pressed but is not anymore.
     */
    public static int getButtonLetGo() {
        return keycodeOfButtonUp;
    }

    /**
     * @return boolean: whether any key is pressed.
     */
    public static boolean isKeyDown() {
        return isKeyDown;
    }

    /**
     * @return boolean: whether any button is pressed.
     */
    public static boolean isButtonDown() {
        return isButtonDown;
    }

    /**
     * @return boolean: whether any key is not up (must have been pressed to be able to be up)
     */
    public static boolean isKeyUp() {
        return isKeyUp;
    }

    /**
     * @return boolean: whether any button is not up (must have been pressed to be able to be up)
     */
    public static boolean isButtonUp() {
        return isButtonUp;
    }

    /**
     * @return boolean: whether a specific key is pressed.
     */
    public static boolean isKeyDown(int keycode) {
        return isKeyDown &amp;&amp; getKeyPressed() == keycode;
    }

    /**
     * @return boolean: whether a specific button is pressed.
     */
    public static boolean isButtonDown(int button) {
        return isButtonDown &amp;&amp; getButtonPressed() == button;
    }

    /**
     * @return boolean: whether a specific key is not up (must have been pressed to be able to be up)
     */
    public static boolean isKeyUp(int keycode) {
        return isKeyUp &amp;&amp; getKeyLetGo() == keycode;
    }

    /**
     * @return boolean: whether a specific button is not up (must have been pressed to be able to be up)
     */
    public static boolean isButtonUp(int button) {
        return isButtonUp &amp;&amp; getButtonLetGo() == button;
    }

    /**
     * @return boolean: whether any key is just pressed.
     */
    public static boolean isKeyJustDown() {
        for(boolean b : justPressedKeys) {
            if(b) {
                return true;
            }
        }
        return false;
    }

    /**
     * @return boolean: whether any button is just pressed.
     */
    public static boolean isButtonJustDown() {
        for(boolean b : justPressedButtons) {
            if(b) {
                return true;
            }
        }
        return false;
    }

    /**
     * @return boolean: whether any key is just up (must have been pressed to be able to be up)
     */
    public static boolean isKeyJustUp() {
        for(boolean b : justLetGoKeys) {
            if(b) {
                return true;
            }
        }
        return false;
    }

    /**
     * @return boolean: whether any button is just up (must have been pressed to be able to be up)
     */
    public static boolean isButtonJustUp() {
        for(boolean b : justLetGoButtons) {
            if(b) {
                return true;
            }
        }
        return false;
    }

    /**
     * @return boolean: whether a specific key is just pressed.
     */
    public static boolean isKeyJustDown(int keycode) {
        return justPressedKeys[keycode];
    }

    /**
     * @return boolean: whether a specific button is just pressed.
     */
    public static boolean isButtonJustDown(int button) {
        return justPressedButtons[button];
    }

    /**
     * @return boolean: whether a specific key is just up (must have been pressed to be able to be up)
     */
    public static boolean isKeyJustUp(int keycode) {
        return justLetGoKeys[keycode];
    }

    /**
     * @return boolean: whether a specific button is just up (must have been pressed to be able to be up)
     */
    public static boolean isButtonJustUp(int button) {
        return justLetGoButtons[button];
    }

    public static void update() {
        if(justTouched) {
            justTouched = false;
            for(int i = 0; i &lt; justPressedButtons.length; i++) {
                justPressedButtons[i] = false;
            }
        }

        if(justLetGo) {
            justLetGo = false;
            for(int i = 0; i &lt; justLetGoButtons.length; i++) {
                justLetGoButtons[i] = false;
            }
        }

        if(justPressed) {
            justPressed = false;
            for(int i = 0; i &lt; justPressedKeys.length; i++) {
                justPressedKeys[i] = false;
            }
        }

        if(justUp) {
            justUp = false;
            for(int i = 0; i &lt; justLetGoKeys.length; i++) {
                justLetGoKeys[i] = false;
            }
        }
    }

    /**
     * Used to get the keycode of the key pressed without knowing which key it was.
     *
     * @param keycode int: the keycode of the key that was pressed.
     */
    @Override
    public boolean keyDown(int keycode) {
        isKeyDown = true;
        isKeyUp = false;

        justPressedKeys[keycode] = true;
        justLetGoKeys[keycode] = false;
        justPressed = true;
        justUp = false;

        keycodeOfKeyDown = keycode;
        keycodeOfKeyUp = null;
        return false;
    }

    /**
     * Used to get the keycode of the key let go without knowing which key it was.
     * Also sets the key value to &quot;&quot; to avoid the key value being the same as a key that was pressed
     * but is not anymore.
     *
     * @param keycode int: the keycode of the key that was let go
     */
    @Override
    public boolean keyUp(int keycode) {
        isKeyUp = true;
        isKeyDown = false;
        keyValue = &quot;&quot;;

        justPressedKeys[keycode] = false;
        justLetGoKeys[keycode] = true;
        justPressed = false;
        justUp = true;

        keycodeOfKeyUp = keycode;
        keycodeOfKeyDown = null;
        return false;
    }

    /**
     * Sets the keyValue to the key that was typed without knowing which key it was.
     *
     * @param character char: the key that was typed
     */
    @Override
    public boolean keyTyped(char character) {
        isKeyDown = true;
        if(!isKeyJustDown) {
            isKeyJustDown = true;
        }
        isKeyUp = false;
        keyValue = &quot;&quot; + character;
        return false;
    }

    @Override
    public boolean touchDown(int screenX, int screenY, int pointer, int button) {
        isButtonDown = true;
        isButtonUp = false;

        justPressedButtons[button] = true;
        justLetGoButtons[button] = false;
        justTouched = true;
        justLetGo = false;

        keycodeOfButtonDown = button;
        keycodeOfButtonUp = null;
        return false;
    }

    @Override
    public boolean touchUp(int screenX, int screenY, int pointer, int button) {
        isButtonUp = true;
        isButtonDown = false;

        justPressedButtons[button] = false;
        justLetGoButtons[button] = true;
        justTouched = false;
        justLetGo = true;

        keycodeOfButtonUp = button;
        keycodeOfButtonDown = null;
        return false;
    }

    @Override
    public boolean touchDragged(int screenX, int screenY, int pointer) {
        return false;
    }

    @Override
    public boolean mouseMoved(int screenX, int screenY) {
        return false;
    }

    @Override
    public boolean scrolled(float amountX, float amountY) {
        return false;
    }

}

</code></pre>
<h2>SUMARRY</h2>
<p>Basically here is the code you would need to write using the InputProcessor class (of course this code isn't fully valid, you'll have to implement it into your application yourself):
(Eventually you might have to .unproject() the mouse position to get it to be correctly but assuming you're not using a moving camera etc. that won't be a hassle yet)</p>
<pre><code>
private Vector2 temp, temp2;
private boolean isHoveredOnLetterImage, isHoveredOnResultImage; // need to be updated by checking if the image contain the mouse position vector

@Override
public void render(float delta) {
    if(InputProcessor.isButtonJustDown(Input.Buttons.RIGHT) &amp;&amp; isHoveredOnLetterImage) { // only if it was just pressed and it was hovering on the image
        temp = new Vector2(Gdx.input.getX(), Gdx.input.getY());
    }
    if(InputProcessor.isButtonJustUp(Input.Buttons.RIGHT) &amp;&amp; isHoveredOnResultImage) {
        temp2 = new Vector2(Gdx.input.getX(), Gdx.input.getY());
    }
    sr.line(temp, temp2);
}

</code></pre>
",,2022-08-05 21:23:43
73269354,2,60727279,,0,,11295630.0,,"<p>Most answers here (including the accepted one) overcomplicate the task of combining the training log data. Note this method is not effective when dealing with many metrics. If this is the case, it is better to use other answers to combine history objects. Tensorflow's recommended way to merge multiple training log data (<a href=""https://www.tensorflow.org/tutorials/images/transfer_learning#continue_training_the_model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning#continue_training_the_model</a>) is as follows:</p>
<ol>
<li>Extract the initial training log data points. Here I include accuracy and validation accuracy.</li>
</ol>
<pre><code>acc = history.history['accuracy']
val_acc = history.history['val_accuracy']

loss = history.history['loss']
val_loss = history.history['val_loss']
</code></pre>
<ol start=""2"">
<li>Extract training log data points from successive training runs. Then append them to the prior training metrics.</li>
</ol>
<pre><code>acc += history2.history['accuracy']
val_acc += history2.history['val_accuracy']

loss += history2.history['loss']
val_loss += history2.history['val_loss']
</code></pre>
<ol start=""3"">
<li>Graph results</li>
</ol>
<pre><code>plt.figure(figsize=(8, 8))
plt.subplot(2, 1, 1)
plt.plot(acc, label='Training Accuracy')
plt.plot(val_acc, label='Validation Accuracy')
plt.ylim([0.8, 1])
plt.plot([initial_epochs-1,initial_epochs-1],
          plt.ylim(), label='Start Fine Tuning')
plt.legend(loc='lower right')
plt.title('Training and Validation Accuracy')

plt.subplot(2, 1, 2)
plt.plot(loss, label='Training Loss')
plt.plot(val_loss, label='Validation Loss')
plt.ylim([0, 1.0])
plt.plot([initial_epochs-1,initial_epochs-1],
         plt.ylim(), label='Start Fine Tuning')
plt.legend(loc='upper right')
plt.title('Training and Validation Loss')
plt.xlabel('epoch')
plt.show()
</code></pre>
<p><a href=""https://i.sstatic.net/UX9PM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/UX9PM.png"" alt=""combined"" /></a></p>
",,2022-08-07 16:54:08
73276062,2,73274281,,3,,839128.0,,"<p>There's no such thing as a &quot;secure&quot; 32 bit hash. Any 32 bit hash will require at most ~2^32 units of work to find a message that generates a given target hash, and ~2^16 units of work to find 2 messages with the same hash. In fact depending on access patterns it's likely that you will accidentally encounter multiple messages with the same hash. You need to figure out what the consequences of those attacks would be, and if you can't tolerate them then you need a larger hash size or a different design.</p>
<p>If you don't need any security guarantees then md5 truncated to 32 bits will likely meet your needs, but you may find one of the 32-bit hash algorithms in <a href=""https://guava.dev/releases/snapshot/api/docs/com/google/common/hash/Hashing.html"" rel=""nofollow noreferrer"">Guava Hashing</a> to be simpler to use and better optimised for your use case.</p>
",,2022-08-08 09:58:47
73288841,2,73288638,,0,,17752564.0,,"<p>Your Adapter created when your list is empty, you can change your code like this:</p>
<pre><code>binding.recyclerViewUser.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false));
binding.recyclerViewUser.setOverScrollMode(View.OVER_SCROLL_NEVER);

Call&lt;List&lt;UsersModel&gt;&gt; getUersData = RetrofitClient.getInstance().getApi().getUsersData();
getUersData.enqueue(new Callback&lt;&gt;() {
  @Override
  public void onResponse(@NonNull Call&lt;List&lt;UsersModel&gt;&gt; call, @NonNull Response&lt;List&lt;UsersModel&gt;&gt; response) {
    usersList = response.body();
    usersAdapter = new UsersAdapter(mContext, usersList, 4);
    binding.recyclerViewUser.setAdapter(usersAdapter);
    usersAdapter.setUsersList(usersList);

    Log.d(&quot;Retrofit success&quot;, &quot;Yeah!&quot;);

    long requestTime = response.raw().sentRequestAtMillis();
    long responseTime = response.raw().receivedResponseAtMillis();
    long apiTime =  responseTime - requestTime;

    Log.d(&quot;Retrofit time&quot;, apiTime + &quot;ms&quot;);
  }

  @Override
  public void onFailure(@NonNull Call&lt;List&lt;UsersModel&gt;&gt; call, @NonNull Throwable t) {
    Log.d(&quot;Retrofit error&quot;, t.getMessage());
  }
});
</code></pre>
<p>Suggest:
you don't need put your list in constructor of Adapter, <em>setUserList</em> method did it for you</p>
",,2022-08-09 08:37:41
73296630,2,73277577,,0,,357033.0,,"<p>Few pointers:</p>
<p>(1) Normally, you don't want to save the passwords in the DB.</p>
<p>You want to save their only a hashcode produced from the password.
For example every time you get the password you convert it to sha256 or something like that and then you work with that 'sha256 password'.
Java has digest api and can do the sha encoding for you.
Example: <a href=""https://www.geeksforgeeks.org/sha-256-hash-in-java/"" rel=""nofollow noreferrer"">https://www.geeksforgeeks.org/sha-256-hash-in-java/</a></p>
<p>(2) You don't want to have code like that:</p>
<pre><code>rsT = stmt.executeQuery(&quot;select count from users1 where pword='&quot; + spword + &quot;' and uname='&quot;+suname+&quot;'&quot;);
</code></pre>
<p>The code above is very susceptive to injection attacks. You want to leverage the java prepared statements and inject the parameters into it and make your query look like that:</p>
<pre><code> &quot;select count from users1 where pword=? and uname=?&quot;
</code></pre>
<p>Example: <a href=""https://www.javatpoint.com/PreparedStatement-interface"" rel=""nofollow noreferrer"">https://www.javatpoint.com/PreparedStatement-interface</a></p>
<p>I hope all that helps you and good luck in you efforts</p>
",,2022-08-09 18:36:46
73305343,2,73295391,,0,,4754977.0,,"<p>My adapters were not set so I made below changes and got expected result.</p>
<pre><code>// RETRIEVE
retrievebtn.setOnClickListener(arg0 -&gt; {

        // TODO Auto-generated method stub
        nos.clear();
        names.clear();

        //OPEN
        db.openDB();

           //RETRIEVE
           Cursor c = db.getAllValues();

        c.moveToFirst();
        while(!c.isAfterLast())
        {
            String no = c.getString(0);
            nos.add(no);

            String name = c.getString(1);
            names.add(name);
            c.moveToNext();
        }

               //CLOSE
               c.close();
               db.close();

               //SET IT TO SPINNER
        ArrayAdapter&lt;String&gt; adapter1 = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_list_item_1, nos);
        ArrayAdapter&lt;String&gt; adapter2 = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_list_item_1, names);

        sp1.setAdapter(adapter1);
        sp2.setAdapter(adapter2);
    });
</code></pre>
",,2022-08-10 11:17:32
73341908,2,73341250,,0,,17694626.0,,"<p>I would use TreeSet to keep the keys in the NavigableMap class.  See example below:</p>
<pre><code>import java.util.*;
public class Main{
    public static void main(String[] args) {
        NavMap&lt;Integer, String&gt; map = new NavMap&lt;&gt;();
        map.put(1, &quot;one&quot;);
        map.put(2, &quot;two&quot;);
        map.put(3, &quot;three&quot;);
        map.put(4, &quot;four&quot;);
        map.put(10, &quot;ten&quot;);
        System.out.println(map.lowerKey(3));    //2
        System.out.println(map.higherKey(3));   //4
        System.out.println(map.higherEntry(3));  // 4:four
        System.out.println(map.ceilingKey(7));  //10
        System.out.println(map.floorKey(7));    //4
        System.out.println(map.floorEntry(10)); // 4:four
        
    }
}

class NavMap&lt;K extends Comparable,V extends Comparable&gt; extends LinkedHashMap&lt;K,V&gt;{
   private TreeSet&lt;K&gt; keys    = new TreeSet&lt;&gt;();
   
   public Set&lt;K&gt; keySet(){ return keys; }
   
   public K lowerKey  (K k){ return keys.lower(k);  }
   public K higherKey (K k){ return keys.higher(k); }
   public K floorKey  (K k){ return keys.floor(k);  }
   public K ceilingKey(K k){ return keys.ceiling(k);}
   
   public Map.Entry&lt;K,V&gt; lowerEntry(K k)   { return newEntry(lowerKey(k),  get(lowerKey(k)));}
   public Map.Entry&lt;K,V&gt; higherEntry(K k)  { return newEntry(higherKey(k), get(higherKey(k)));}
   public Map.Entry&lt;K,V&gt; floorEntry(K k)   { return newEntry(floorKey(k),  get(floorKey(k)));}
   public Map.Entry&lt;K,V&gt; ceilingEntry(K k) { return newEntry(ceilingKey(k),get(ceilingKey(k)));}
   private Map.Entry&lt;K,V&gt; newEntry(K k, V v) { return new AbstractMap.SimpleEntry&lt;&gt;(k,v);} 
   
   public V put(K key, V value){
      keys.add(key);
      return super.put(key, value);
   }
}
</code></pre>
<p>Output:</p>
<pre><code>2
4
4=four
10
4
10=ten
</code></pre>
",,2022-08-13 05:55:48
73345448,2,73342852,,0,,12970845.0,,"<p>The solution i found is not ideal, but it did the job-</p>
<p>I am asking the broker to create topic while creating its bean-</p>
<pre><code> this.embeddedKafkaBroker = new EmbeddedKafkaBroker(1, true, 2,&quot;demoTopic&quot;) 
      .kafkaPorts(KAFKA_PORT) 
      .zkPort(ZOOKEEPER_PORT) 
      .brokerProperties(brokerProperties); 
    return embeddedKafkaBroker;
</code></pre>
<p>Now both consumer receiving the record.</p>
",,2022-08-13 15:17:12
73384141,2,73339236,,1,,10357086.0,,"<p>Are you using any primary constructor of the adapter like this?</p>
<pre><code>myadapter = new Invite_Contributors_Adapter();
</code></pre>
<p>If yes, then that's where the problem is. If you're initializing object with two different constructors then you'll get the value of the object which you initialized later.</p>
<p>Make sure to check the adapter object &amp; then proceed.</p>
",,2022-08-17 07:03:10
73384382,2,73377467,,0,,415448.0,,"<p>Sadly, I know of no XML parser where you can say &quot;start parsing XML here and stop when you get to the end of the document&quot;. All parsers that I know of will report an error if there is anything beyond the end of the document, which means that if XML is nested inside some larger text, you have the difficult challenge of locating the end of the document before invoking the parser.</p>
<p>However, if you use a SAX parser, then you can count nested start and end tags, and abort the parse when the final end tag is notified. If you implement your application as a SAX filter, then it can pass everything it's given to the JAXB process, suppressing the error that would otherwise arise because of the unwanted content that follows the XML.</p>
",,2022-08-17 07:26:17
73398356,2,73383123,,0,,11076053.0,,"<p>Ideally you should use a library like SAX parser to Deserialize an input stream like XML.</p>
<p>But if you want to do this using no libraries maybe the method below can help:</p>
<pre><code>private String getCsrfValue(String xml){
    String value = &quot;&quot;;

    if(xml!= null &amp;&amp; xml.length() &gt; 0) {
        int csfrIndex = xml.indexOf(&quot;csrf&quot;);
        if (csfrIndex != -1) {
            String subXml = xml.substring(csfrIndex);

            int valueIndex = subXml.indexOf(&quot;value&quot;);

            if (valueIndex != -1) {
                int firstCommaIndex = -1;
                int secondCommaIndex = -1;
                boolean firstInvCommaFound = false;

                for (int i = valueIndex; i &lt; subXml.length(); i++) {
                    if (subXml.charAt(i) == '\&quot;') {
                        if (!firstInvCommaFound) {
                            firstCommaIndex = i;
                            firstInvCommaFound = true;
                        } else {
                            secondCommaIndex = i;
                            break;
                        }
                    }
                }

                if (firstCommaIndex != -1 &amp;&amp; secondCommaIndex != -1 &amp;&amp; secondCommaIndex &lt; xml.length()) {
                    value = subXml.substring(firstCommaIndex + 1, secondCommaIndex);
                }
            }
        }
    }
    return value;
}
</code></pre>
",,2022-08-18 06:28:38
73407748,2,73407349,,0,,19758437.0,,"<p>Create the third entity for the third table, create the student object and the subject object . put it in the third entity object, create the third repository and save that, all three tables will be updated together. Just make sure your relationships are correctly mentioned and you are done.</p>
",,2022-08-18 18:19:18
73411361,2,73382777,,0,,242042.0,,"<p>It's a bit awkward but it seems to do the first part of what I need to do which is get the reflection data</p>
<pre class=""lang-java prettyprint-override""><code>    managedChannel = ManagedChannelBuilder.forAddress(&quot;localhost&quot;, 50000).usePlaintext().build();
    final var serverReflectionBlockingStub = ServerReflectionGrpc.newStub(managedChannel);

    final var serviceListLatch = new CountDownLatch(1);
    final Set&lt;String&gt; serviceNames = new HashSet&lt;&gt;();
    final var errorRef = new AtomicReference&lt;Throwable&gt;();
    final var serviceListObserver =
        serverReflectionBlockingStub.serverReflectionInfo(
            new StreamObserver&lt;&gt;() {
              @Override
              public void onNext(ServerReflectionResponse value) {

                value.getListServicesResponse().getServiceList().stream()
                    .map(ServiceResponse::getName)
                    .forEach(serviceNames::add);
              }

              @Override
              public void onError(Throwable t) {

                errorRef.set(t);
                serviceListLatch.countDown();
              }

              @Override
              public void onCompleted() {

                serviceListLatch.countDown();
              }
            });
    serviceListObserver.onNext(ServerReflectionRequest.newBuilder().setListServices(&quot;*&quot;).build());
    serviceListObserver.onCompleted();
    serviceListLatch.await();
    if (errorRef.get() != null) {
      throw new IllegalStateException(errorRef.get());
    }

    final var serviceFileLatch = new CountDownLatch(1);
    final var serviceFileProtoObserver =
        serverReflectionBlockingStub.serverReflectionInfo(
            new StreamObserver&lt;&gt;() {
              @Override
              public void onNext(ServerReflectionResponse value) {

                try {
                  var fileDescriptorProto =
                      DescriptorProtos.FileDescriptorProto.parseFrom(
                          value.getFileDescriptorResponse().getFileDescriptorProto(0));
                  for (var serviceDescriptorProto : fileDescriptorProto.getServiceList()) {
                    for (var methodDescriptorProto : serviceDescriptorProto.getMethodList()) {


                      // it is at this point I have the methods already
   
                      var methodDescriptor =
                          methodDescriptorFromProto(
                              fileDescriptorProto, serviceDescriptorProto, methodDescriptorProto);
                      methods.put(
                          new GrpcServiceMethod(
                              serviceDescriptorProto.getName(), methodDescriptorProto.getName()),
                          methodDescriptor);
                    }
                  }

                } catch (Exception e) {
                  errorRef.set(e);
                  serviceFileLatch.countDown();
                }
              }

              @Override
              public void onError(Throwable t) {

                errorRef.set(t);
                serviceFileLatch.countDown();
              }

              @Override
              public void onCompleted() {

                serviceFileLatch.countDown();
              }
            });
    serviceNames.stream()
        .map(name -&gt; ServerReflectionRequest.newBuilder().setFileContainingSymbol(name).build())
        .forEach(serviceFileProtoObserver::onNext);
    serviceFileProtoObserver.onCompleted();
    serviceFileLatch.await();
    System.out.println(methods);
</code></pre>
<p>The follow up question would be given that I have this info, how do I make the call building from JSON input that is to be parsed to a format used by the GRPC server?</p>
",,2022-08-19 02:45:48
73418272,2,73380135,,1,,721855.0,,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",,2022-08-19 14:24:39
73430880,2,73429866,,2,,1552534.0,,"<p>If you use a <code>TreeMap</code> where the entries are sorted by keys, you can return the first entry that has a value of <code>0</code>. Then simply get the <code>key</code> for that entry.</p>
<pre><code>SortedMap&lt;Integer, Integer&gt; map =
        new TreeMap&lt;&gt;(Map.of(2, 1, 3, 1, 4, 0, 8, 0));

Integer key =
        map.entrySet().stream().filter(e -&gt; e.getValue() == 0)
                .findFirst().map(Entry::getKey).orElse(null);
System.out.println(key);
</code></pre>
<p>prints</p>
<pre><code>4
</code></pre>
<p>Note:  If all that is required is a single lookup, then simply iterating over a regular <code>HashMap</code> would be more efficient.  The advantage of a <code>TreeMap</code> is that it lends itself to get the key for subsequent retrievals without repeated iterations.</p>
",,2022-08-21 00:07:54
73480776,2,73480631,,4,,17949945.0,,"<blockquote>
<p>I created a TreeMap with products, and i want to count the number of times they repeat themselves</p>
</blockquote>
<p>Probably a different type of <code>Map</code> with <em>keys</em> representing <em>items</em> and <em>values</em> representing the corresponding <em>count</em> would be more handy. Something like:</p>
<pre><code>NavigableMap&lt;String, Integer&gt; countByItem
</code></pre>
<p><em><strong>Note:</strong></em> in order to access methods of the <code>TreeMap</code> like <code>ceilingKey()</code>, <code>floorKey()</code>, <code>higherEntry()</code>, <code>lowerEntry()</code>, etc. which are not defined in the <code>Map</code> interface you need to use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/NavigableMap.html"" rel=""nofollow noreferrer""><code>NavigableMap</code></a> as a type.</p>
<p>And it might make sense to make the <em>item</em> to be a <em>custom object</em>, instead of being a <code>String</code>. That would guard you from making typo, and it provides a possibility to gives useful behavior to <code>Item</code></p>
<pre><code>public class Item {
    private int id;
    private String name;
    
    // constructor, getters, equals/hashCode, ect.
}
</code></pre>
<p>That's how map of items can be updated using Java 8 method <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Map.html#merge(K,V,java.util.function.BiFunction)"" rel=""nofollow noreferrer""><code>merge()</code></a>, which expects a <em>key</em>, a <em>value</em> and a <em>function</em> responsible for merging the <em>old value</em> and the <em>new one</em>:</p>
<pre><code>NavigableMap&lt;Item, Integer&gt; countByItem = new TreeMap&lt;&gt;(Comparator.comparingInt(Item::getId));
        
countByItem.merge(new Item(1, &quot;sausage&quot;),1, Integer::sum);
countByItem.merge(new Item(1, &quot;sausage&quot;),1, Integer::sum);
countByItem.merge(new Item(2, &quot;soup&quot;),1, Integer::sum);
</code></pre>
<p>If you don't feel very comfortable with Java 8 functions, instead of <code>merge()</code> you can use combination of methods <code>put()</code> &amp; <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Map.html#getOrDefault(java.lang.Object,V)"" rel=""nofollow noreferrer""><code>getOrDefault()</code></a>:</p>
<pre><code>Item sausage = new Item(1, &quot;sausage&quot;);

countByItem.put(sausage, countByItem.getOrDefault(sausage, 0) + 1);
</code></pre>
",,2022-08-25 00:47:30
73629075,2,69295934,,0,,1699075.0,,"<p>Unfortunately, <code>tf.RaggedTensor</code>s are a bit flaky.</p>
<p><strong>tldr</strong>; Operations between <code>tf.RaggedTensor</code> and <code>tf.Tensor</code> do not always as expected. Sometimes converting <code>tf.Tensor</code> to a <code>tf.RaggedTensor</code> does the job.</p>
<p>The solution is as follows. <code>X</code> can remain as is,</p>
<pre><code>X = tf.ragged.constant([[[3, 1], [3]],
                        [[2], [3, 4]]], ragged_rank=2)
</code></pre>
<p>which has a shape (<code>X.shape</code>) of <code>[2, None, None]</code>.</p>
<h2>Solution</h2>
<p>Next we convert <code>y</code> to a <code>tf.RaggedTensor</code> as follows.</p>
<pre><code>y = tf.ragged.constant(pylist=[[[1], [2]]], ragged_rank=1)
</code></pre>
<p>which has a shape (<code>y.shape</code>) of <code>[1, None, 1]</code>. And,</p>
<p><code>X-y</code> gives,</p>
<pre><code>&lt;tf.RaggedTensor [[[2, 0], [1]], [[1], [1, 2]]]&gt;
</code></pre>
<h2>Caveat</h2>
<p>For <code>y</code> a <code>ragged_rank=2</code> will lead to the following error.</p>
<pre><code>InvalidArgumentError: Expected 'tf.Tensor(False, shape=(), dtype=bool)' to be true. Summarized data: b'Unable to broadcast: dimension size mismatch in dimension'
2
b'lengths='
1, 1, 1, 1
b'dim_size='
2, 1, 1, 2
</code></pre>
<p>which I don't fully comprehend. The best way to avoid this is by having as many dimensions fixed as possible. And this will become more complex as the dimensionality of your tensors grow. For this, you can use <code>RaggedTensor</code> constructs such as <code>from_uniform_row_length </code> (More in for <a href=""https://www.tensorflow.org/guide/ragged_tensor#uniform_inner_dimensions"" rel=""nofollow noreferrer"">here</a> and <a href=""https://www.tensorflow.org/guide/ragged_tensor#uniform_inner_dimensions"" rel=""nofollow noreferrer"">here</a>)</p>
",,2022-09-07 01:04:38
74019826,2,74018787,,0,,10798917.0,,"<p>below is a function that will plot training and validation losses and accuracy</p>
<pre><code>import seaborn as sns
sns.set_style('darkgrid')
def tr_plot(tr_data, start_epoch):
    #Plot the training and validation data
    tacc=tr_data.history['accuracy']
    tloss=tr_data.history['loss']
    vacc=tr_data.history['val_accuracy']
    vloss=tr_data.history['val_loss']
    Epoch_count=len(tacc)+ start_epoch
    Epochs=[]
    for i in range (start_epoch ,Epoch_count):
        Epochs.append(i+1)   
    index_loss=np.argmin(vloss)#  this is the epoch with the lowest validation loss
    val_lowest=vloss[index_loss]
    index_acc=np.argmax(vacc)
    acc_highest=vacc[index_acc]
    plt.style.use('fivethirtyeight')
    sc_label='best epoch= '+ str(index_loss+1 +start_epoch)
    vc_label='best epoch= '+ str(index_acc + 1+ start_epoch)
    fig,axes=plt.subplots(nrows=1, ncols=2, figsize=(25,10))
    axes[0].plot(Epochs,tloss, 'r', label='Training loss')
    axes[0].plot(Epochs,vloss,'g',label='Validation loss' )
    axes[0].scatter(index_loss+1 +start_epoch,val_lowest, s=150, c= 'blue', label=sc_label)
    axes[0].scatter(Epochs, tloss, s=100, c='red')    
    axes[0].set_title('Training and Validation Loss')
    axes[0].set_xlabel('Epochs', fontsize=18)
    axes[0].set_ylabel('Loss', fontsize=18)
    axes[0].legend()
    axes[1].plot (Epochs,tacc,'r',label= 'Training Accuracy')
    axes[1].scatter(Epochs, tacc, s=100, c='red')
    axes[1].plot (Epochs,vacc,'g',label= 'Validation Accuracy')
    axes[1].scatter(index_acc+1 +start_epoch,acc_highest, s=150, c= 'blue', label=vc_label)
    axes[1].set_title('Training and Validation Accuracy')
    axes[1].set_xlabel('Epochs', fontsize=18)
    axes[1].set_ylabel('Accuracy', fontsize=18)
    axes[1].legend()
    plt.tight_layout    
    plt.show()
    return index_loss
</code></pre>
<p>to use this first train your model using model.fit but first you need to create a training generator and a validation generator</p>
<pre><code>gen=ImageDataGenerator(rescale=1/255,rotation_range=20, width_shift_range=0.2,
                         height_shift_range=0.2, horizontal_flip=True)
train_gen=gen.flow_from_directory(r&quot;dataset path&quot;, target_size=(200,200),
                                  batch_size=32, shuffle=True, seed=123,
                                  class_mode='categorical, subset='training')
valid_gen=gen.flow_from_directory(r&quot;dataset path&quot;, target_size=(200,200),
                                  batch_size=32, shuffle=True, seed=123,
                                  class_mode='categorical, subset='validation')
</code></pre>
<p>next train your model. I assume you created a model</p>
<pre><code>epochs=10
history=model.fit(x=train_gen,  , epochs=epochs, verbose=1, 
                  validation_data=valid_gen,  shuffle=False,  initial_epoch=0)
</code></pre>
<p>then to plot the results</p>
<pre><code>loss_index=tr_plot(history,0)
</code></pre>
",,2022-10-10 19:24:02
74028248,2,74021759,,0,,14774959.0,,"<p>Before calling <code>model.fit</code> just specify the metric you want to compute during training, in this case accuracy:</p>
<pre><code>model.compile(optimizer= your_optimizer, loss= your_loss, metrics=['acc'])
</code></pre>
<p>Link to the <a href=""https://keras.io/api/models/model_training_apis/"" rel=""nofollow noreferrer"">documentation</a>.</p>
",,2022-10-11 12:34:18
74105660,2,74105031,,0,,1676589.0,,"<p>Your test set prints this: <code>&lt;TensorSliceDataset element_spec=(TensorSpec(shape=(32, 32, 3), dtype=tf.uint8, name=None), TensorSpec(shape=(10,), dtype=tf.float32, name=None))&gt;</code> It's defined incorrectly.</p>
<p>Instead of <code>.from_tensor_slices()</code>, try <code>.from_tensors()</code>. (I'm not sure exactly why the tensors are being generated like that) When I ran your code with that change, it worked. The main difference between the two are: the former generates tensors per row inside a dataset, while the latter generates a large tensor containing everything.</p>
<pre><code># Convert the data into TensorFlow Dataset objects
train_normal = tf.data.Dataset.from_tensor_slices((x_train, y_train))
test_data_set = tf.data.Dataset.from_tensors((x_test, y_test))
train_normal = (train_normal.map(data_normalize_and_resize, num_parallel_calls = AUTO).batch(batchSize).prefetch(AUTO))
</code></pre>
<p>Then your test data prints:</p>
<pre><code>test_data_set
# &lt;TensorDataset element_spec=(TensorSpec(shape=(10000, 32, 32, 3), dtype=tf.uint8, name=None), TensorSpec(shape=(10000, 10), dtype=tf.float32, name=None))&gt;
</code></pre>
<p><a href=""https://i.sstatic.net/kMdyb.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/kMdyb.png"" alt=""Training model"" /></a></p>
",,2022-10-18 04:17:35
74224422,2,74224297,,1,,18074007.0,,"<p>To match a streaming XML parser against a set of simple xpaths, you can use the following steps:</p>
<ul>
<li>Create a <code>Map&lt;String, String&gt;</code> to store the xpaths and their corresponding values. Initialize the values to <code>null</code>.</li>
<li>Create a <code>Stack&lt;String&gt;</code> to keep track of the current path of the XML elements.</li>
<li>Create a <code>SAXParser</code> and a <code>DefaultHandler</code> to parse the XML input.</li>
<li>In the <code>startElement</code> method of the handler, push the element name to the stack and append it to the current path. Then, check if the current path matches any of the xpaths in the map. If yes, set a flag to indicate that the value should be extracted.</li>
<li>In the <code>endElement</code> method of the handler, pop the element name from the stack and remove it from the current path. Then, reset the flag to indicate that the value should not be extracted.</li>
<li>In the <code>characters</code> method of the handler, check if the flag is set. If yes, append the character data to the value of the matching xpath in the map.</li>
<li>After parsing the XML input, return the map with the xpaths and their values.</li>
</ul>
<h2>Explanation</h2>
<p>A streaming XML parser, such as <code>SAXParser</code>, reads the XML input sequentially and triggers events when it encounters different parts of the document, such as start tags, end tags, text, etc. It does not build a tree structure of the document in memory, which makes it more efficient for large XML inputs.</p>
<p>An xpath is a syntax for selecting nodes from an XML document. It consists of a series of steps, separated by slashes, that describe the location of the desired node. For example, <code>/bookstore/book/title</code> selects the title element of the book element of the bookstore element.</p>
<p>A simple xpath involves only tags and attributes, no predicates. For example, <code>/bookstore/book[@lang='en']/title</code> selects the title element of the book element that has an attribute <code>lang</code> with value <code>en</code>.</p>
<p>To match a streaming XML parser against a set of simple xpaths, we need to keep track of the current path of the XML elements as we parse the input, and compare it with the xpaths in the set. If we find a match, we need to extract the value of the node and store it in a map. We also need to handle the cases where the node value spans across multiple character events, or where the node has multiple occurrences in the document.</p>
<h2>Example</h2>
<p>Suppose we have the following XML input:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;bookstore&gt;
  &lt;book lang=&quot;en&quot;&gt;
    &lt;title&gt;Harry Potter and the Philosopher's Stone&lt;/title&gt;
    &lt;author&gt;J. K. Rowling&lt;/author&gt;
    &lt;price&gt;10.99&lt;/price&gt;
  &lt;/book&gt;
  &lt;book lang=&quot;fr&quot;&gt;
    &lt;title&gt;Le Petit Prince&lt;/title&gt;
    &lt;author&gt;Antoine de Saint-Exupéry&lt;/author&gt;
    &lt;price&gt;8.50&lt;/price&gt;
  &lt;/book&gt;
&lt;/bookstore&gt;
</code></pre>
<p>And the following set of simple xpaths:</p>
<ul>
<li><code>/bookstore/book/title</code></li>
<li><code>/bookstore/book/author</code></li>
<li><code>/bookstore/book[@lang='fr']/price</code></li>
</ul>
<p>We can use the following Java code to match the streaming XML parser against the set of xpaths:</p>
<pre class=""lang-java prettyprint-override""><code>import java.io.*;
import java.util.*;
import javax.xml.parsers.*;
import org.xml.sax.*;
import org.xml.sax.helpers.*;

public class XPathMatcher {

  public static Map&lt;String, String&gt; match(InputStream xmlInput, Set&lt;String&gt; xpaths) throws Exception {
    // Create a map to store the xpaths and their values
    Map&lt;String, String&gt; map = new HashMap&lt;&gt;();
    for (String xpath : xpaths) {
      map.put(xpath, null);
    }

    // Create a stack to keep track of the current path
    Stack&lt;String&gt; stack = new Stack&lt;&gt;();

    // Create a SAXParser and a DefaultHandler to parse the XML input
    SAXParserFactory factory = SAXParserFactory.newInstance();
    SAXParser parser = factory.newSAXParser();
    DefaultHandler handler = new DefaultHandler() {

      // A flag to indicate if the value should be extracted
      boolean extract = false;

      // A variable to store the current path
      String currentPath = &quot;&quot;;

      // A variable to store the matching xpath
      String matchingXPath = &quot;&quot;;

      @Override
      public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
        // Push the element name to the stack and append it to the current path
        stack.push(qName);
        currentPath += &quot;/&quot; + qName;

        // Check if the current path matches any of the xpaths in the map
        for (String xpath : map.keySet()) {
          // If the xpath has an attribute, extract the attribute name and value
          String attrName = &quot;&quot;;
          String attrValue = &quot;&quot;;
          if (xpath.contains(&quot;[@&quot;)) {
            int start = xpath.indexOf(&quot;[@&quot;) + 2;
            int end = xpath.indexOf(&quot;=&quot;);
            attrName = xpath.substring(start, end);
            start = end + 2;
            end = xpath.indexOf(&quot;]&quot;);
            attrValue = xpath.substring(start, end - 1);
          }

          // If the xpath matches the current path, and either has no attribute or has a matching attribute, set the flag and the matching xpath
          if (xpath.startsWith(currentPath) &amp;&amp; (attrName.isEmpty() || attrValue.equals(attributes.getValue(attrName)))) {
            extract = true;
            matchingXPath = xpath;
            break;
          }
        }
      }

      @Override
      public void endElement(String uri, String localName, String qName) throws SAXException {
        // Pop the element name from the stack and remove it from the current path
        stack.pop();
        currentPath = currentPath.substring(0, currentPath.length() - qName.length() - 1);

        // Reset the flag and the matching xpath
        extract = false;
        matchingXPath = &quot;&quot;;
      }

      @Override
      public void characters(char[] ch, int start, int length) throws SAXException {
        // Check if the flag is set
        if (extract) {
          // Append the character data to the value of the matching xpath in the map
          String value = map.get(matchingXPath);
          if (value == null) {
            value = &quot;&quot;;
          }
          value += new String(ch, start, length);
          map.put(matchingXPath, value);
        }
      }
    };

    // Parse the XML input
    parser.parse(xmlInput, handler);

    // Return the map with the xpaths and their values
    return map;
  }

  public static void main(String[] args) throws Exception {
    // Create an input stream from the XML file
    InputStream xmlInput = new FileInputStream(&quot;bookstore.xml&quot;);

    // Create a set of simple xpaths
    Set&lt;String&gt; xpaths = new HashSet&lt;&gt;();
    xpaths.add(&quot;/bookstore/book/title&quot;);
    xpaths.add(&quot;/bookstore/book/author&quot;);
    xpaths.add(&quot;/bookstore/book[@lang='fr']/price&quot;);

    // Match the streaming XML parser against the set of xpaths
    Map&lt;String, String&gt; map = match(xmlInput, xpaths);

    // Print the results
    for (String xpath : map.keySet()) {
      System.out.println(xpath + &quot; = &quot; + map.get(xpath));
    }
  }
}
</code></pre>
<p>The output of the code is:</p>
<pre><code>/bookstore/book/title = Harry Potter and the Philosopher's StoneLe Petit Prince
/bookstore/book/author = J. K. RowlingAntoine de Saint-Exupéry
/bookstore/book[@lang='fr']/price = 8.50
</code></pre>
",,2022-10-27 15:16:47
74228844,2,74228555,,1,,1240763.0,,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",,2022-10-27 22:14:15
74231822,2,74231667,,2,,11144554.0,,"<p>The question is not quiet clear but you have 2 ways to interact with your adapter class</p>
<p>(this is not the right way but it works in this situation)</p>
<ol>
<li><p>just pass the instance of your dialog to the constructor of your Adapter Class
and inside onbind method use that dialog instance to dismiss it</p>
</li>
<li><p>create an interface, take it as a constructor argument in your adapter class,
call the function whenever your activity/fragment to be notified,
and then when ever you want to create an instance of your adapter class, let the class implement the interface by passing &quot;this&quot; instead of that interface to your adapter instance.</p>
</li>
</ol>
",,2022-10-28 07:15:49
74242773,2,74236305,,1,,768644.0,,"<blockquote>
<p>I have two Double value but different decimal places.</p>
</blockquote>
<p>Doubles don't store that information. In fact, they don't even store decimals. Computers are binary after all. Here's a secret:</p>
<pre><code>double d = 0.1;
</code></pre>
<p>That line, <strong>is a total lie</strong>. It does not store 0.1 in <code>d</code>. That is because it is <strong>impossible to store this number</strong>.</p>
<p>Before that makes you go: What.. the? Think about it: I divide 1 by 3 and ask you to write that down on a piece of paper. So, you start, 0.33333333.... and where do you end? See? As a human using decimal, you <strong>cannot store this number</strong> on a piece of paper in decimal format.</p>
<p>Computers don't do decimal, they do binary. They can store <code>0.5</code> perfectly. <code>0.25</code> is no problem either. But <code>0.1</code>? No, no can do. a tenth works out in decimal really nice, but in binary it doesn't (nothing does, except factors of 2, obviously). So, where in decimal you can write '1/10' on a piece of paper perfectly, but you cannot write '1/3' on a piece of paper perfectly, computers can only write X/Y where Y is a factor of 2 perfectly. 1/65536 - no problem. 1/10? Nope.</p>
<p>So why does the above compile? Because double/float math will round to the nearest representable number, and each mathematical operation is similarly rounded. Everything rounds, everywhere, at all times, silently, with no way to know how much error this rounding introduces.</p>
<p>Let's see it in action!</p>
<pre><code>double d = 0;
for (int i = 0; i &lt; 8; i++) d += 0.1;
double e = 0.8;
System.out.println(d == e); // prints... f... false? What?
System.out.println(e); // prints &quot;0.8&quot;
System.out.println(d); // prints &quot;0.7999999999999999&quot;
</code></pre>
<p>Thus, when talking about 'formatting' a double in the sense of 'I want x digits', this is <strong>completely misleading</strong>, because the thing that is in that variable has digits written out in binary and not in decimal, and is rounded to something that doesn't even make sense in decimal.</p>
<p>The simple upshot is that <strong>all doubles are slightly wrong</strong> and if you are writing systems or applications where this slight error is not acceptable (trivial example: <strong>Everything financial - you do NOT want to lose a random cent due to impossible to predict rounding errors!!</strong>), then <strong>you cannot use <code>double</code></strong>.</p>
<p>There are 2 broad solutions to this problem:</p>
<ol>
<li>Use atoms, in <code>int</code> or <code>long</code>.</li>
</ol>
<p>For example, do not store an item that costs a buck and a half as <code>double price = 1.50</code>. Store it as <code>int price = 150;</code> - in other words, find the atomary (smallest hard/impossible to divide unit) for whatever it is you are attempting to store perfectly and store <em>that</em>. Given that there is such a thing as an atomary, when asked to divide you're hosed anyway and you need to think about it, there is no one set way to do it. For example, if I am a bank and I need to levy a transaction charge of €100,- to a partnership of 3 companies that are equal partners, then what do I do? Charge each €33,34? Charge each €33,33 and eat the cent? Roll some dice, charge one partner at random €33,34, and the other two €33,33? Demand that the parties involved appoint a main account, which gets charged all of it, or if not, the €33,34? Track in each account a residual charge of 0.33333333333333333333333 cents (tossing the remainder away as a rounding error that truly nobody is ever going to care about), even though generally in financial systems, you cannot convey the notion of fractional cents?</p>
<p>There is no right or wrong answer to this question, which means, <code>a / b</code> <strong>cannot possibly work here</strong> - how could that ever know which of those 5 different things you wanted?</p>
<ol start=""2"">
<li>Use the <code>java.math.BigDecimal</code> class, which stores in decimal, and stores perfectly. But note that if you ask BigDecimal to divide 1 by 3, it throws an exception, because that is not possible, so, apply caution.</li>
</ol>
",,2022-10-29 04:11:04
74245972,2,74240175,,0,,10134209.0,,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",,2022-10-29 14:06:18
74254090,2,74253685,,0,,17949945.0,,"<p><code>TreeMap</code> maintains the order of entries based on its <em>Keys</em>, <strong>not</strong> on its <em>Values</em>. Therefore, you can't instruct it to store the entries in the way you need.</p>
<p>As a workaround, you can use a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api//java.base/java/util/LinkedHashMap.html"" rel=""nofollow noreferrer""><code>LinkedHashMap</code></a> which maintains the order of entries were added into the map.</p>
<p><em><strong>Note</strong> that if you update the map afterwards, the order might be disrupted.</em></p>
<p>That's how it can be implemented using Stream API and Collector to <code>toMap()</code></p>
<pre><code>Map&lt;Integer, FileMap&gt; fileMap = Map.of(
    0, new FileMap(&quot;abc.txt&quot;, 0),
    1, new FileMap(&quot;abd.txt&quot;, 0),
    2, new FileMap(&quot;abe.txt&quot;, 0),
    3, new FileMap(&quot;abf.txt&quot;, 0)
);
    
Map&lt;Integer, FileMap&gt; result = fileMap.entrySet().stream()
    .sorted(Map.Entry.comparingByValue())
    .collect(Collectors.toMap(
        Map.Entry::getKey,
        Map.Entry::getValue,
        (left, right) -&gt; { 
            throw new AssertionError(&quot;All Keys in the source are expected to be unique&quot;);
        },
        LinkedHashMap::new
    ));
</code></pre>
<p>The same can be accomplished using plain old imperative programming:</p>
<pre><code>Map&lt;Integer, FileMap&gt; fileMap = Map.of(
    0, new FileMap(&quot;abc.txt&quot;, 0),
    1, new FileMap(&quot;abd.txt&quot;, 0),
    2, new FileMap(&quot;abe.txt&quot;, 0),
    3, new FileMap(&quot;abf.txt&quot;, 0)
);
    
List&lt;Map.Entry&lt;Integer, FileMap&gt;&gt; sortedEntries = new ArrayList&lt;&gt;(fileMap.entrySet());
sortedEntries.sort(Map.Entry.comparingByValue());
        
Map&lt;Integer, FileMap&gt; result = new LinkedHashMap&lt;&gt;();
        
for (Map.Entry&lt;Integer, FileMap&gt; entry : sortedEntries) {
    result.put(entry.getKey(), entry.getValue());
}
</code></pre>
",,2022-10-30 14:52:14
74256626,2,74255477,,0,,20370596.0,,"<p>Add to Singer.java:</p>
<pre><code>@PrePersist
public void assignAlbums() {
 for(var album : albums) {
   album.setSinger(this);
 }
}
</code></pre>
<p>I am facing the same issue and I think that you explicitely have to set the &quot;mappedBy&quot; property value on the linked entity (Album)</p>
",,2022-10-30 20:44:06
74268308,2,74264664,,0,,5978561.0,,"<p>This looks like a good use case for an observer pattern.
Your observer would be your manager class and your observables would be your websocket clients. Any time you create a new websocket client, register your manager class instance with it using the registerObserver method. Then when you desire to forward a message from your websocket client to your manager, you can simply call the notifyObservers method to forward the request out to any registered observers. Take a look at the pattern info here:
<a href=""https://www.baeldung.com/java-observer-pattern"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-observer-pattern</a></p>
",,2022-10-31 19:34:52
74285849,2,74277201,,0,,14936001.0,,"<p>It is because you are calling <code>mousePressed</code> inside <code>draw</code>. The function <code>mousePressed</code> itself doesn't check if the mouse is actually pressed. It is just a function that is called every time the mouse is pressed. The checking part is done elsewhere in Processing.</p>
<p>Now that you are calling it in <code>draw</code>, every time you <code>draw</code>, it executes <code>mousePressed</code> function and makes everything that is supposed to be executed on press execute on hover.</p>
",,2022-11-02 07:46:43
74322681,2,74322529,,7,,803975.0,,"<p>A TreeMap is different from a HashMap because it has a specific order when iterating through the elements.  The items in it will be sorted according to their natural ordering or according to whatever comparator it was built with. If you iterate over a HashMap the order of the elements will be essentially random.  In Java TreeMap is a specific type of SortedMap.</p>
<p>Kotlin provides similar functionality when running on the JVM. <code>Map</code> has a <code>toSortedMap</code> function which returns a sorted version of itself.  The implementation actually uses a TreeMap under the hood.  This function is missing on other Kotlin platforms, possibly because there was no corresponding TreeMap implementation available on them.</p>
<p>See the documentation here: <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/to-sorted-map.html"" rel=""nofollow noreferrer"">https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/to-sorted-map.html</a></p>
",,2022-11-04 20:33:29
74333101,2,74333000,,6,,139985.0,,"<p>Fields of a class are initialized in textual order.</p>
<p>That means that the initial value of <code>variableA</code> is computed <strong>before</strong> <code>variableB</code> has been initialized.   Therefore the <code>showOUtput()</code> method is seeing ... and returning ... the default initial value for <code>variableB</code>.   The default initial value for an <code>int</code> variable is <code>0</code>.</p>
<p><sup>(This is all specified in the Java Language Specification, but I doubt that JLS references would be helpful for you ... at this stage.)</sup></p>
",,2022-11-06 03:26:04
74334273,2,74334220,,0,,4079056.0,,"<p>static and final key words can be used on a class variable to make it behave like a constant.</p>
<ol>
<li><p>The static modifier causes the variable to be available without an instance of it’s defining class being loaded</p>
</li>
<li><p>The final modifier makes the variable unchangeable</p>
</li>
</ol>
<p>For example:</p>
<pre><code>    private static final String FILE_NAME = &quot;dictionary.txt&quot;;
    private static final File DICTIONARY = new File(FILE_NAME);

    public static void main(String[] args) throws FileNotFoundException  {

        if (!DICTIONARY.isFile()) {
            System.out.println(&quot;Dictionary file cannot be opened&quot;);
            System.exit(0);
        }
        Scanner input = new Scanner(DICTIONARY);
        while (input.hasNextLine()) {
            System.out.println(input.nextLine());
        }

        getSelection();
        substringProblem();
        pointsProblem();


    }
</code></pre>
",,2022-11-06 08:23:14
74366195,2,74365236,,2,,5339978.0,,"<p>There are a number of approaches you can take here, but nullable is certainly a fair option and there are idiomatic ways to deal with <code>null</code> in Kotlin and Arrow.</p>
<p>Let's take an example, if you're already working with <code>Either</code>, or typed errors, than I personally prefer to use <em>domain specific errors</em>. Since I try to always follow DDD.</p>
<p><code>EntityNotFound</code> is often not more descriptive than <code>null</code> but <code>UserNotFound</code> or <code>ArticleNotFound</code> is much more precise about what went wrong. So if you DDD then I would recommend modelling your errors precisely like that.</p>
<pre class=""lang-kotlin prettyprint-override""><code>sealed interface UserError
data class UserNotFound(val uuid: UUID): UserError
data class UserAlreadyExists(val username: String): UserError

data class User(val uuid: UUID)

interface UserPersistence {
  suspend fun insert(user: User): Either&lt;UserAlreadyExists, UUID&gt;
  suspend fun fetch(user: UUID): Either&lt;UserNotFound, User&gt;
}
</code></pre>
<p>Alternatively you could user <code>User?</code> instead of <code>Either&lt;UserNotFound, User&gt;</code> and use <code>ensureNotNull</code> inside <code>either</code> to achieve the same behavior.</p>
<pre class=""lang-kotlin prettyprint-override""><code>interface UserPersistence {
  suspend fun insert(user: User): Either&lt;UserAlreadyExists, UUID&gt;
  suspend fun fetchOrNull(user: UUID): User?

  suspend fun fetch(uuid: UUID): Either&lt;UserNotFound, User&gt; =
    either { ensureNotNull(fetchOrNull(uuid)) { UserNotFound(uuid) }
}
</code></pre>
<p>This shows that the two can easily be converted between each-other. <code>ensureNotNull</code> also applies smart-casting on the value passed to it, similar to <code>kotlin.requireNotNull</code> of <code>if(value != null)</code> so you get all the goodies from the Kotlin language as well.</p>
<p>You can find a full example of a repository layer here, <a href=""https://github.com/nomisRev/ktor-arrow-example/blob/main/src/main/kotlin/io/github/nomisrev/repo/UserPersistence.kt"" rel=""nofollow noreferrer"">https://github.com/nomisRev/ktor-arrow-example/blob/main/src/main/kotlin/io/github/nomisrev/repo/UserPersistence.kt</a></p>
",,2022-11-08 19:29:27
74409452,2,74357954,,0,,1072208.0,,"<p>TfLiteTensor is part of the TensorFlow Lite C API project and is a C struct (not a c++ class). I'm not seeing any way to generate documentation for it explicitly, nor do I see anything on line. The code API read me is located here:</p>
<p><a href=""https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/c/README.md"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/c/README.md</a></p>
<p>the TfLiteTensor definition is here:</p>
<p><a href=""https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/c/common.h#L526"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/c/common.h#L526</a></p>
",,2022-11-12 00:25:13
74433666,2,74433504,,0,,1968.0,,"<blockquote>
<p>Do if statements have their own scope?</p>
</blockquote>
<p>No, in Java <code>if</code> statements do not by themselves create a new scope (until <a href=""https://www.baeldung.com/java-pattern-matching-instanceof"" rel=""nofollow noreferrer"">Java 14</a>, that is!). However, braced statement blocks (i.e. <code>{…}</code>) <em>do</em> create a new, nested scope.</p>
<p>However, this is unrelated with your issue, because nested scopes <em>can</em> access variables from their parent scope (otherwise most code wouldn’t work). So the following works:</p>
<pre><code>int x = 1;

{
    System.out.println(x);
}
</code></pre>
<p>If <code>{…}</code> didn’t inherit the parent scope, that code wouldn’t work.</p>
<p>As noted by Ivar in the comments, your code works because you did initialise the <code>max</code> variable to 0 outside the loop.</p>
<hr />
<p>That said, the code can be made simpler and more logical. In particular, the calculation of the average and the output should not be part of the loop but instead happen afterwards:</p>
<pre><code>Scanner inp = new Scanner(System.in);
int sum = 0;
int count = 0;
int max = 0;
int num;

do {
    sum += num;
    num = inp.nextInt();
    if (num &gt; max) {
        max = num;
    }
    ++count;
} while (num &gt;= 0);

double average = sum / (double) (count - 1);
System.out.printf(&quot;%d %.2f\n&quot;, max, average);
</code></pre>
<p>A commonly used alternative way of writing this loop is using <code>for(;;)</code> with <code>break;</code>. This variant has the alternative that we can limit the scope to <code>num</code> to the loop: it is generally desirable to make variable scope as small as possible, and to initialise a variable at the site of its declaration.</p>
<pre><code>…
for (;;) {
    int num = inp.nextInt();
    if (num &lt; 0) break;

    sum += num;
    if (num &gt; max) {
        max = num;
    }
    ++count;
}
…
</code></pre>
",,2022-11-14 15:00:07
74435180,2,74434928,,1,,5339049.0,,"<p><strong>This diagram was most likely made by a human.</strong></p>
<p>Labels like &quot;copy and crop&quot; are not typically derived from your raw model, maybe you could train a model for it ;D</p>
<p>There are many frameworks which can visualize your Tensorflow Model, Tensorflow has it's own suite <a href=""https://tensorboard.dev/"" rel=""nofollow noreferrer"">Tensorboard</a>.</p>
<p>See this <a href=""https://tensorboard.dev/experiment/EDZb7XgKSBKo6Gznh3i8hg/#graphs&amp;run=lr_1E-04%2Cconv%3D1%2Cfc%3D2"" rel=""nofollow noreferrer"">example</a>:</p>
<p><a href=""https://i.sstatic.net/yOypQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yOypQ.png"" alt=""enter image description here"" /></a></p>
<p>If you want anything else, look at <a href=""https://datascience.stackexchange.com/questions/12851/how-do-you-visualize-neural-network-architectures"">this thread over at Data Science Stack Exchange</a></p>
",,2022-11-14 16:54:32
74443678,2,74443508,,0,,19773139.0,,"<p>You can define an interface in your adapter, like below</p>
<pre><code>public interface ClickListener{
    void onClick();            
}   
</code></pre>
<p>Implement in fragment or activity that your adapter at:</p>
<pre><code>ClickListener listener = () -&gt;{
    TextView details = word_dialog.findViewById(R.id.word_edit_desc);
    details.setText(&quot;hello&quot;);
}
</code></pre>
<p>then pass interface to adapter use constructor or setter, and you can use interface in your viewHolder when bind like below:</p>
<pre><code>itemView.setOnClickListener(()-&gt;{
   if (your_list.get(getAdapterPosition()).equals(&quot;hello&quot;)) {
       interface_var_name.onClick()             
   }
});

                  
</code></pre>
",,2022-11-15 09:57:42
74452373,2,74452298,,1,,10427291.0,,"<p>Inside your LinkedList class you declare your Nodes &quot;first&quot; and &quot;last&quot; as static. This means that both LinkedLists share the same first and last. You wont be able to have a separate linked list if they remain static.</p>
",,2022-11-15 21:26:26
74465759,2,74465143,,1,,13598222.0,,"<p>Have a look at <a href=""https://docs.oracle.com/javase/tutorial/essential/concurrency/locksync.html"" rel=""nofollow noreferrer"">the Java docs</a> on locks and synchronisation. (If you're only familiar with Kotlin, Java's what it's based on and it's close enough to get the idea)</p>
<p>Basically, <em>synchronisation</em> allows you to control access to certain things, by limiting it to one thread at a time. Each object has an <em>intrinsic lock</em> (or <em>monitor</em>) which, if you make use of it, only one thread can acquire at a time. So you can use that to turn an object into a kind of access token - if another thread wants to acquire that lock, it has to wait until the first thread is done with it.</p>
<p>So you can use that to block execution of bits of code, by gating it behind these access tokens. If you use a plain <code>synchronized</code> <em>method</em> (without specifying a token), or if you use a <code>synchronized</code> <em>statement</em> with <code>this</code>, in both cases it uses the containing object's lock to control access to the code in that method/block. (This doesn't prevent threads from accessing non-synchronised code, like other methods, or the code before a synchronised block.)</p>
<hr />
<p>But this is limiting - it means that everything that accesses any synchronised code inside that object instance needs to acquire the same token. If you have multiple synchronised blocks that are really separate from each other, and could safely be run concurrently, then sharing a lock is inefficient - it's holding up other threads for no good reason.</p>
<p>But if you have a separate lock object for each, then acquiring one for task A doesn't interfere with acquiring the one for task B. By using separate locks, you can make your synchronisation more granular. You still have to be careful though - if task A actually involves calling stuff in task B, and vice versa, you can end up with a situation where both threads are blocked, waiting for the other to complete. In that case both tasks should really use a shared lock, so whatever starts a task is guaranteed to finish it.</p>
<hr />
<p>As for why this particular example (with one synchronised block) uses an explicit locking object instead of <code>this</code>, I'm not sure. One other benefit of a separate locking object is that it can be shared between different instances of a class, or even different classes, if they all do work where they could interfere with each other. Since a <code>companion object</code> is basically a single, kinda <code>static</code> object, you'd get that benefit by using it as the lock</p>
<p>And the <code>LOCK</code> object is private, so it can't be used as a lock by other classes - it's purely used internally here. It <em>could</em> be accessed by synchronised blocks in the class itself (through their instance methods) and maybe the coder thought <code>synchronized(LOCK)</code> reads better than <code>synchronized(Companion)</code>. Maybe they're planning to add other granular locks later, or maybe they're just used to explicitly creating locking objects so you're always encouraged to think about what you're locking <em>on</em>.</p>
<p>Maybe there's some other reason you might want to do it this way in Kotlin, but hopefully that gives you some ideas about why you'd create different locking objects  in the first place</p>
",,2022-11-16 18:54:04
74518957,2,74518563,,1,,14682329.0,,"<p>Yes. Just adding the root certificate to your client trust store suffice to create the HTTPs successful connection. During the handshake, the certificate is validated from bottom-up way. It means that your Intermediate certificate must be signed by the root CA, and your leaf certificate must be signed by your intermediate CA. As long as your root CA is valid and present in your client's trust store, the connection will be successful.</p>
",,2022-11-21 12:30:22
74553954,2,74536650,,1,,8951907.0,,"<p>I think I solved the issue.</p>
<p>I have a routine that programmatically downloads certificates from SSL protected servers through a socket that handshake and retrieve certificates.
Currently the certificate SSL server has some problems in returning the whole chain of certificates (including the intermediary certificates of the CAs that signed the certificate).
It is likely that they are problems related to a misconfiguration.</p>
<p>This problem can be verified with the command:
openssl s_client -showcerts -connect host:port
These are the intermediary CAs irrecoverable certs:
<a href=""https://i.sstatic.net/2W84z.png"" rel=""nofollow noreferrer"">certs</a>
<a href=""https://i.sstatic.net/ozRYz.png"" rel=""nofollow noreferrer"">certs</a></p>
<p>These are the intermediary certificates of the CAs:
<a href=""https://i.sstatic.net/lAZC6.png"" rel=""nofollow noreferrer"">Intermediate cert CAs chain</a></p>
<p>On a programmatic level, when JAVA persists the trusted certificates in the Trust-Store, it writes information related to the fact that it was not possible to recover the whole CA chain.
It is as if the certificate is self-signed for the trust-store when it is not. In fact, the certificate is not actually trusted (unless you enter it &quot;manually&quot; in the trust store).
When making an external call to an application-side https server, the client is not fully aware of the certificate.
The error was: &quot;PKIX path building failed&quot;.
It was necessary to use a custom built HTTP client to accept single certificates of which it was not possible to download the whole CA chain.
Obviously it is not a client that can accept self-signed certificates.
This client is &quot;satisfied&quot; with the single certificate but it is actually a necessary and sufficient condition to perform a secure SSL handshake.</p>
<p>In other words to make an external call with RestTemplate what you have to do is change it from:</p>
<pre><code>restTemplate = new RestTemplate();
</code></pre>
<p>to:</p>
<pre><code>restTemplate = new RestTemplate();
HttpClient httpClient = HttpClients.custom().build();
restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory(httpClient));
</code></pre>
<p>I think I have given an explanation. What do you think about it?</p>
",,2022-11-23 23:17:26
74570693,2,74570106,,1,,14263933.0,,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",,2022-11-25 09:32:17
74577477,2,74577160,,1,,9115712.0,,"<p>At least according to @broot, this is how Kotlin optimizes array types.</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th>Kotlin</th>
<th>Java</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Array&lt;Int&gt;</code></td>
<td><code>Integer[]</code></td>
</tr>
<tr>
<td><code>Array&lt;Array&lt;Int&gt;&gt;</code></td>
<td><code>Integer[][]</code></td>
</tr>
<tr>
<td><code>IntArray</code></td>
<td><code>int[]</code></td>
</tr>
<tr>
<td><code>Array&lt;IntArray&gt;</code></td>
<td><code>int[][]</code></td>
</tr>
</tbody>
</table>
</div>
<p>This would mean they're equally efficient. I currently have no official doc or source to back this claim up though.</p>
",,2022-11-25 20:08:56
74673897,2,67122356,,-1,,1625639.0,,"<p>if you only want to launch an activity from your own app you can use the technique details here: <a href=""https://developer.android.com/develop/ui/views/notifications/navigation"" rel=""nofollow noreferrer"">https://developer.android.com/develop/ui/views/notifications/navigation</a>.</p>
<p>The pending intent of the notification should look like this:</p>
<pre><code>Intent notifyIntent = new Intent(this, ResultActivity.class);
// Set the Activity to start in a new, empty task
notifyIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
// Create the PendingIntent
PendingIntent notifyPendingIntent = PendingIntent.getActivity(
    this, 0, notifyIntent,
    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
</code></pre>
",,2022-12-04 08:26:06
74686751,2,74686546,,0,,6794063.0,,"<p>Although the order of insertion is significant as that is generally the order in which OptaPlanner will iterate over the facts and entities, it should have no impact on the quality of the solution.</p>
<p>What does have impact on solution quality is your constraints. In your case, there is no constraint to tell OptaPlanner that SKU1 is preferrable to SKU2, or vice versa. How is OptaPlanner supposed to know to prefer one or the other?</p>
<p>Ask yourself that question, and turn the answer into a constraint. If that answer is capacity multiplied by price, then there should be a constraint that takes it into account. I do not see one in your problem description.</p>
<p>In the absence of such information, OptaPlanner will treat all facts as equivalent in terms of solution quality, and therefore it will pick an arbitrary one. (In this case, one that was inserted earlier.)</p>
",,2022-12-05 10:33:53
74703985,2,74651241,,0,,19906357.0,,"<p>I found this, finally, after trying every search terms imaginable, and wow there is a whole section on this. I do not have it working yet, but I can report back with code when I do. Here is the solution: <a href=""https://developer.android.com/guide/topics/media-apps/media-apps-overview"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/media-apps-overview</a></p>
<p>Seems you have to implement the media player service as a specific kind of service that registers to the notification. I am in the process of refactoring the heart of my code, which perhaps should be terrifying, but feels more like the final algorithm on a Rubix's cube... I will report back in like 10 work hours with some working code (I hope).</p>
<p>Thanks to everyone contributing on this discussion!</p>
",,2022-12-06 14:13:33
74707142,2,74707056,,1,,42962.0,,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",,2022-12-06 18:00:01
74710258,2,74705975,,2,,492773.0,,"<p>If you click on the Java link at the top of any CDK documentation page, you will get the Java documentation for that construct.</p>
<p><a href=""https://i.sstatic.net/4XJDD.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/4XJDD.png"" alt=""TypeScript CDK documentation for DatabaseInstance"" /></a></p>
<p>Here is the Java documentation for <a href=""https://docs.aws.amazon.com/cdk/api/v2/java/index.html?software/amazon/awscdk/services/rds/DatabaseInstance.html"" rel=""nofollow noreferrer"">DatabaseInstance</a>.</p>
<p>And yes, this construct will only create the instance. If you want a cluster, create multiple instances and connect them, or use <a href=""https://docs.aws.amazon.com/cdk/api/v2/java/index.html?software/amazon/awscdk/services/rds/DatabaseCluster.html"" rel=""nofollow noreferrer"">DatabaseCluster</a>.</p>
",,2022-12-06 23:41:50
74710369,2,74708153,,0,,13510562.0,,"<p>The <code>TreeMap</code> is sorted by the ordering of its keys. If you should not need a sorted map, you can replace <code>TreeMap</code> with an other class that implements <code>Map</code> (for example <a href=""https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html"" rel=""nofollow noreferrer"">HashMap</a>). If you really need a sorted map you have to define the ordering of your key objects. You can do this in two ways:</p>
<p>A) Specify a <code>Comparator</code> as paramter for the constructor</p>
<pre><code>Comparator&lt;knot&gt; comparator = ...
Map&lt;knot, Boolean&gt; connect = new TreeMap&lt;&gt;(comparator);
</code></pre>
<p>B) Implement <code>Comparable</code></p>
<pre><code>public class knot implements Comparable&lt;knot&gt; {

  ...

  public int compareTo​(knot other) {
   
    // TODO: return a negative integer, zero, or a positive integer as this 
    // object is less than, equal to, or greater than the other object.
    ...
  }
}
</code></pre>
<p>When you do not specify a <code>Comparator</code> the <code>TreeMap</code> expects that you've chosen variant B and tries to cast your key object to <code>Comparable</code>. Since you neither specify a Comparator nor implement Comparable, the <code>TreeMap</code> complains with the described error.</p>
<p>For more details, please see the following JavaDocs:</p>
<p><a href=""https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TreeMap.html"" rel=""nofollow noreferrer"">TreeMap</a>
<a href=""https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Comparator.html"" rel=""nofollow noreferrer"">Comparator</a>
<a href=""https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html"" rel=""nofollow noreferrer"">Comparable</a>
<a href=""https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html"" rel=""nofollow noreferrer"">Map</a></p>
",,2022-12-07 00:02:37
74720240,2,74719886,,0,,17903735.0,,"<p>it would help if you elaborate what type of list u are comparing,
linkedlist or arrays. based on your function, it seems that you are planning to compare a linkedlist.</p>
<ul>
<li><a href=""https://www.geeksforgeeks.org/identical-linked-lists/"" rel=""nofollow noreferrer"">linkedlist documentation</a></li>
<li><a href=""https://www.geeksforgeeks.org/java-util-arrays-equals-java-examples/"" rel=""nofollow noreferrer"">arrays documentation</a></li>
</ul>
<pre><code>   // sample comparison
   boolean areIdentical(Node a_head, Node b_head) {
        Node a = a_head, b = b_head;
        while (a != null &amp;&amp; b != null) {
            if (a.data != b.data)
                return false;
 
            /* If we reach here, then a and b are not null
               and their data is same, so move to next nodes
               in both lists */
            a = a.next;
            b = b.next;
        }
 
        // If linked lists are identical, then 'a' and 'b'
        // must be null at this point.
        return (a == null &amp;&amp; b == null);
    }
</code></pre>
",,2022-12-07 16:54:56
74745279,2,74715145,,0,,4494338.0,,"<p>I have resolved this issue, it was due to another bug in my own code.
So it had nothing to do with the SAXParser. Thanks for all the help!</p>
",,2022-12-09 15:42:24
74752873,2,74752815,,0,,1180351.0,,"<p>The model, in this case <code>DefaultMutableTreeNode</code>, doesn't do its own rendering. It's just for storing data.</p>
<p>All rendering is done through implementations of <a href=""https://docs.oracle.com/en/java/javase/19/docs/api/java.desktop/javax/swing/tree/TreeCellRenderer.html"" rel=""nofollow noreferrer"">TreeCellRenderer</a>. There is one provided implementation, <a href=""https://docs.oracle.com/en/java/javase/19/docs/api/java.desktop/javax/swing/tree/DefaultTreeCellRenderer.html"" rel=""nofollow noreferrer"">DefaultTreeCellRenderer</a>.</p>
<p>The best way to go forward is to create a sub class of <code>DefaultTreeCellRenderer</code>, and override its <code>getTreeCellRendererComponent</code> method. For example:</p>
<pre><code>public Component getTreeCellRendererComponent(JTree tree,
        Object value,
        boolean sel,
        boolean expanded,
        boolean leaf,
        int row,
        boolean hasFocus) {

    Component component = super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
    if (value == searched) {
        component.setBackground(Color.RED);
    }
    return component;
}
</code></pre>
",,2022-12-10 12:23:33
74765266,2,74765246,,-2,,9921029.0,,"<p>You have the variable not created. You have it as parameter of the constructor where you are using it to initialize other variables.</p>
<p>Solution: if you want it as a new variable, just create it.</p>
<pre><code>private int loan;
</code></pre>
",,2022-12-11 23:12:42
74771450,2,74770100,,0,,2266682.0,,"<p>In your case, your input size <code>n</code> = <code>high - low</code> which is exactly the number of iterations your <code>algorithm</code> is executing. Hence the time complexity is <code>O(n)</code></p>
",,2022-12-12 12:56:54
74775668,2,74770022,,1,,7729375.0,,"<p>Decimal division versus Integer division are very likely to have large swings in output values.
In the case of your example:</p>
<pre><code>Int division   : 9 / 5 = 1
Double division: 9 / 5 = 1.8
</code></pre>
<p>Integers never store any concept of decimals, in Kotlin the design decision was to use Integer based division following the choices of Java. <a href=""https://discuss.kotlinlang.org/t/dividing-integers/1662"" rel=""nofollow noreferrer"">Kotlin Discuss</a></p>
<p>This specifically works by outright dropping the decimal rather than applying any rounding</p>
<p>Would round up:</p>
<pre><code>Int   : 11 / 4 = 2
Double: 11 / 4 = 2.75
</code></pre>
<p>Would round down:</p>
<pre><code>Int   : 9 / 4 = 2
Double: 9 / 4 = 2.25
</code></pre>
<p>In general, division with a double will give the correct <em>enough</em> answer (Floating point math does break down in certain circumstances)</p>
",,2022-12-12 18:23:56
74835105,2,74834669,,0,,209103.0,,"<p>The UID of a user is determined by the authentication provider. It can't be set from client-side application code, as that would be a security risk.</p>
<p>If you want to determine the UID of your users, you can <a href=""https://firebase.google.com/docs/auth/android/custom-auth"" rel=""nofollow noreferrer"">implement your own provider</a>. Note that this will include writing code that runs in a trusted environment, such as a server that you control, or Cloud Functions/Cloud Run.</p>
<p>Alternatively you can implement a mapping from the UID of the user to whatever ID system you want to use in your database.</p>
",,2022-12-17 14:59:49
74839409,2,73331089,,14,,851951.0,,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",,2022-12-18 06:04:09
74864595,2,74863865,,2,,7110786.0,,"<p>For your scenario, you can use the <a href=""https://en.wikipedia.org/wiki/Template_method_pattern"" rel=""nofollow noreferrer"">Template Method pattern</a>.</p>
<blockquote>
<p>Template method defines the steps to execute an algorithm
and it can provide a default implementation that might be common for
all or some of the subclasses</p>
</blockquote>
<p><strong>An Example below</strong></p>
<pre><code>public abstract class BaseClass {
    public final void doWork() {
        preConditionCheck();
        runMigration();
        postCondition();
    }

    protected abstract void preConditionCheck();
    protected abstract void runMigration();
    protected abstract void postCondition();
}
</code></pre>
<blockquote>
<p>Usage:</p>
</blockquote>
<pre><code>public class MyClass extends BaseClass {
    protected void preConditionCheck() {
        // Set up resources or perform any necessary pre-processing
    }
    protected void runMigration() {
        // Perform the actual work here
    }
    protected void postCondition() {
        // Clean up resources or perform any necessary post-processing
    }
}
</code></pre>
",,2022-12-20 14:29:31
74887779,2,74887679,,1,,15749574.0,,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",,2022-12-22 11:19:56
74896306,2,74871771,,0,,2817100.0,,"<p>It turns out the problem was coming from Manifest Merging.</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests#merge-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests#merge-manifests</a></p>
<p>&quot;Merge multiple manifest files
Your APK or Android App Bundle file can contain just one AndroidManifest.xml file, but your Android Studio project may contain several manifest files provided by the main source set, build variants, and imported libraries. When building your app, the Gradle build merges all manifest files into a single manifest file that's packaged into your app.</p>
<p>The manifest merger tool combines all XML elements from each file by following merge heuristics and obeying merge preferences that you have defined with special XML attributes.&quot;</p>
<p>I was able to see the merged manifest by clicking the &quot;Merged Manifest&quot; tab along the bottom pane of the window when the manifest for my mobile app was open:</p>
<p><a href=""https://i.sstatic.net/fbUHF.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/fbUHF.png"" alt=""enter image description here"" /></a></p>
<p>I right clicked on the line in the manifest and selected &quot;Remove&quot;.</p>
<p>This added the following to my manifest:</p>
<pre><code>&lt;uses-feature
        android:name=&quot;android.hardware.type.watch&quot;
        tools:node=&quot;remove&quot; /&gt;
</code></pre>
<p>... and now my app is served as expected.</p>
",,2022-12-23 05:08:34
74900089,2,74899620,,1,,7160726.0,,"<p>According to <a href=""https://developer.android.com/develop/ui/views/layout/custom-views/create-view#addprop"" rel=""nofollow noreferrer"">https://developer.android.com/develop/ui/views/layout/custom-views/create-view#addprop</a> you can't programmatically set attributes, but instead you should define fields/getters/setters for your attributes.</p>
",,2022-12-23 13:17:56
74929032,2,74927498,,1,,1151144.0,,"<p>When a variable is created and used, it also exists in a cache. This cache isn't always in sync especially when you are using multiple threads.  When you mark a variable as <code>volatile</code>, you are telling the system that the cache has to be updated immediately so that anyone else using it will have the updated value.</p>
<p>I’m addition the keyword volatile is still valid in modern programming languages and is used to indicate that a variable may be modified by multiple threads or processes concurrently. This is especially important in programs that use shared memory or memory-mapped I/O.</p>
<p>When a variable is declared as volatile, the compiler and processor are instructed to treat it with a higher level of caution and to avoid certain optimizations that might interfere with the correct operation of the program. For example, the compiler might be prevented from caching the value of the variable in a register or from reordering instructions that access the variable.</p>
<p>One reason why the volatile keyword is still important today is that modern processors often use techniques such as out-of-order execution and speculative execution to improve performance. These techniques can cause the processor to execute instructions in a different order than the order in which they appear in the code, which can lead to unexpected behavior if the programmer is not careful. The volatile keyword can be used to prevent such optimizations from occurring on a particular variable, ensuring that the variable is accessed in a predictable way.</p>
<p>In summary, the volatile keyword is still relevant today because it allows programmers to control how variables are accessed and modified in multithreaded or concurrent programs, which is an important consideration when writing high-performance code that executes on modern processors.</p>
",,2022-12-27 12:04:07
74945785,2,74943596,,0,,54734.0,,"<blockquote>
<p>What is the correct way to name an endpoint for several parameters?</p>
</blockquote>
<p><a href=""https://www.ics.uci.edu/%7Efielding/pubs/dissertation/rest_arch_style.htm"" rel=""nofollow noreferrer"">REST</a> doesn't care what spelling conventions you use for your resource identifiers.  Any spelling that is consistent with the production rules of <a href=""https://tools.ietf.org/html/rfc3986#appendix-A"" rel=""nofollow noreferrer"">RFC 3986</a> is <em>fine</em>.</p>
<pre><code>/customers/{id}
/customers?status=&quot;nonPayers&quot;
/customers/byId/{id}
/customers/byStatus/{status}
</code></pre>
<p>These spellings are all <em>fine</em>.</p>
<hr />
<p>You may find path segments more convenient when: you want to use relative references to link to nearby identifiers in the same identifier hierarchy.</p>
<p>You may find query parameters more convenient when: you expect to use HTML forms to capture the values that are going to be copied into the URI.</p>
<hr />
<p>The correct &quot;name&quot; for a resource is a lot like the correct &quot;name&quot; for a function in your code -- any spelling that is consistent with local conventions is fine.</p>
",,2022-12-28 23:06:04
74956492,2,74945578,,0,,20830082.0,,"<p>Thank you for your help! It works.
But I noticed an other bug, what I would like to share.
The <code>StartDisplay()</code> function is earlier then where I define the adapter exactly so when I used the <code>adapter.notifyDataSetChanged()</code> then I got an exception as null object reference. So I put the function calling to the end of the initialization part and now everything is fine.</p>
",,2022-12-29 22:12:12
74958875,2,74939132,,2,,10126273.0,,"<p>For people arriving from search engines and looking to get an answer to the question as written in the title, the way to read bytes from a fetch response is to use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Response/arrayBuffer"" rel=""nofollow noreferrer"">Response.arrayBuffer</a> or <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Response/blob"" rel=""nofollow noreferrer"">Response.blob</a>.</p>
<p>More information can be found here: <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Response"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/API/Response</a></p>
<p>Some unsolicited tips for working with array buffers:</p>
<ul>
<li>To access individual bytes use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"" rel=""nofollow noreferrer"">Uint8Array</a> - i.e. <code>new Uint8Array(array)</code></li>
<li>To view bytes as a (a.k.a primitive hexdump) decode them as iso-8859-1 using <a href=""https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder"" rel=""nofollow noreferrer"">TextDecoder</a> - i.e. <code>new TextDecoder(&quot;iso-8859-1&quot;)</code></li>
<li>To convert bytes to normal strings, also use TextDecoder.</li>
</ul>
",,2022-12-30 06:51:17
74966398,2,74887329,,0,,352826.0,,"<p>It depends if the change is a technical change or a business logic change.</p>
<p>The ports and adapters architecture allows you to change the adapters without changing the Core of the application. If you have tests that validate your business logic, as you should, you'll see that you can swap adapters, everything will work fine and you won't have to change your Core tests. In this case, you can have the two adapters and configure one or the other based on some setting, or as you say, have an adapter that basically calls the other two.</p>
<p>On the other hand, if your business logic requirements change (depending on some business rule you have to send the contact to A or to B), you'll notice that you'll have to change your tests to verify the new requirements. In that case, your Core will define a different Port that will be more suited to the new business logic.</p>
",,2022-12-30 22:50:19
74977139,2,74975481,,0,,20906649.0,,"<p>To implement a depth-first tree traversal (without actually building a tree in memory) one could:</p>
<ul>
<li>think of the input strings as layers <code>0</code>..<code>depth-1</code> in the tree</li>
<li>think of the characters in a given input string as nodes <code>0</code>..<code>n</code> on the corresponding layer of the tree</li>
<li>track the tree traversal by remembering the <code>path</code> from the root to the active leaf node
<ul>
<li>starting with <code>a</code> - <code>m</code> - <code>p</code> (aka <code>[0,0,0]</code> - when using per-layer indices of the nodes on the path)</li>
</ul>
</li>
<li>update the <code>path</code> according to depth-first traversal rules
<ul>
<li>until it reaches the last leaf node <code>c</code> - <code>o</code> - <code>s</code> (aka <code>[2,2,3]</code>)</li>
</ul>
</li>
</ul>
<p>While not using recursion, this solution can work with any number of input strings:</p>
<pre><code>public static void main(String[ ] args) {
    String[] arr  = {&quot;abc&quot;, &quot;mno&quot;, &quot;pqrs&quot;};

    int[] path = new int[arr.length];
    do {
        System.out.println(getValue(arr, path));
    } while(traverseDepthFirst(arr, path));
}

public static char[] getValue(String[] arr, int[] path) {
    char[] c = new char[arr.length];
    for(int depth=0; depth&lt;arr.length; depth++) {
        c[depth] = arr[depth].charAt(path[depth]);
    }
    return c;
}

public static boolean traverseDepthFirst(String[] arr, int[] path) {
    for (int depth = arr.length - 1; depth &gt;= 0; depth--) {
        if (path[depth] &lt; arr[depth].length() - 1) {
            path[depth]++;
            return true;
        } else {
            path[depth] = 0;
        }
    }
    return false;
}
</code></pre>
",,2023-01-01 20:14:13
74978826,2,74976031,,1,,14140953.0,,"<p>Time complexity is just how long an algorithm will take to run as a function of the size of the input.</p>
<p>So for this specific example (and most cases tbh) yes, it’ll run in the same time complexity regardless of programming language.</p>
<p>The only exception I can think of are built in functions, for which every language may have their own time complexity</p>
",,2023-01-02 03:39:34
75043723,2,74956111,,0,,9248098.0,,"<p>Disclaimer: This answer might work/not work based on the architecture of your app.</p>
<p>To begin with ,quite strange why microsoft requires Fragment and not sure about what is the usecase behind it.
It seems issue raised <a href=""https://github.com/AzureAD/microsoft-authentication-library-for-android/issues/1744"" rel=""nofollow noreferrer"">here</a>.Have to wait for update regarding that.</p>
<p>Lets assume for now Fragment is compulsory. Actually we can use Fragment in compose app. Because legacy apps using xml must have support to gradual migration from fragment architecture to compose ui.By the way, Android provides that flexibility to integrate composable to legacy activity/fragment architecture.</p>
<p><strong>2 Cases .</strong></p>
<ol>
<li><p>If you have single activity app architecture and all other are compose UI. You might need to do little more work to adapt fragment in compose app.</p>
</li>
<li><p>If the signin/signup screen where you are using msal is separate activity and for core features you have other activity , you can integrate fragment only to activity where msal is being used.</p>
</li>
</ol>
<p>Lets jump in to implementation.</p>
<ol>
<li><p>First thing ,you need fragment dependancy.</p>
<pre><code>implementation 'androidx.fragment:fragment:1.5.5'
</code></pre>
</li>
<li><p>Assuming you are having activity.</p>
<pre><code>class MainActivity : FragmentActivity() {
 override fun onCreate(savedInstanceState: Bundle?) {
     super.onCreate(savedInstanceState)
     setContentView(R.layout.activity_main)
 }
}
</code></pre>
</li>
</ol>
<p>Here your activity should extend FragmentActivity or any activity classes extending FragmentActivity. ComponentActivity may not work.
You need to have your xml file for activity and use setcontent view. You might need to create layout resource folder and layout file if not present.</p>
<ol start=""3"">
<li><p>Your activity xml.</p>
 
<p></p>
<pre><code> &lt;androidx.fragment.app.FragmentContainerView
     android:id=&quot;@+id/fragment&quot;
     android:layout_width=&quot;match_parent&quot;
     android:name=&quot;com.example.myapplication.MyFragment&quot;
     android:layout_height=&quot;match_parent&quot;/&gt;
</code></pre>
 
</li>
</ol>
<p>Here were are having FragmentContainerView and refer to the fragment class we are going to create. No need to inflate.</p>
<ol start=""4"">
<li><p>My Fragment class.</p>
<pre><code> class MyFragment : Fragment() {

 override fun onCreateView(
     inflater: LayoutInflater,
     container: ViewGroup?,
     savedInstanceState: Bundle?
 ): View {

     return ComposeView(requireContext()).apply {
         setContent {
             MyApplicationTheme {
                 // A surface container using the 'background' color from the theme
                 Surface(
                     modifier = Modifier.fillMaxSize(),
                     color = MaterialTheme.colors.background
                 ) {
                     CompositionLocalProvider(MyFragmentProvider provides this@MyFragment) {
                         SigninScreen(&quot;My App Name&quot;)
                     }
                 }
             }
         }
     }
 }
}
</code></pre>
</li>
</ol>
<p>Here Fragment does not need xml file. Fragment will now be the root of all your compose content.  Here we are using CompositionLocalProvider to hold the fragment instance and later it can be used in multiple composables.
You can also use LocalCurrent.context and typecast to fragment. But that you might need to do everytime. Better way is to use CompositionLocalProvider.</p>
<ol start=""5"">
<li><p>You can add <code>staticCompositionLocalOf</code> outside of your fragment class in.</p>
<pre><code> val MyFragmentProvider = staticCompositionLocalOf&lt;MyFragment&gt; {
   error(&quot;No Fragment Instance Provided&quot;)
 }
</code></pre>
</li>
</ol>
<p>So you can access fragment instance in any composables which are in same activity and fragment layout tree.</p>
<ol start=""6"">
<li>Here this is the composable function ui. Here I am getting the fragment instance and passing to MSAL.</li>
</ol>
<pre><code>    @Composable
    fun SigninScreen(name: String) {
        //Here I am getting instance of the fragment.
        val myFragment =  MyFragmentProvider.current
        Text(text = &quot;Signin $name!&quot;)
        Button(onClick = {
            val parameters = AcquireTokenParameters.Builder()
                .withScopes(scopes.toList())
                .withCallback(authenticationCallback)
                .withFragment(myFragment) 
            .build()
            _msalPublicClient.acquireToken(parameters)
    
        }) {
            Text(text = &quot;Signin&quot;)
        }
    }
</code></pre>
<p>The most important thing is your composable's direct parent should be fragment instead of activity. And its instance will be provided to all child composables via <code>CompositionLocalProvider</code>.  And this migration is wholly based on existing architecture and size of the project.</p>
",,2023-01-07 20:57:15
75053878,2,75053844,,1,,12819796.0,,"<p><strong>You are not updating list in Adaptor</strong></p>
<p><em>Please add this method in your adaptor class -</em></p>
<pre><code>public void updateList(ArrayList&lt;Contact&gt; list){
   this.list=list;
   notifyDataSetChanged();
}
</code></pre>
<p>And replace this line from your contactList activity to <strong>adapter.notifyDataSetChanged();</strong> --&gt; <strong>adapter.updateList(list);</strong></p>
<p><strong>contactList.java</strong></p>
<pre><code>   package com.example.lucentproj;

    import androidx.annotation.NonNull; 
    import androidx.appcompat.app.AppCompatActivity; 
    import androidx.recyclerview.widget.LinearLayoutManager; 
    import androidx.recyclerview.widget.RecyclerView;
    import android.os.Bundle;
    import com.google.firebase.auth.FirebaseAuth; 
    import com.google.firebase.auth.FirebaseUser; 
    import com.google.firebase.database.DataSnapshot; 
    import com.google.firebase.database.DatabaseError; 
    import com.google.firebase.database.DatabaseReference; 
    import com.google.firebase.database.FirebaseDatabase; 
    import com.google.firebase.database.ValueEventListener;`
    import java.util.ArrayList;

    public class contactList extends AppCompatActivity {
    RecyclerView recyclerView;
    DatabaseReference reference;
    contAdapter adapter;
    ArrayList&lt;Contact&gt; list;
    FirebaseUser user;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_contact_list);

    user = FirebaseAuth.getInstance().getCurrentUser();
    recyclerView = findViewById(R.id.contList);
    reference = FirebaseDatabase.getInstance().getReference(&quot;Contact&quot;);
    recyclerView.setHasFixedSize(true);
    recyclerView.setLayoutManager(new LinearLayoutManager(this));

    list = new ArrayList&lt;&gt;();

    myRef.addChildEventListener(new ChildEventListener() {
    @Override
    public void onChildAdded(DataSnapshot dataSnapshot, String s) {
         Contact contact = dataSnapshot.getValue(Contact.class);
         list.add(contact);
      }
    }

    adapter = new contAdapter(this, list);
    recyclerView.setAdapter(adapter);

    reference.addValueEventListener(new ValueEventListener() {
    @Override
    public void onDataChange(@NonNull DataSnapshot snapshot) {

    for (DataSnapshot dataSnapshot : snapshot.getChildren()){

    Contact contact = dataSnapshot.getValue(Contact.class);
    list.add(contact);

    }
    adapter.updateList(list);
  }

   @Override
   public void onCancelled(@NonNull DatabaseError error) {

   }
  });
 }
}
</code></pre>
",,2023-01-09 06:38:03
75059735,2,75046878,,1,,10559142.0,,"<p>Time complexity describes how an algorithm's time grows, as a function of the input, as time approaches infinity.</p>
<p>In this case, it is clear that the running time depends only on the size of the input, not on its content. So it is up to you to define a variable that describes your input size.</p>
<p>In your code example, the input size is constant 3x3, so if this never changes, then you can just say the algorithm has constant time complexity, <em>O(1)</em>.</p>
<p>If the input can change, then it is up to you to decide how it can change, and how it makes sense to define it. For example, you can say that it is an <em>n * n</em> quadratic grid. Fine. Then, clearly both your loops run <em>n</em> times, so you get a total complexity of <em>O(n * n) = O(n<sup>2</sup>)</em>.</p>
<p>It is also perfectly correct to define <em>n</em> as the total number of elements in your array. Then, we have some <em>n = a * b</em>. One of your loops runs <em>a</em> times, the other <em>b</em> times, so in total the complexity becomes <em>O(a * b) = O(n)</em>.</p>
<p>As for your second question, yes if you apply this for a board <em>m</em> times, then your complexity would be <em>O(m n<sup>2</sup>)</em> or <em>O(m n)</em>, depending on your chosen definition.</p>
<p>What matters is that you make your definitions clear and define your variables in a way that makes sense for what you are trying to say.</p>
",,2023-01-09 15:48:43
75067450,2,75066650,,0,,14517420.0,,"<p>Note that the Sequential constructor accepts a name argument, so to make things easy and unambiguous, add name feature to the layer you want to extract its output :</p>
<pre><code># 6 set of CONV =&gt; RELU =&gt; POOL

model.add(Conv2D(50, (5, 5), padding=&quot;same&quot;, name=&quot;my_intermediate_layer&quot;))

# to extract output :
outputs=model.get_layer(name=&quot;my_intermediate_layer&quot;).output
</code></pre>
",,2023-01-10 08:44:29
75086523,2,75086220,,0,,17299236.0,,"<p>variables reserve a reference to use from ram. It doesn't matter where you define it, if you're using 1 byte of ram it's the same everywhere.</p>
<p>The important thing is that if the developer wants to use this variable in the program, he can use it easily and separate it from other variables.</p>
<p>If you say why parameters are used, it is necessary to understand why functions are used. The simplest functions are to separate the codes you wrote from other codes and to access these codes easily. That's why the parameters exist.</p>
",,2023-01-11 16:55:10
75101467,2,75101386,,2,,112968.0,,"<p><a href=""https://docs.oracle.com/javase/8/docs/api/java/util/TreeMap.html#TreeMap-java.util.Comparator-"" rel=""nofollow noreferrer""><code>TreeMap</code></a> allows you to provide a custom key comparator. One such comparator is <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#CASE_INSENSITIVE_ORDER"" rel=""nofollow noreferrer""><code>String.CASE_INSENSITIVE_ORDER</code></a>.</p>
<pre><code>final TreeMap&lt;String, Integer&gt; treeMap
        = new TreeMap&lt;&gt;(String.CASE_INSENSITIVE_ORDER);
final String[] s1 = {&quot;AA&quot;, &quot;Bb&quot;, &quot;Aa&quot;, &quot;aa&quot;, &quot;BB&quot;};

for (final String s : s1) {
    treeMap.merge(s, 1, Integer::sum);
}

System.out.println(treeMap);
</code></pre>
<p>Output:</p>
<pre><code>{AA=3, Bb=2}
</code></pre>
<p>I know, boring. Where's the fun in that? :)</p>
",,2023-01-12 19:36:04
75110171,2,75108485,,2,,4161471.0,,"<p>A Kotlin <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-char/"" rel=""nofollow noreferrer"">Char</a> is, basically, just a regular number that represents a Unicode character (<a href=""https://stackoverflow.com/q/2241348/4161471"">What are Unicode, UTF-8, and UTF-16?</a>). Each number is assigned to a character, which we can look up in <a href=""https://en.wikipedia.org/wiki/List_of_Unicode_characters#Basic_Latin"" rel=""nofollow noreferrer"">a unicode table</a>. In this we can see that the letter <code>a</code> has a decimal representation of <code>97</code>.</p>
<p><a href=""https://i.sstatic.net/dcnuP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/dcnuP.png"" alt=""screenshot of unicode table, highlighting"" /></a></p>
<p>You could also get the decimal value using <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/code.html"" rel=""nofollow noreferrer"">Char.code</a></p>
<pre class=""lang-kotlin prettyprint-override""><code>fun main() {
  println('a'.code)
}
</code></pre>
<pre class=""lang-none prettyprint-override""><code>97
</code></pre>
<p><a href=""https://pl.kotl.in/ns_V1PJnN"" rel=""nofollow noreferrer""><em>Run in Kotlin Playground</em></a></p>
<p>Therefore, in decimal, <code>97 + 25 = 122</code>.</p>
<p>Looking up 122 in the Unicode table reveals that this is the decimal representation of <code>z</code>. You can again use <code>Char.code</code> to get the decimal representation.</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun main() {
  println(('a' + 25).code)
  println('a' + 25)
}
</code></pre>
<pre class=""lang-none prettyprint-override""><code>122
z
</code></pre>
<p><a href=""https://pl.kotl.in/GfZhCT-LH"" rel=""nofollow noreferrer""><em>Run in Kotlin Playground</em></a></p>
",,2023-01-13 13:56:46
75127959,2,75125891,,3,,13598222.0,,"<p>What version of Kotlin are you using? There was a bug in <em>1.6.21</em> on Android (<a href=""https://youtrack.jetbrains.com/issue/KT-52618/"" rel=""nofollow noreferrer"">https://youtrack.jetbrains.com/issue/KT-52618/</a>) where Kotlin's default <code>Random</code> would produce the same sequence of values every time you ran the app. It's fixed in <em>1.7.20</em>, or you could use the Java implementation (<code>java.util.Random</code>). Maybe something like this:</p>
<pre><code>import kotlin.random.asKotlinRandom

fun main() {
    val rnd = java.util.Random().asKotlinRandom()
    // using the Java Random as the source of randomness
    listOf(1, 2).random(rnd)
}
</code></pre>
<p>If you're on the newer version where it should be fixed, make sure you definitely <em>are</em> only getting <em>1</em>s - it's unlikely you'd randomly get <em>1</em> every time, but it's not <em>impossible</em>, especially with only two possible outcomes. So test it with lots of attempts, ideally with a bigger pool of possible results so you can be more confident you're not just getting unlucky with a coin flip here</p>
",,2023-01-15 19:48:21
75251153,2,75248575,,1,,311238.0,,"<p>Yes, the validation data should be different (not a subset of) than the training data.
That's because the validation data is to validate that the model isn't overtrained to the training data... if it were a subset of the training data, that obviously won't work.</p>
",,2023-01-26 20:11:13
75384600,2,75383429,,2,,1343979.0,,"<p>Eventually, I came up with the following solution:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun Flow&lt;Byte&gt;.decodeToString(): Flow&lt;String&gt; =
    flow {
        val buffer: MutableList&lt;Byte&gt; = arrayListOf()

        collect { value -&gt;
            when (value) {
                /*
                 * Ignore.
                 */
                '\r'.code.toByte() -&gt; Unit

                '\n'.code.toByte() -&gt; {
                    emit(buffer)
                    buffer.clear()
                }

                else -&gt; buffer.add(value)
            }
        }

        if (buffer.isNotEmpty()) {
            emit(buffer)
        }
    }
        .map(Collection&lt;Byte&gt;::toByteArray)
        .map(ByteArray::decodeToString)
</code></pre>
<p>The <code>ArrayList&lt;Byte&gt;</code> above can be replaced with either <code>okio.Buffer</code> from <a href=""https://square.github.io/okio/3.x/okio/okio/okio/index.html"" rel=""nofollow noreferrer""><em>okio</em></a> or <code>kotlinx.io.core.BytePacketBuilder</code> from <a href=""https://github.com/Kotlin/kotlinx-io/"" rel=""nofollow noreferrer""><em>kotlinx-io</em></a>, e.g.:</p>
<pre><code>import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.flow
import okio.Buffer

fun Flow&lt;Byte&gt;.decodeToString(): Flow&lt;String&gt; =
    flow {
        val buffer = Buffer()

        collect { value -&gt;
            when (value) {
                /*
                 * Ignore.
                 */
                '\r'.code.toByte() -&gt; Unit

                '\n'.code.toByte() -&gt; {
                    emit(buffer.readUtf8())
                    buffer.clear()
                }

                else -&gt; buffer.writeByte(value.toInt())
            }
        }

        if (buffer.size &gt; 0) {
            emit(buffer.readUtf8())
        }
    }
</code></pre>
",,2023-02-08 10:42:11
75415909,2,75403101,,0,,1998707.0,,"<p>Here's how I got it working with <code>tf.data.Dataset.from_tensor_slices()</code> and <code>tf.distribute.MirroredStrategy.experimental_distribute_dataset()</code>:</p>
<pre class=""lang-py prettyprint-override""><code>#Data exists in the form of dictionaries of large numpy arrays
x_train, y_train, x_validation, y_validation = {},{},{},{}

#Create tensorflow datasets using CPU / system memory
with tf.device(&quot;CPU&quot;):
    train = tf.data.Dataset.from_tensor_slices((x_train, y_train))
    valid = tf.data.Dataset.from_tensor_slices((x_validation, y_validation))

batch_size = 1024
epochs = 30

distributed_strategy = tf.distribute.MirroredStrategy()
num_gpu = distributed_strategy.num_replicas_in_sync

#Create a distributed dataset from the tensorflow datasets.
#The data gets streamed to the GPUs, so shuffling, repetition / epoch, and batch
#size need to be manually specified
train = train.shuffle(100*batch_size).repeat(epochs).batch(num_gpu * batch_size, drop_remainder=True)
train_dist = distributed_strategy.experimental_distribute_dataset(train)

valid = valid.repeat(epochs).batch(num_gpu * batch_size, drop_remainder=True)

#Build and compile the model
with distributed_strategy.scope():
    train_model = build_model(**model_params)
    train_model.compile(
        optimizer = tf.keras.optimizers.Adam(learning_rate = learning_rate),
        loss = losses,
        loss_weights = weights    )

#Train the model. steps_per_epoch and validation_steps need to be specified.
train_model.fit(
    train_dist,
    validation_data = valid,
    epochs = epochs,
    steps_per_epoch = int(len(train)//epochs),
    validation_steps = int(len(valid)//epochs),
    use_multiprocessing = True,
    verbose = 1,
)
</code></pre>
",,2023-02-10 20:38:22
75440451,2,72560520,,13,,14910363.0,,"<p>The library suffers lack of documentation (as will probably be the case until a stable release).</p>
<p>For a simple implementation for audio playback, which also supports background playback, we need to have our player separated from our activity, and rather live in something isolated from it but can still be part of our application, the answer is a <code>Service</code>, and services can use application context freely, and can run in the background.</p>
<p>So let's assume you want to create an app that plays music, you will need:</p>
<ul>
<li>An activity (let's call it <code>MainActivity</code>)</li>
<li>A service (let's call it <code>MusicPlayerService</code>)</li>
</ul>
<p><em><strong>1- First of all,</strong></em> we declare our activity in the manifest (I believe everyone is familiar with this step).</p>
<p><em><strong>2- Second of all,</strong></em> we declare our service in the manifest:</p>
<pre><code>    &lt;service
        android:name=&quot;.MusicPlayerService&quot;
        android:enabled=&quot;true&quot;
        android:exported=&quot;true&quot;
        android:foregroundServiceType=&quot;mediaPlayback&quot;
        tools:ignore=&quot;ExportedService&quot;&gt;

        &lt;intent-filter&gt;
            &lt;action android:name=&quot;androidx.media3.session.MediaLibraryService&quot;/&gt;
            &lt;action android:name=&quot;android.media.browse.MediaBrowserService&quot; /&gt;
        &lt;/intent-filter&gt;
    &lt;/service&gt;
</code></pre>
<p><em><strong>3- Now for the important steps,</strong></em> we build the necessary architecture for our Media3 library. The UI (MainActivity) has something called 'MediaController' which is basically an interface with the player that lives in the service.</p>
<p>As for the service, there is something called a MediaSession that lives inside it, and also the player itself (exoplayer). There is a special version of media session which controls also the media items (playlist and its info) and exposes it to other clients (such Android Auto, WearOS, etc). It's called MediaLibraryService, we're gonna be experimenting with this one today (but the process of implementation is almost the same).</p>
<p>So, in our MainActivity:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@UnstableApi class MusicActivity : ComponentActivity() {

    /* This is the global variable of the player
       (which is basically a media controller) 
       you're going to use to control playback,
       you're not gonna need anything else other than this,
       which is created from the media controller */
    lateinit var player: Player

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)


        /* Creating session token (links our UI with service and starts it) */
        val sessionToken = SessionToken(applicationContext, ComponentName(this, MusicPlayerService::class.java))

        /* Instantiating our MediaController and linking it to the service using the session token */
        val mediacontrollerFuture = MediaController.Builder(this, sessionToken).buildAsync()

        mediacontrollerFuture.addListener({


            player = mediacontrollerFuture.get()


        }, MoreExecutors.directExecutor())
    }
}
</code></pre>
<p><em><strong>Now for the most interesting part,</strong></em> we create a class called <code>MusicPlayerService</code> which extends <code>MediaLibraryService</code> (or MediaSessionService, depends on your app needs), it is like this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>
@UnstableApi class MusicPlayerService: MediaLibraryService() {

    /* This is the service side player, the media controller in the activity will control this one, so don't worry about it */
    lateinit var player: Player

    /* This is the session which will delegate everything you need about audio playback such as notifications, pausing player, resuming player, listening to states, etc */
    lateinit var session: MediaLibrarySession
    
    override fun  onCreate() {
        super.onCreate()
        
        /* Step 1 out of 2: Instantiate the player (ExoPlayer) */
        player = ExoPlayer.Builder(applicationContext)
            .setRenderersFactory(
                DefaultRenderersFactory(this).setExtensionRendererMode(
                    DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER /* We prefer extensions, such as FFmpeg */
                )
            ).build()


        /* Step 2 out of 2: Instantiate the session (most important part) */
        session = MediaLibrarySession.Builder(this, player,
            object: MediaLibrarySession.Callback {
                override fun onAddMediaItems(
                    mediaSession: MediaSession,
                    controller: MediaSession.ControllerInfo,
                    mediaItems: MutableList&lt;MediaItem&gt;
                ): ListenableFuture&lt;MutableList&lt;MediaItem&gt;&gt; {

                /* This is the trickiest part, if you don't do this here, nothing will play */
                    val updatedMediaItems = mediaItems.map { it.buildUpon().setUri(it.mediaId).build() }.toMutableList()
                    return Futures.immediateFuture(updatedMediaItems)
                }
            }).build()
    }
}
</code></pre>
<p><em><strong>One last thing</strong></em>, if you want to load a media item in an activity, use this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun loadMediaItem(uri: Uri) {
    /* We use setMediaId as a unique identifier for the media (which is needed for mediasession and we do NOT use setUri because we're gonna do
       something like setUri(mediaItem.mediaId) when we need to load the media like we did above in the MusicPlayerService and more precisely when we were building the session */
    val newItem = MediaItem.Builder()
        .setMediaId(&quot;$uri&quot;) /* setMediaId and NOT setUri */
        .build()
    
    /* Load it into our activity's MediaController */
    player.setMediaItem(newItem)
    player.prepare()
    player.play()
}
</code></pre>
<p>Hope this gives you a better approach on Media3.</p>
",,2023-02-13 19:34:59
75446824,2,61911379,,2,,12272687.0,,"<p>There are two ways in <strong>Kotlin</strong> until this time:</p>
<p>This feature is introduced in Android version &gt;= 8.0.</p>
<p>1- XML</p>
<pre><code>&lt;TextView
      android:layout_width=&quot;wrap_content&quot;
      android:layout_height=&quot;wrap_content&quot;
      android:justificationMode=&quot;inter_word&quot;
       /&gt;
</code></pre>
<p>2- Programmatically in an Activity:</p>
<p>Android O offers full justification</p>
<pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {
 TextView.setJustificationMode(LineBreaker.JUSTIFICATION_MODE_INTER_WORD);}
</code></pre>
<p>However, Android Studio mentions that you can use it for <strong>Android Q</strong> , but is still works in <strong>Android O</strong></p>
",,2023-02-14 10:55:47
75468438,2,75467218,,0,,18362930.0,,"<p>Replace <strong>app</strong> with <strong>android</strong></p>
<p>app will assign values from values.xml</p>
<p>android will assign values from attrs.xml</p>
<pre><code>  &lt;!-- The minimum text size constraint to be used when auto-sizing text. --&gt;
        &lt;attr name=&quot;autoSizeMinTextSize&quot; format=&quot;dimension&quot; /&gt;
        &lt;!-- The maximum text size constraint to be used when auto-sizing text. --&gt;
        &lt;attr name=&quot;autoSizeMaxTextSize&quot; format=&quot;dimension&quot; /&gt;
</code></pre>
<blockquote>
<pre><code>android:autoSizeMaxTextSize=&quot;10dp&quot;
android:autoSizeMinTextSize=&quot;7dp&quot;
</code></pre>
</blockquote>
",,2023-02-16 06:08:09
75474911,2,75129694,,0,,795603.0,,"<p>You are receiving that error as you were calling Health Connect Read APIs from a non-UI/background thread. This is cited on our documentation here : <a href=""https://developer.android.com/guide/health-and-fitness/health-connect/platform-overview/developer-functionality#reading_with_health_connect"" rel=""nofollow noreferrer"">https://developer.android.com/guide/health-and-fitness/health-connect/platform-overview/developer-functionality#reading_with_health_connect</a></p>
<p>Please make sure that whenever reading records on HC, the calls should be made with your app on the foreground.</p>
",,2023-02-16 16:04:35
75654435,2,55296713,,1,,16670548.0,,"<p>I’ve ported the Android <code>BigDecimal</code> implementation to Kotlin, which makes it usable for Kotlin/Native, particularly for iOS. It cannot support Kotlin/JS though, as it depends on BoringSSL for the actual BIGNUM implementation. The code is here:</p>
<p><a href=""https://github.com/kendy/Kotlin-Native-BigDecimal/"" rel=""nofollow noreferrer"">https://github.com/kendy/Kotlin-Native-BigDecimal/</a></p>
<p>Please see the <a href=""https://github.com/kendy/Kotlin-Native-BigDecimal/blob/master/README.md"" rel=""nofollow noreferrer"">README.md</a> on how to build it, and how to use it.</p>
<p>It has the same API as the Java <code>BigDecimal</code>, so you can use the <code>expect/ actual</code> as suggested in the other answer. Alternatively you can avoid the <code>expect/actual</code>, and just create a file <code>shared/src/iosMain/kotlin/java/math/BigDecimal.kt</code> in your project with content like the following:</p>
<pre><code>package java.math

typealias BigDecimal = kendy.math.BigDecimal
</code></pre>
<p>[Of course, even with this approach, you still need to build the BigDecimal.klib &amp; integrate it into your project as described in the README.md.]</p>
",,2023-03-06 18:19:02
75795924,2,75794674,,3,,8041003.0,,"<p>In simple terms, a party (client or server) will trust another party (server or client) if the other party’s certificate chain as provided on the wire can be traced back (recursively via signers) to the CACERTS stored in the original party’s JRE. (or is in the original party’s truststore)</p>
<p>It is fairly unusual to use mutually authenticated TLS so client side certificates are rare. In most cases authentication of a client is done with user credentials, api keys, etc. Anyway, it looks like you have the client cert setup correctly.</p>
<p>If the server certificate is signed by a Intermediate CA that has a cert held in the client’s CACERTS then no client side intervention is necessary. On the server a keychain from a CACERTS cert down to the server cert needs to be configured via application.yaml, as you correctly show in your question.</p>
<p>If the Intermediate CA’s signing cert is not registered in the official Java CACERTS in the client’s JRE then it must be added like <a href=""https://learn.capstorm.com/copystorm/frequently-asked-questions/installation/help-i-am-getting-a-certificate-error-pkix-path/#:%7E:text=This%20type%20of%20error%20typically,trusted%20store%20file%20%E2%80%9Ccacerts%E2%80%9D."" rel=""nofollow noreferrer"">this</a>. I find it easier to add untrusted Intermediate CA certs to CACERTS rather than adding the server cert to the client truststore (as you correctly show) because that allows multiple servers to be trusted (because, in a typical corporate environment, they will all have certs signed by the Intermediate CA)</p>
<p>If a client can’t build a trusted cert chain to the cert provided by a server an SSL connection will fail with the dreaded “PKIX path building failed” error.</p>
<p>I find it helpful to load a server GET path (eg <code>/welcome</code>) in a browser to get a look at what cert the server is passing back.</p>
",,2023-03-20 22:36:59
75857372,2,69978122,,4,,1024556.0,,"<p>Uff, finally fixed in Kotlin 1.8.20-RC2.</p>
",,2023-03-27 15:06:33
75887067,2,75886800,,2,,6794063.0,,"<p>Fine-tuning the solver is an art on its own. Please find out more in <a href=""https://www.optaplanner.org/docs/optaplanner/latest/benchmarking-and-tweaking/benchmarking-and-tweaking.html"" rel=""nofollow noreferrer"">benchmarking and tweaking OptaPlanner</a>.</p>
",,2023-03-30 10:30:51
75890236,2,75888014,,1,,1193657.0,,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",,2023-03-30 15:32:55
75910340,2,54504913,,1,,9532302.0,,"<p>In Kotlin you can get Char input by using <code>read()</code> method of the <code>System</code> class.</p>
<pre><code>System.`in`.read().toChar()
</code></pre>
<p>Here, <code>System.in.read()</code> returns ASCII value (Integer) of the Character entered by the user.
Then <code>toChar()</code> method converts the Integer value to Char.</p>
",,2023-04-02 05:51:41
75913783,2,75913697,,0,,2704032.0,,"<p>To use a Spring-managed bean as a WebSocket handler, you can define a custom <code>javax.websocket.server.ServerEndpointConfig.Configurator</code> class and override its <code>getEndpointInstance()</code> method to return the Spring-managed bean instance.</p>
<pre><code>import javax.websocket.server.ServerEndpointConfig;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

@Component
public class WebSocketConfigurator extends ServerEndpointConfig.Configurator {

    private static ApplicationContext applicationContext;

    @Autowired
    public void setApplicationContext(ApplicationContext applicationContext) {
        WebSocketConfigurator.applicationContext = applicationContext;
    }

    @Override
    public &lt;T&gt; T getEndpointInstance(Class&lt;T&gt; endpointClass) throws InstantiationException {
        return applicationContext.getBean(endpointClass);
    }
}
</code></pre>
<p>To use this Configurator class in your Jakarta WebSocket application, you can add the following annotation to your WebSocket endpoint class:</p>
<pre><code>import javax.websocket.server.ServerEndpoint;

@ServerEndpoint(value = &quot;/websocket&quot;, configurator = WebSocketConfigurator.class)
public class MessageHandler {
    // ...
}
</code></pre>
",,2023-04-02 18:07:46
75920505,2,75920439,,2,,11298380.0,,"<p>You are giving a complete URI with protocol (<code>https://</code>) while only the domain is requested. The function is basically trying to resolve something that is not a domain name, so it does not work.</p>
<p>You can only use it with domain names (so the same as your URI, but without the protocol), like you pointed out with <code>google.com</code>.</p>
<p>If you need to split the URI, you can use the split function, or do as explained here : <a href=""https://stackoverflow.com/questions/22740582/java-url-without-protocol"">Java URL Without Protocol</a></p>
",,2023-04-03 14:20:43
75923069,2,75908405,,12,,664577.0,,"<h2>The problem</h2>
<p>The main problem seems to be that the <code>UrlEncoder</code> service is dealing with a mix of encoded, unencoded and partially encoded URLs. More than that, there isn't a good way to to know which one is which.</p>
<p>This leads to ambiguity because certain characters can have different meanings when encoded vs unencoded. For instance, given a partially encoded URLs it isn't trivial to tell if a character such as <code>'&amp;'</code> is part of a query parameter (and thus should be encoded) or acting as a separator (and thus shouldn't be encoded):</p>
<pre><code>https://www.example.com/test?firstQueryParam=hot%26cold&amp;secondQueryParam=test
</code></pre>
<p>To add salt to the injury, Java's <code>URI</code> implementation deviates from RFC 3986 and RFC 3987 due to historical / backwards compatibility reasons. Here's an interesting read about some of URI's quirks: <a href=""https://cr.openjdk.org/%7Edfuchs/writeups/updating-uri/"" rel=""noreferrer"">Updating URI support for RFC 3986 and RFC 3987 in the JDK</a>.</p>
<p>&quot;Fixing&quot; incorrectly encoded URLs by re-encoding without proper knowledge about the original URL is not a trivial problem. Fixing incorrectly encoded URLs using encoders and decoders full of quirks is even harder. A good enough &quot;best effort&quot; heuristic would be my recommendation.</p>
<h2>A simple best effort solution</h2>
<p>So the good news is that I've managed to implement a solution that passes all of the above tests. The solution in question leverages Spring Web <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/util/UriUtils.html"" rel=""noreferrer""><code>UriUtils</code></a> and <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/util/UriUtils.html"" rel=""noreferrer""><code>UriComponentsBuilder</code></a>. The cherry on the cake is that you may not need <a href=""https://github.com/smola/galimatias"" rel=""noreferrer"">galimatias</a> anymore.</p>
<p>Here's the code:</p>
<pre class=""lang-java prettyprint-override""><code>public class UrlEncoder {

    public Optional&lt;URL&gt; encode(final String link) {
        try {
            final URI validatedURI = reencode(link).parseServerAuthority();
            return Optional.of(validatedURI.toURL());
        } catch (MalformedURLException | URISyntaxException e) {
            return Optional.empty();
        }
    }

    private URI reencode(String url) { // best effort
        final String decodedUrl = UriUtils.decode(url, StandardCharsets.UTF_8);
        return UriComponentsBuilder.fromHttpUrl(decodedUrl)
                .encode()
                .build()
                .toUri();;
    }
}
</code></pre>
<p>Here's the gist of it:</p>
<ul>
<li><code>reencode</code> → best attempt to &quot;fix&quot; URL encoding by decoding and re-encoding</li>
<li><code>parseServerAuthority()</code> → As an alternative to the former <code>validateUrl(url)</code> method.</li>
</ul>
<h2>Double encoding ampersands and other special characters</h2>
<p>As previously stated, while the code above passes all tests. It is easy enough to come up with a &quot;broken&quot; test case. E.g., running the URL above through the encoder would result in:</p>
<pre><code>https://www.example.com/test?firstQueryParam=hot&amp;cold&amp;secondQueryParam=test
</code></pre>
<p>This is a perfectly valid URL, but likely not what one would be looking for.</p>
<p>We are now entering dangerous territory, but there are ways to implement a more &quot;opinionated&quot; re-encoding algorithm. E.g. the code bellow deals with ampersands by making sure that <code>%26</code> isn't decoded:</p>
<pre><code>private final char PERCENT_SIGN = '%';
private final String ENCODED_PERCENT_SIGN = &quot;25&quot;;
private final String[] CODES_TO_DOUBLE_ENCODE = new String[]{
        &quot;26&quot; // code for '&amp;'
};

private URI reencode(String url) throws URISyntaxException {
    final String urlWithDoubleEncodedSpecialCharacters = doubleEncodeSpecialCharacters(url);
    final String decodedUrl = UriUtils.decode(urlWithDoubleEncodedSpecialCharacters, StandardCharsets.UTF_8);
    final String encodedUrl = UriComponentsBuilder.fromHttpUrl(decodedUrl).toUriString();
    final String encodedUrlWithSpecialCharacters = decodeDoubleEncodedSpecialCharacters(encodedUrl);

    return URI.create(encodedUrlWithSpecialCharacters);
}

private String doubleEncodeSpecialCharacters(String url) {
    final StringBuilder sb = new StringBuilder(url);
    for (String code : CODES_TO_DOUBLE_ENCODE) {
        final String codeString = PERCENT_SIGN + code;
        int index = sb.indexOf(codeString);
        while (index != -1) {
            sb.insert(index + 1, ENCODED_PERCENT_SIGN);
            index = sb.indexOf(codeString, index + 3);
        }
    }
    return sb.toString();
}

private String decodeDoubleEncodedSpecialCharacters(String url) {
    final StringBuilder sb = new StringBuilder(url);
    for (String code : CODES_TO_DOUBLE_ENCODE) {
        final String codeString = PERCENT_SIGN + ENCODED_PERCENT_SIGN + code;
        int index = sb.indexOf(codeString);
        while (index != -1) {
            sb.delete(index + 2, index + 4);
            index = sb.indexOf(codeString, index + 5);
        }
    }
    return sb.toString();
}
</code></pre>
<p>The solution above can be modified to deal with other escaping sequences (e.g., to deal with all <a href=""https://www.rfc-editor.org/rfc/rfc3986#section-2.2"" rel=""noreferrer"">RFC 3986's Reserved Characters</a>), as well as to use more sophisticated heuristics (e.g., to do something different with query parameters, than, say, path parameters).</p>
<p>Nevertheless, as someone that went down this rabbit hole before, I can tell you that once you know that you are dealing with incorrectly encoded URLs outside of your control there simply isn't a perfect solution.</p>
",,2023-04-03 19:21:47
75930166,2,75848196,,1,,8296213.0,,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",,2023-04-04 13:48:46
75931629,2,75920517,,1,,7729375.0,,"<p>This is working correctly per the language.
Documentation around Float: <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-float/"" rel=""nofollow noreferrer"">Kotlin Float</a></p>
<p>Kotlin, like many languages uses IEEE-754 (<a href=""https://en.wikipedia.org/wiki/IEEE_754"" rel=""nofollow noreferrer"">Wiki</a>) as the standard for Floating point math and representation.</p>
<p>The difference of 64 bit width of a Double, and the 32 bit width of a Float means that when converting from Double to Float, we lose precision.</p>
<p><a href=""https://i.sstatic.net/Bu8qP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Bu8qP.png"" alt=""Kotlin error for Float precision"" /></a></p>
<p>According to the Wiki for IEEE-754, under the table: <strong>Basic and interchange formats</strong> we see that the max decimal digits of a floating point, 32 bit number is 7 digits. Your example is higher than Kotlin's Float, which is a 32 bit number.</p>
<p>A number with one less digit will let you use the precision you need. Otherwise you will need to use a Double for numbers as large as you are expecting.</p>
<p><a href=""https://i.sstatic.net/6FGpA.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/6FGpA.png"" alt=""incorrect float, correct float, and correct double"" /></a></p>
<p>As a note, Double is limited to 16 significant digits for precision</p>
<p><a href=""https://i.sstatic.net/RG1aW.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/RG1aW.png"" alt=""double max precision"" /></a></p>
<p>You can use the editor suggestion for larger based numbers</p>
",,2023-04-04 16:16:07
75936073,2,75932691,,0,,21248085.0,,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",,2023-04-05 05:57:34
75941010,2,75927220,,1,,24069.0,,"<p>First, I assume you are using Paketo buildpacks, and <a href=""https://paketo.io/docs/howto/configuration/#ca-certificates"" rel=""nofollow noreferrer"">the documentation</a> explains how you can provide a CA certificate to your JVM Truststore, either at</p>
<ul>
<li>buildtime (if you use the same CA certificate for your image across your environments; that's the easiest solution since you just need to provide your CA cert during buildtime and the image is ready to be deployed) or at</li>
<li>runtime (if your CA cert is going to be different across environments; that's a more complicated option since at deployment time, in kpack, you will need to provide and bind the CA certificate)</li>
</ul>
<p>If you choose runtime, then you would need to create a <a href=""https://github.com/pivotal/kpack/blob/main/docs/servicebindings.md"" rel=""nofollow noreferrer"">service binding</a> that would link to your CA certificate</p>
<p>Hope that helps!</p>
",,2023-04-05 15:00:46
75946464,2,75099939,,0,,15494398.0,,"<p>Accessibility Services are bound to the System service and have the lifecycle of the System service. Because these services are used by people with disability. These services run even when the app that defines them is closed. So, you could perhaps use a hack to do things like these for changing your static variables:</p>
<p>When you open the app, the <code>onCreate</code> of the <code>MainActivity</code> is called. So, in your <code>onCreate</code> you could set the values of those static variables to the default value you want. But remember that these don't work with instance variables defined in AccessibilityServices.</p>
<pre><code>    override fun onCreate(savedInstanceState: Bundle?) {
       super.onCreate(savedInstanceState)
       //Your other activity code.
       //Here you can reinitialize those different values
       MyService.aValue = true
    }
</code></pre>
",,2023-04-06 06:24:09
75949465,2,75949303,,1,,977919.0,,"<p>You need to pass in the <code>Supplier</code> <code>mapFactory</code> to specify the type of <code>Map</code> you wish to collect in (<code>()-&gt;new TreeMap&lt;&gt;()</code>). Same in case of <code>TreeSet</code></p>
<pre><code>    final TreeMap&lt;String, TreeMap&lt;String, TreeMap&lt;String, TreeSet&lt;String&gt;&gt;&gt;&gt; collect =
        list.stream()
            .collect(
                groupingBy(
                    Dto::getValidationType,
                    TreeMap::new,
                    groupingBy(
                        Dto::getSource,
                        TreeMap::new,
                        groupingBy(
                            Dto::getAddress,
                            TreeMap::new,
                            Collectors.mapping(
                                Dto::getError,
                                Collectors.collectingAndThen(
                                    Collectors.toSet(),
                                    TreeSet::new)
                            )
                        )
                    )
                )
            );
</code></pre>
",,2023-04-06 12:23:18
75955882,2,75955483,,0,,4543622.0,,"<p>There are 2 main things to remember in solving your issue:</p>
<ol>
<li>Pass in a &quot;reference&quot; of the your data when initializing the ArrayAdapter. eg. a List works well</li>
<li>Call <code>notifyDataSetChanged()</code> whenever the data inside your adapter
changes</li>
</ol>
<p>Also, you do not need to re-initialize the entire adapter on every selection. Instead, you can streamline your code like this:</p>
<pre><code>public class PageFragment1 extends Fragment implements AdapterView.OnItemSelectedListener {

    private ArrayAdapter&lt;CharSequence&gt; adapter3, adapter7;
    private List&lt;CharSequence&gt; spinner7DataList; // Save a reference to your data here

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater,
                             @Nullable ViewGroup container,
                             @Nullable Bundle savedInstanceState) {


        ViewGroup rootView = (ViewGroup) inflater
                .inflate(R.layout.page_1, container
                        , false);

        Spinner spinner3 = (Spinner) rootView.findViewById(R.id.spinnerAxles);
        adapter3 = ArrayAdapter.createFromResource(getActivity(), R.array.Axles, android.R.layout.simple_spinner_item);
        adapter3.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner3.setAdapter(adapter3);
        spinner3.setOnItemSelectedListener(this);

        spinner7DataList = new ArrayList&lt;&gt;(); // Initialize your data
        spinner7DataList.addAll(Arrays.asList(getContext().getResources().getStringArray(R.array.TrailAxle)));
        Spinner spinner7 = (Spinner) rootView.findViewById(R.id.spinnerTrailAxle);
        adapter7 = new ArrayAdapter&lt;&gt;(getContext(), android.R.layout.simple_spinner_item, spinner7DataList);
        adapter7.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner7.setAdapter(adapter7);
        spinner7.setOnItemSelectedListener(this);

        return rootView;

    }

    @Override
    public void onItemSelected(AdapterView&lt;?&gt; adapterView, View view, int position, long id) {
        // Verify that the adapter that triggered this method is the one you want
        if (adapterView!= null &amp;&amp; adapterView.getId() == R.id.spinnerAxles) {
            String axlesText = adapter3.getItem(position).toString();
            if (axlesText.equals(&quot;6x4&quot;)) {
                // Note that we are not updating the adapter here, just the list that was passed to it previously
                spinner7DataList.clear();
                spinner7DataList.addAll(Arrays.asList(getContext().getResources().getStringArray(R.array.TrailAxle2))); // Load the new data into the list
                adapter7.notifyDataSetChanged(); // Important, this will ensure that your data changes are reflected on the Spinner
            } else if (axlesText.equals(&quot;3x2&quot;)) { // Any other conditions if needed

            }
        }
    }

    @Override
    public void onNothingSelected(AdapterView&lt;?&gt; adapterView) {

    }

</code></pre>
<p>This answer works because you are passing <code>spinner7DataList</code> by reference to <code>adapter7</code>. So whenever you manipulate the data inside <code>spinner7DataList</code>, it is reflected within the <code>adapter7</code></p>
",,2023-04-07 06:09:58
75976661,2,75974522,,1,,1841181.0,,"<p>The solution is to inform Maven to point to <code>src/test/java</code> instead of defaulting to <code>src/test/resources</code> as outlined here: <a href=""https://github.com/karatelabs/karate#folder-structure"" rel=""nofollow noreferrer"">https://github.com/karatelabs/karate#folder-structure</a></p>
<pre><code>&lt;build&gt;
    &lt;testResources&gt;
        &lt;testResource&gt;
            &lt;directory&gt;src/test/java&lt;/directory&gt;
            &lt;excludes&gt;
                &lt;exclude&gt;**/*.java&lt;/exclude&gt;
            &lt;/excludes&gt;
        &lt;/testResource&gt;
    &lt;/testResources&gt;        
    &lt;plugins&gt;
    ...
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
<p>And then <code>Karate.run(&quot;classpath:&lt;path_to_feature_directory_or_file&gt;&quot;)</code> will work properly.</p>
<p>I could only figure this out once I used absolute path to debug the issue. Hope it helps others.</p>
",,2023-04-10 11:25:04
75981300,2,75979696,,1,,10254476.0,,"<p>If you don´t need to access the callback from your Repository you can simply Inject the bean <code>entityManager</code> and detatch from your Hibernate Context.</p>
<pre><code>private final EntityManager entityManager;

public void someMethod(List&lt;SomeObject&gt; objects) {
    objects.forEach(someObject-&gt; {
        res = someRepository.save(someObject);
        entityManager.detatch(res); // or use ´entityManager.clear();´ 
    });
}
</code></pre>
<p>This might also be useful ;)</p>
<p><a href=""https://stackoverflow.com/questions/75852833/why-is-jpa-hibernate-slowing-down-when-loading-a-large-amount-of-data-in-a-spr"">Why is JPA / Hibernate slowing down when loading a large amount of data in a Spring Boot application?</a></p>
",,2023-04-10 22:53:52
75984916,2,75983578,,1,,7275056.0,,"<p>The <code>MouseEvent</code> <code>e</code> is a parameter of the method.  The caller provides the argument to this parameter so you are NOT responsible for creating the instance.</p>
<p>You appear to be implementing a <code>MouseListener</code>.  That listener will be registered with some component.  When the program is executed and the user manipulates their mouse, a <code>MouseEvent</code> will be fired.  The framework will find that your listener is registered to handle that event and will pass the event to the method.</p>
",,2023-04-11 10:32:27
75990136,2,75989998,,1,,9513184.0,,"<p>After you register a <code>MouseListener</code> on a component by calling <code>addMouseListener</code>, that component will call the appropriate method on each <code>MouseListener</code> attached to it whenever a <code>MouseEvent</code> occurs, passing the <code>MouseEvent</code> as the first argument.</p>
<p>See also the <a href=""https://docs.oracle.com/en/java/javase/19/docs/api/java.desktop/java/awt/event/MouseListener.html"" rel=""nofollow noreferrer""><code>MouseListener</code> documentation</a>:</p>
<blockquote>
<p>The class that is interested in processing a mouse event either implements this interface (and all the methods it contains) or extends the abstract MouseAdapter class (overriding only the methods of interest). <br>
The listener object created from that class is then registered with a component using the component's addMouseListener method. A mouse event is generated when the mouse is pressed, released clicked (pressed and released). A mouse event is also generated when the mouse cursor enters or leaves a component. When a mouse event occurs, the relevant method in the listener object is invoked, and the MouseEvent is passed to it.</p>
</blockquote>
",,2023-04-11 21:04:45
75992520,2,75992334,,0,,14442758.0,,"<p>The constructor and everything is fine, but you shouldn't have declared <code>name</code> as a <code>static</code> variable.
<br/>
This is because static variables are 'shared'* over all instances (objects) of your class; Thus being static -&gt; In your instance this, this means, that once you've set 'name', it'll be shared across all instances of <code>Cereal</code></p>
<p>*shared here simply means, that there will only be one instance of that specific variable, shared across all the objects of that class.</p>
<p>To make your code 'work', you simply have to remove the <code>static</code> keyword from your variable name.
<br/>
This removes the one-instance-across-everything property from your variable and makes it 'object-specific'.</p>
<p>Little additional info: You typically only want to declare variables <code>static</code>, when they're global properties or values, which aren't going to be object-specific, such as e.g.</p>
<p><code>private static final int MAX_LENGTH_TEXT = 425</code></p>
<p>Hope this helped! Cheers</p>
",,2023-04-12 06:29:29
76001614,2,76001022,,0,,9576202.0,,"<p>You have created <strong>dashboard_menu</strong> file and you are inflating <strong>R.menu.menu</strong>. Also If you are showing menu icons in Toolbar, then you need to define a Toolbar in the Activity's UI to show these menu items else it doesn't matter what you inflate it won't be visible on screen.</p>
<p>So just define a Toolbar in Activity's UI.</p>
",,2023-04-13 04:27:00
76002906,2,76002880,,3,,869736.0,,"<p>If you want this rounding to work correctly, you must never, ever use Double.  You must use BigDecimal at every stage of your code.  Using Double can introduce a small +/- to your values that can cause rounding to go in a different direction than you expect.</p>
",,2023-04-13 07:48:42
76040510,2,76034061,,0,,2979045.0,,"<p><strong>A simple way:</strong></p>
<p>Add android:buttonTint=&quot;@null&quot; to your CheckBox</p>
<p><strong>Another way:</strong></p>
<p>Your custom drawable selector <code>custom_checkbox.xml</code>:</p>
<pre><code>&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:shape=&quot;oval&quot;&gt;
    &lt;solid android:color=&quot;@color/orange&quot; /&gt; 
    &lt;stroke android:color=&quot;@color/white&quot; android:width=&quot;3dp&quot; /&gt;
    &lt;size
        android:width=&quot;30dp&quot;
        android:height=&quot;30dp&quot; /&gt;
&lt;/shape&gt;
</code></pre>
<p>Your color selector: (place it on <code>res/color</code> folder) <code>custom_checkbox_color_selector.xml</code>:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item android:color=&quot;@color/grey&quot; android:state_enabled=&quot;false&quot; /&gt;
    &lt;item android:color=&quot;@color/orange&quot; android:state_checked=&quot;true&quot; /&gt;
    &lt;item android:color=&quot;@color/orange&quot; android:state_selected=&quot;true&quot; /&gt;
    &lt;item android:color=&quot;@color/orange&quot; android:state_pressed=&quot;true&quot; /&gt;
    &lt;item android:color=&quot;@color/white&quot; /&gt;
&lt;/selector&gt;
</code></pre>
<p>Your <code>CheckBox</code>:</p>
<pre><code>&lt;CheckBox
    android:id=&quot;@+id/beAnonymousTextView&quot;
    style=&quot;@style/TextViewStyle&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:textSize=&quot;20sp&quot;
    android:text=&quot;I want to be anonymous&quot;
    app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
    app:layout_constraintEnd_toEndOf=&quot;parent&quot;
    app:layout_constraintStart_toStartOf=&quot;parent&quot;
    app:layout_constraintTop_toBottomOf=&quot;@id/emailButton&quot;
    android:buttonTint=&quot;@color/custom_checkbox_color_selector&quot;
    android:button=&quot;@drawable/custom_checkbox&quot;
    android:paddingLeft=&quot;10dp&quot;/&gt;
</code></pre>
",,2023-04-18 01:54:56
76042870,2,76042764,,1,,8041003.0,,"<p>Let’s use the example of String. Its hashCode() returns a Java int (4-bytes or 32-bits) and is calculated as follows:</p>
<pre><code>s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
</code></pre>
<p>By this formula Aa and BB have the same hashCode, ie 2260 - see this <a href=""https://stackoverflow.com/questions/12925988/how-to-generate-strings-that-share-the-same-hashcode-in-java"">answer</a></p>
<p>In general terms a hashCode has a 2^32 (4294967296) likelihood of being unique. So pretty good odds.</p>
<p>A <strong>cryptographic hash</strong> however is a much larger number, eg SHA256 is 2^256 (1.1579209e+77). There is practically no chance of a clash.</p>
",,2023-04-18 09:19:28
76043262,2,76042764,,1,,768644.0,,"<p><a href=""https://en.wikipedia.org/wiki/Pigeonhole_principle"" rel=""nofollow noreferrer"">Pigeonhole principle</a>.</p>
<p>Hashes have the property that they are fixed size, generally, quite small. Java's <code>hashCode()</code> method is <em>very</em> small indeed: 32 bits. But, even something like SHA256 is 256-bits (hence the name).</p>
<p>Imagine it worked like you thought it worked: Unique things put into the hash algorithm result in unique hash values.</p>
<p>Then I have fixed world hunger and eternal peace, in fact, then I broke the universe. I have invented an infinite compression algorithm that can compress the entire university into 256 bits.</p>
<p>After all, if what you say is true, I can take 5GB movie file, hash it, and a unique value pops out. There are only 2^256 unique values which is <em>a lot</em>, but it only takes 256 bits (a mere 32 bytes) to uniquely represent this. I can just make a table mapping each of these values to the resulting file.</p>
<p>Obviously, that cannot be the case.</p>
<p>Let's use some managable numbers: Imagine I have a hash algorithm whose output is 4 bits only (so, 0, 1, 2, ..., 15 - just 16 unique numbers).</p>
<p>I want to uniquely hash the strings A through Z using this hash algorithm. If I then make a table:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th style=""text-align: right;"">Input</th>
<th style=""text-align: left;"">Hash</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: right;"">A</td>
<td style=""text-align: left;"">0</td>
</tr>
<tr>
<td style=""text-align: right;"">B</td>
<td style=""text-align: left;"">1</td>
</tr>
<tr>
<td style=""text-align: right;"">C</td>
<td style=""text-align: left;"">2</td>
</tr>
<tr>
<td style=""text-align: right;"">....</td>
<td style=""text-align: left;"">....</td>
</tr>
<tr>
<td style=""text-align: right;"">P</td>
<td style=""text-align: left;"">15</td>
</tr>
</tbody>
</table>
</div>
<p>I have now hashed A through P to 0-15. So.. what does Q hash to? Whatever number you choose.. we now have a collision. Let's say we decide to hash Q to 2. Then 'I hashed a letter and 2 came out' means that the input was C <em>or</em> Q.</p>
<p>It doesn't matter how large your hashes get, as long as they are fixed size <em>and</em> the hash algorithm can hash input of any size (which is what all hash algorithms do: They hash ANY input to a fixed size hash), you run into this issue.</p>
<p>Hence, there will always be different inputs that hash to the same value.</p>
<p>This is no problem:</p>
<ul>
<li><p>In cryptographically strong hash algorithms, it is computationally hard to produce input as will that hashes to some desired hash value. In other words, given some data that hashes to X, if I ask you to find me some different data that <em>also</em> hashes to X, your only real strategy is to just continually produce random inputs, hashing it, until you get real lucky. Yes, generally cryptographic hashes are at least 128-bit in size (generally 256 or even more), because that algorithm 'roll up random inputs and hash it until you get lucky' takes mere seconds if the hash values are sized less than 128 bits. However, 'it has 256 bit' is not equivalent to 'therefore it is cryptographically strong'. You need BOTH a large bit size AND an algorithm that has the property that it is mathematically not reversible.</p>
</li>
<li><p>Even in non-cryptographically strong hash algos, such as java's <code>hashCode()</code> which has no requirements that it is, this is no problem. A few collisions are fine; HashMap and co just deal with it. If you get <em>a lot</em> of collisions, HashMap's performance becomes bad, but it continues to work precisely as its API says it works. The rules for hashcode are simple: If 2 objects are equal they must hash to the same value. <strong>But the reverse is not required at all</strong> - 2 different objects may hash to the same value. No problem. In fact, for any input that has more than 2^32 unique values, this is as mathematically inevitable as <code>1 + 1 = 2</code>.</p>
</li>
</ul>
<p>This means this:</p>
<pre><code>public int hashCode() {
  return 1;
}
</code></pre>
<p>is a valid implementation.</p>
<p>It's also an implementation that has far more collisions than necessary, so sticking objects with such hashCode definitions in hashmaps makes for very slow hashmaps.</p>
",,2023-04-18 10:02:34
76075556,2,76075421,,0,,721855.0,,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",,2023-04-21 17:39:42
76099042,2,76098682,,2,,12706564.0,,"<p>If I understood correctly from the comments, you need the list to be</p>
<ul>
<li>grouped by profession,</li>
<li>sorted by age</li>
<li>collected into a LinkedHashMap</li>
</ul>
<p>If this is the case, you can try something like this:</p>
<pre><code>Map&lt;String, List&lt;Worker&gt;&gt; groupedByProfession = workers.stream()
        .sorted(Comparator.comparingInt(Worker::getAge))
        .collect(Collectors.groupingBy(
            Worker::getPosition, 
            LinkedHashMap::new, 
            Collectors.toList()
         ));
</code></pre>
",,2023-04-25 08:23:07
76109523,2,76109284,,3,,20317450.0,,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",,2023-04-26 10:06:24
76137395,2,75411309,,0,,8235496.0,,"<p>For lower Android versions i.e.below Android 8, you can use Accessibility Service to implement Autofill functionality.
See how to create your own Accessibility service <a href=""https://developer.android.com/guide/topics/ui/accessibility/service"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/accessibility/service</a></p>
<p>You must register the required events like ypeViewClicked|typeViewFocused|typeViewTextChanged and you'll be notified whenever any of these events is triggered by the OS.By using accessibility service, you can write whatever you want to execute, you have full control over the present screen.</p>
<p>You can read the accessibility tree and identify the field types - username or password etc. You can show a popup using window manager that shows the credentials suggestions list, user can select one and you can write the same in the selected field through accessibility power.</p>
",,2023-04-29 17:00:53
76152086,2,76140033,,0,,14475852.0,,"<p>The problem is you are modifying <code>LinkedList</code> while looping over its original size which get changed after element removal which intern causes the index inside loop pointing to incorrect values</p>
<p>if we look it with visualisation it will be more clear</p>
<pre><code>INDEX    0   1   2   3   4   5   6   7   8   9  10
       [23, 45, 12, 34, 34, 66, 25, 13, 12, 24, 33]
         i

SIZE    11
</code></pre>
<p>when loop started the <code>size</code> and <code>i</code> position in <code>LinkedList</code> is shown.</p>
<p>when element greater than 25 is found on position 1 let see what happens</p>
<pre><code>INDEX    0   1   2   3   4   5   6   7   8   9
       [23, 12, 34, 34, 66, 25, 13, 12, 24, 33]
             i

SIZE    10
</code></pre>
<p>As we can see from the visualisation <code>size</code> is now 10 and <code>i</code> is 1</p>
<p>From this we can see few problems</p>
<ul>
<li>On the next iteration of loop it will skip element at current <code>i</code> position which should be checked</li>
</ul>
<p>The same process happens again and again every time element greater than 25 is found the next element is not going to be validated and will intern remain in the <code>LinkedList</code> even if it is greater than 25</p>
<p>To solve the problem as state by @tricot you can either loop over the <code>LinkedList</code> starting from the end</p>
<pre><code>for (int i = list.size() - 1; i &gt;= 0; i--) {
  if ((int) list.get(i) &gt; 25) {
    list.remove(i);
  }
}
</code></pre>
<p>which leads to time complexity of <code>O(𝑛²)</code>.</p>
<p>A better approach would be to create <code>ListIterator</code> and using it to remove element greater than 25 in <code>LinkedList</code> which will give time complexity of <code>O(𝑛)</code></p>
<pre><code>ListIterator&lt;Integer&gt; it = list.listIterator();
while (it.hasNext()) {
  if (it.next() &gt; 25) {
    it.remove()
  }
}
</code></pre>
<p>Reference to <code>ListIterator</code> can be found <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/ListIterator.html#remove--"" rel=""nofollow noreferrer"">here</a></p>
",,2023-05-02 06:00:45
76155518,2,76155171,,1,,7237884.0,,"<p>In simple terms what actually happens is the following:</p>
<p>A <code>HashSet</code> is backed by a <code>HashMap</code> meaning behind the scenes the <code>HashSet</code> uses a <code>HashMap</code> data structure.</p>
<p>Whatever value you add to the <code>HashSet</code> is added as a <code>key</code> to the <code>HashMap</code> which exists behind the scenes. Since <code>HashMap</code> does not allow duplicate keys, during several insertions of the same key, only the latest key is the one that survives. Therefore it fulfils the need that a <code>HashSet</code> contains only unique values.</p>
<p>For all above insertions in a <code>HashSet</code>, the value that you insert in <code>HashSet</code> is inserted as a key in the <code>HashMap</code>. At the same time as a value to the <code>HashMap</code> undisclosed to you is inserted always the same value for the specific <code>HashMap</code> instance from the line <code>static final Object PRESENT = new Object()</code> -&gt; <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/HashSet.java#L100"" rel=""nofollow noreferrer"">reference.</a> . Therefore all values which are inserted behind the scenes to a <code>HashMap</code> backing up a specific <code>HashSet</code> are always a specific reference created from <code>new Object()</code>. For another <code>HashSet</code> there would be a different value, but for the same <code>HashSet</code> it always use the same reference.</p>
<p>Having said the above, to answer the title of the question</p>
<blockquote>
<p>What is the key in the Set's underlying HashMap: hash code or the
object itself?</p>
</blockquote>
<p>The key in underlying <code>HashMap</code> would be the reference to the actual object which was inserted as a value to the <code>HashSet</code>. Now how the <code>HashMap</code> stores this reference in the <code>HashMap</code> data structure is that it calculates the <code>hashcode</code> of that object to identify the bucket of HashTable... (read more about <code>hashmap</code> to track it further how hashMap stores elements)</p>
",,2023-05-02 13:48:10
76247856,2,76242328,,3,,21892401.0,,"<p>I was able to find the solution that at least works. To keep it simple, the most important detail is <code>tf.RaggedTensor.flat_values</code> attribute. It transformed the <code>RaggedTensor</code> to regular <code>Tensor</code> by concatenating all the rows. (It works in a more complicated manner for RaggedTensors with multiple ragged dimensions.)</p>
<p>Another thing is that I added another dimension to the distribution's <code>batch_shape</code> to make sure that <code>distribution.log_prob()</code> accepts flattened <code>RaggedTensor</code>. However, it increases the number of computed probability values by approximately <code>batch_size</code>. Most of them are ditched on the next step.</p>
<p>Finally, to obtain 1D <code>Tensor</code> again, I used <code>tf.gather_nd</code>. It picked correct values from the 2D <code>log_probs_2d</code> to 1D <code>log_probs</code>. The only operation left is averaging.</p>
<p>Full code is as follows:</p>
<pre><code>def negloglike(y, distr):
    '''
    y: tf.RaggedTensor, shape (batch_size, None)
    distr: batch_shape==(None, 1), event_shape==(,)
    '''

    batch_size = tf.shape(y)[0]
    segment_ids = tf.repeat(tf.range(batch_size), y.row_lengths())  # shape (total_samples, )
    total_samples = tf.shape(segment_ids)[0]
    
    flattened = y.flat_values  # shape (total_samples, )
    log_probs_2d = distr.prob(flattened) # shape (batch_size, total_samples, )
    ### calculating too many unnecessary values (\times batch_size more than needed)

    log_probs = tf.gather_nd(indices=tf.stack([segment_ids,
                                               tf.range(total_samples)], axis=1), 
                             params=log_probs_2d)  # shape (total_samples, )
    
    mean_over_samples = tf.math.segment_mean(log_probs, segment_ids)  # shape (batch_size, )
    
    return -tf.reduce_mean(mean_over_samples)
</code></pre>
",,2023-05-14 13:59:42
76264116,2,76141714,,0,,21904865.0,,"<p><strong>For the First Error :</strong></p>
<p>You are getting this error because <code>multi_gpu_model</code> is deprecated to use in Tensorflow 2.x.</p>
<p><a href=""https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a> api is used in TensorFlow 1.x version and replaced with <code>tf.distribute.Strategy</code> api in TensorFlow 2.x to distribute training across multiple GPUs, multiple machines, or TPUs.</p>
<p>You can use <code>MirroredStrategy</code> of Distributed training strategies which support synchronous distributed training on multiple GPUs on one machine. It creates one replica per GPU device.</p>
<p>Please have a look at the <a href=""https://www.tensorflow.org/guide/distributed_training"" rel=""nofollow noreferrer"">Distributed training</a> link for more details.</p>
<p><strong>For the Second Error :</strong></p>
<p>TensorFlow 2.10 was the last TensorFlow release that supported GPU on <a href=""https://www.tensorflow.org/install/pip#windows-native"" rel=""nofollow noreferrer"">native-Windows</a>. So installing <code>tensorflow-gpu 2.12</code> for GPU support will not work in Winodws OS.</p>
",,2023-05-16 14:17:50
76292324,2,75865878,,0,,11890582.0,,"<p><code>cts.documentQuery(cts.uriMatch(&quot;/directory/*/folder/*.xml&quot;))</code><br>
Is this what you are expecting? This is the server side javascript (XQuery) equivalent of what you have asked.<br>
If you want to pass a serialized query, you should first execute <code>cts:uri-match(&quot;/directory/*/folder/*.xml&quot;)</code> and then enclose the results into <code>cts:document-query</code> as shown below</p>
<pre><code>&lt;cts:document-query xmlns:cts=&quot;http://www.w3.org/2000/xmlns/&quot;&gt;
  &lt;cts:uri&gt;/directory/2019/folder/1.xml&lt;/cts:uri&gt;
  &lt;cts:uri&gt;/directory/2020/folder/2.xml&lt;/cts:uri&gt;
  &lt;cts:uri&gt;/directory/2021/folder/3.xml&lt;/cts:uri&gt;
&lt;/cts:document-query&gt;
</code></pre>
<p>Best approach is to create a MarkLogic module server-side (in XQuery or JS) and invoke it from JAVA client API (by passing the uri-match string)</p>
",,2023-05-19 20:45:06
76316777,2,76315207,,0,,4788165.0,,"<p>The solution would be to create your own custom View from scratch.</p>
<pre><code>public class StrokedTextView extends View {
private final Paint TEXT_PAINT;
private final Paint WHITE_BORDER_PAINT;
private final Paint BROWN_BORDER_PAINT;

private String text;

private int desiredWidth, desiredHeight;
private final int bigBorderSize, halfMargin;

// constructors
public StrokedTextView(Context context) {
    this(context, null, 0);
}

public StrokedTextView(Context context, AttributeSet attrs) {
    this(context, attrs, 0);
}

public StrokedTextView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);

    float textSize = 0;
    int textColor = context.getColor(R.color.main_color);
    text = &quot;&quot;;
    if(attrs != null) {
        @SuppressLint(&quot;CustomViewStyleable&quot;) TypedArray a = context.obtainStyledAttributes(attrs,R.styleable.StrokedTextAttrs);
        textSize = a.getDimensionPixelSize(R.styleable.StickerTextAttrs_textSize, 0);
        textColor = a.getColor(R.styleable.StrokedTextAttrs_textColor, textColor);
        text = a.getString(R.styleable.StrokedTextAttrs_text);
        a.recycle();
    }

    TEXT_PAINT = new Paint();
    TEXT_PAINT.setTextSize(textSize);
    TEXT_PAINT.setStyle(Paint.Style.FILL);
    TEXT_PAINT.setColor(textColor);

    int smallBorderSize = dpToPx(context, 2);
    bigBorderSize = smallBorderSize * 3;
    halfMargin = bigBorderSize / 2;

    WHITE_BORDER_PAINT = new Paint();
    WHITE_BORDER_PAINT.setTextSize(textSize);
    WHITE_BORDER_PAINT.setStyle(Paint.Style.STROKE);
    WHITE_BORDER_PAINT.setStrokeWidth(bigBorderSize);
    WHITE_BORDER_PAINT.setColor(context.getColor(R.color.white));

    BROWN_BORDER_PAINT = new Paint();
    BROWN_BORDER_PAINT.setTextSize(textSize);
    BROWN_BORDER_PAINT.setStyle(Paint.Style.STROKE);
    BROWN_BORDER_PAINT.setStrokeWidth(smallBorderSize);
    BROWN_BORDER_PAINT.setColor(context.getColor(R.color.main_color_dark));
    measure();
}

public void setText(String t){
    text = t;
    measure();
    invalidate();
    requestLayout();
}

private void measure(){
    Rect bounds = new Rect();
    TEXT_PAINT.getTextBounds(text, 0, text.length(), bounds);
    desiredHeight = bounds.height() + bigBorderSize;
    desiredWidth = bounds.width() + bigBorderSize;
}

@Override
protected void onDraw(Canvas canvas) {
    super.onDraw(canvas);
    int bottom = getHeight() - halfMargin;
    canvas.drawText(text, halfMargin, bottom, WHITE_BORDER_PAINT);
    canvas.drawText(text, halfMargin, bottom, BROWN_BORDER_PAINT);
    canvas.drawText(text, halfMargin, bottom, TEXT_PAINT);
}

public static int dpToPx(Context context, float dp)
{
    final float scale = context.getResources().getDisplayMetrics().density;
    return (int) (dp * scale + 0.5f);
}

@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
    int widthMode = MeasureSpec.getMode(widthMeasureSpec);
    int widthSize = MeasureSpec.getSize(widthMeasureSpec);
    int heightMode = MeasureSpec.getMode(heightMeasureSpec);
    int heightSize = MeasureSpec.getSize(heightMeasureSpec);

    int width;
    int height;

    //Measure Width
    if (widthMode == MeasureSpec.EXACTLY) {
        //Must be this size
        width = widthSize;
    } else if (widthMode == MeasureSpec.AT_MOST) {
        //Can't be bigger than...
        width = Math.min(desiredWidth, widthSize);
    } else {
        //Be whatever you want
        width = desiredWidth;
    }

    //Measure Height
    if (heightMode == MeasureSpec.EXACTLY) {
        //Must be this size
        height = heightSize;
    } else if (heightMode == MeasureSpec.AT_MOST) {
        //Can't be bigger than...
        height = Math.min(desiredHeight, heightSize);
    } else {
        //Be whatever you want
        height = desiredHeight;
    }

    setMeasuredDimension(width, height);
}
</code></pre>
<p>and in the <code>attr.xml</code>:</p>
<pre><code>&lt;declare-styleable name=&quot;StickerTextAttrs&quot;&gt;
    &lt;attr name=&quot;textColor&quot; format=&quot;color&quot;/&gt;
    &lt;attr name=&quot;textSize&quot; format=&quot;dimension&quot;/&gt;
    &lt;attr name=&quot;text&quot; format=&quot;string&quot;/&gt;
&lt;/declare-styleable&gt;
</code></pre>
",,2023-05-23 16:14:48
76418019,2,76414884,,0,,506796.0,,"<p>You can’t be imprecise and use an Int (where the literal is specified as <code>42</code> with no decimal) as a Double. Kotlin strictly enforces the type of numbers you’re using to prevent possible bugs from accidentally using the wrong type of number. Integers and decimal numbers are represented differently in binary in memory, and math is calculated differently for them on the CPU, so it is important to be precise about which type of number you’re using.</p>
<p>Java doesn’t have this restriction, but this is considered to be a common source of bugs and therefore the Kotlin designers decided to be more strict about it.</p>
",,2023-06-06 19:57:42
76456354,2,76456284,,1,,8411351.0,,"<p>In your case you need to define your own data processing pipeline using the <a href=""https://www.tensorflow.org/api_docs/python/tf/data"" rel=""nofollow noreferrer"">tf.data</a> module. Based on this module you can define an own/customized <a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset"" rel=""nofollow noreferrer"">tf.data.Dataset</a>. Those datasets support a lot of features like parsing of records into a specific format (using the <a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset#map"" rel=""nofollow noreferrer"">map function</a>) or <a href=""https://www.tensorflow.org/api_docs/python/tf/data/Dataset#batch"" rel=""nofollow noreferrer"">batching</a>.</p>
<p>Here is a complete example of how you could use the tf.data module for building your own pipeline: <a href=""https://www.tensorflow.org/guide/data"" rel=""nofollow noreferrer"">https://www.tensorflow.org/guide/data</a></p>
",,2023-06-12 11:46:27
76457075,2,76453879,,2,,1570854.0,,"<p>The difference stems from the fact that Kotlin adds null-checking code.
Check the decompiled source of your test class:</p>
<pre class=""lang-java prettyprint-override""><code>public final class TextUtilsWrapperTest {
  @Test
  public final void testWrapperStatic() {
    Parcel parcel = (Parcel)Mockito.mock(Parcel.class);
    MockedStatic textUtilsWrapperMockedStatic = Mockito.mockStatic(TextUtilsWrapper.class);
    textUtilsWrapperMockedStatic.when(TextUtilsWrapperTest::testWrapperStatic$lambda$0)
      .thenReturn(&quot;hello&quot;);
    Intrinsics.checkNotNullExpressionValue(parcel, &quot;parcel&quot;);
    Assertions.assertEquals(&quot;hello&quot;, TextUtilsWrapper.createFromParcel(parcel));
  }
  
  private static final void testWrapperStatic$lambda$0() {
    Intrinsics.checkNotNullExpressionValue(ArgumentMatchers.any(), &quot;any()&quot;);
    TextUtilsWrapper.createFromParcel((Parcel)ArgumentMatchers.any());
  }
}
</code></pre>
<p>The expected event sequence is:</p>
<ul>
<li>argument matcher is called and registered on stack</li>
<li>mocked method call is intercepted and <code>MockMethodAdvice.handleStatic</code> is called</li>
<li>this calls <code>ArgumentMatcherStorageImpl.pullLocalizedMatchers</code> and clears the matchers stack.</li>
</ul>
<p>See: <a href=""https://stackoverflow.com/questions/22822512/how-do-mockito-matchers-work"">How do Mockito matchers work?</a></p>
<p>Unfortunately, <code>Intrinsics.checkNotNullExpressionValue</code> throws a NullPointerExeption, as <code>ArgumentMatchers.any()</code> returnes null.</p>
<p>This NPE is silently ignored, but mocked method is not called, and thus handleStatic is not called - the matchers stack is not cleared.</p>
<p>The matchers stack is checked upon <code>MockedStaticImpl.when</code> call, and the <code>InvalidUseOfMatchersException</code> is reported.</p>
<p>To solve, use <code>mockito-kotlin</code> provided argument matchers:</p>
<pre><code>/** Matches any object, excluding nulls. */
inline fun &lt;reified T : Any&gt; any(): T {
    return ArgumentMatchers.any(T::class.java) ?: createInstance()
}

/** Matches anything, including nulls. */
inline fun &lt;reified T : Any&gt; anyOrNull(): T {
    return ArgumentMatchers.any&lt;T&gt;() ?: createInstance()
}
</code></pre>
",,2023-06-12 13:17:54
76461455,2,76456052,,0,,19335715.0,,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",,2023-06-13 03:03:03
76534645,2,76534557,,3,,448875.0,,"<p>Coroutines in Kotlin are scheduled cooperatively. That means they have to yield the control by themselves, nobody can suspend, stop or kill them externally. OS can put an underlying thread to sleep, but if resumed, it will continue with the same coroutine.</p>
<p>On the other hand, coroutines generally try to be cooperative and yield often. Every suspension point is a potential place where the current coroutine could give control to another coroutine. If we write a CPU-intensive algorithm which never suspends, we are encouraged to <a href=""https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/yield.html"" rel=""nofollow noreferrer"">yield</a> manually from time to time to not occupy the thread entirely.</p>
<p>In your specific case it is guaranteed a coroutine won't suspend between <code>getAndIncrement()</code> and <code>Log.i()</code>. It is guaranteed to get a 1, 2, 3 result. However, the execution order of each <code>launch()</code> block is not guaranteed.</p>
",,2023-06-22 18:11:21
76727626,2,76727430,,1,,4681367.0,,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",,2023-07-20 07:36:03
76753084,2,76738690,,0,,21961109.0,,"<p>After trying different things out and reading more about automatic differentation and especially about GradientTape I came across the batch_jacobian function which does exactly what I was looking for.</p>
<p>Might be useful for other people that are also not that familiar with GradientTape.</p>
",,2023-07-24 09:26:56
76762979,2,76762834,,1,,143475.0,,"<p>Normally teams use <code>karate.callSingle()</code> for this kind of use-case: <a href=""https://stackoverflow.com/a/56853597/143475"">https://stackoverflow.com/a/56853597/143475</a></p>
<p>If you insist on using Java, use a singleton as described here: <a href=""https://stackoverflow.com/a/54571844/143475"">https://stackoverflow.com/a/54571844/143475</a></p>
<p>Please note that tests that depend on each other is not a good practice and not supported by Karate: <a href=""https://stackoverflow.com/a/46080568/143475"">https://stackoverflow.com/a/46080568/143475</a></p>
",,2023-07-25 13:02:10
76792619,2,76790574,,0,,22217083.0,,"<p>Kotlin does not have an array syntax (varray = {1,2,3,4,5}). To create an array in Kotlin, you must use a function such as arrayOf or intArrayOf.</p>
<pre><code>val array = intArrayOf(1, 2, 3, 4, 5)
</code></pre>
",,2023-07-29 07:56:56
76800264,2,76800190,,2,,589259.0,,"<p>The reason why a trust store exists is because you are trying to create a secure communication to a web server, and you need to trust the server certificate that they offer. So a trust store contains the trust anchors for that to happen: if a valid trust path can be build to a trust anchor in the trust store then the certificate is deemed valid and - after some additional checks of e.g. the server name - the private key can be used by the server to indicate that it is the server named within the server certificate.</p>
<p>Great, so what kind of security needs to be present on your trust store? Well, it is that the trust store is available and unaltered. Having the trust store unavailable will obviously be a big issue. So downloading the trust store every time you need to secure a connection is adding another high availability component to your infrastructure. Maybe you already need one for CRL or OCSP service, but still.</p>
<p>The other thing is that the trust store should not be altered in traffic. That basically means that the connection to your service should be free from attacks. The most logical way to do this is to have it protected by TLS. In that case of course you need a trusted certificate. In the end you cannot operate without trusting <em>something</em>. This is why you either have to trust a server based on the <code>cacerts</code>, or to distribute a certificate with the application.</p>
<p>&quot;it shouldn't be a problem because it's not accessible by anyone else&quot;. That's not a requirement. Other people may well access the server, as long as they cannot alter the security (and availability) of the connection or the trust store. Read access to the P12 file wouldn't directly influence the availability or trustworthiness of the trust store. That said, the stricter the security of the service that contains the trust store, the better.</p>
<p>I was kind of afraid that the P12 would not just be a trust store but also a key store containing a private key. Preferably, a private key should not be distributed that way. I didn't see any hint of this happening in your question, so I'll just leave it here for other readers.</p>
",,2023-07-31 01:48:36
76811028,2,76810953,,1,,143475.0,,"<p>You can integrate any Java code into Karate, so if you really want you can go <a href=""https://github.com/karatelabs/karate-examples/blob/main/database/README.md"" rel=""nofollow noreferrer"">direct to JDBC</a>.</p>
<p>When it comes to APIs I'm pretty sure you can't control transactions, because you are at an outer layer of the architecture. From experience, the strategy I've seen work is that each test creates data that is &quot;scoped&quot; to that flow at the start. When you <code>GET</code> data, you can filter by the data you are interested in either by the API parameters, or you can do it in Karate (typically a <code>match contains</code> when arrays are involved).</p>
<p>You can see a typical example <a href=""https://github.com/karatelabs/karate-todo/blob/main/src/test/java/app/api/simple/restful-booker.feature"" rel=""nofollow noreferrer"">here</a>.</p>
<p>Also see this thread: <a href=""https://stackoverflow.com/a/60944060/143475"">https://stackoverflow.com/a/60944060/143475</a></p>
",,2023-08-01 11:08:05
76814704,2,76814141,,0,,17490497.0,,"<p>If you know how many digits you want to keep after the decimal part you could just multiply by 10^n and store the result in an int.</p>
<p>The way a double is stored with a floating point is always an approximation of a number. Like others said, this means 1.1 can't be represented exactly and the real value is closer to 1.100000000000000088817841970012523233890533447265625</p>
<p>If we knew what you're trying to achieve with this kind of data transformation perhaps we could offer a different alternative? Because this is a very strange thing to do and I can't think of a reason why you would need to do this in any application.</p>
",,2023-08-01 19:35:15
76818846,2,76791699,,0,,3142422.0,,"<p>Here's what I've done. Please tell me why this is wrong. It feels wrong, it smells wrong.</p>
<p>I added this class</p>
<pre><code>@Configuration
public class SpringBootVoodoo {

    @Autowired
    private ApplicationContext context;

    @Bean(name=&quot;entityManagerFactory&quot;)
    public EntityManagerFactory sessionFactory() {
        return (EntityManagerFactory) context.getBean(&quot;firstEMF&quot;);
    }
}
</code></pre>
<p>It now starts up just fine.</p>
<p>Why did I even try this? Well, the article <a href=""https://www.baeldung.com/spring-boot-configure-multiple-datasources"" rel=""nofollow noreferrer"">Configure and Use Multiple DataSources in Spring Boot</a> implies I need to make one of my existing EMF beans be the primary. I can't find how to do that in XML. I don't really want to pull all the XML into code, and adding @Primary to FirstDAO didn't do the trick. This does.</p>
<p>But it smells wrong :-(</p>
",,2023-08-02 10:10:05
76839390,2,76839377,,1,,4162799.0,,"<p>you can force a consumer to start reading from a specific offset in a topic's partition. If you want to start reading from a specific offset every time your application starts, you would use the ConsumerSeekAware interface as follows:</p>
<pre><code>@Component
public class MyKafkaListener implements ConsumerSeekAware {

    @KafkaListener(id = &quot;myListener&quot;, topics = &quot;mytopic&quot;)
    public void listen(ConsumerRecord&lt;String, String&gt; record) {
        System.out.println(&quot;Message Received : &quot;+ record.value());
    }

    @Override
    public void registerSeekCallback(ConsumerSeekCallback callback) {
    }

    @Override
    public void onPartitionsAssigned(Map&lt;TopicPartition, Long&gt; assignments, ConsumerSeekCallback callback) {
        // this will run when the listener is started and assigned a partition
        // you can seek to a specific offset here
        // for example, to start from offset 123 on partition 0 of topic 'mytopic':
        callback.seek(&quot;mytopic&quot;, 0, 123);
    }

    @Override
    public void onIdleContainer(Map&lt;TopicPartition, Long&gt; assignments, ConsumerSeekCallback callback) {
    }
}

</code></pre>
<p>In this example, every time the listener is started and the mytopic topic's 0th partition is assigned to it, the listener will start reading from offset 123. Remember that this will happen every time your application is started or the listener is assigned a new partition.</p>
<p>Remember to ensure that the listener does not commit offsets automatically. You can set the ENABLE_AUTO_COMMIT_CONFIG property to false to prevent this:</p>
<pre><code>props.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);
</code></pre>
<p>You'll also need to ensure that the AckMode of the listener container is set to MANUAL_IMMEDIATE or MANUAL, so that your listener code has to manually acknowledge that it has processed a message:</p>
<pre><code>ContainerProperties containerProperties = new ContainerProperties(&quot;mytopic&quot;);
containerProperties.setAckMode(ContainerProperties.AckMode.MANUAL);
</code></pre>
<p>Finally, I'd like to note that the example above is quite basic. In a real world scenario, you may need to store the offsets your consumer has processed so that you can start from the right position if your application is restarted. Please adjust the implementation according to your needs.</p>
<p><strong>EDIT based on Gary Russell's suggestions</strong>:</p>
<ol>
<li><strong>Extending AbstractConsumerSeekAware:</strong> Instead of directly implementing ConsumerSeekAware, consider extending AbstractConsumerSeekAware. This class provides some convenient default methods, making your implementation cleaner.</li>
</ol>
<p>Change your class definition to:</p>
<pre><code>@Component
public class MyKafkaListener extends AbstractConsumerSeekAware {
    // ... rest of your methods
}
</code></pre>
<ol start=""2"">
<li><strong>Spring Bean Declaration:</strong> Ensure that your <code>ConsumerFactory</code> and <code>ConcurrentMessageListenerContainer</code> are managed by the Spring container. Declare them as @Beans:</li>
</ol>
<pre><code>@Bean
public ConsumerFactory&lt;String, String&gt; consumerFactory() {
    // ... your existing code
}

@Bean
public ConcurrentMessageListenerContainer&lt;String, String&gt; kafkaListenerContainerFactory() {
    // ... your existing code
}
</code></pre>
",,2023-08-04 22:23:04
77056298,2,77056019,,2,,17752564.0,,"<p>Your problem is probably because the recyclerview recycled the views of its items.</p>
<p>With each item (in your case is 100 item), you will need a variable to check the checkbox inside item has clicked or not. if it clicked, you will set checked for checkbox = true, else is false. Something like this:</p>
<pre><code>@Override
    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
        if (holder == MyViewHolder) {
            holder.bind(position);
        }
    }

    Int clickedPosition = -1;

    public class MyViewHolder extends RecyclerView.ViewHolder{

        public MyViewHolder(@NonNull View itemView) {
            super(itemView);
        }
        
        public void bind(int position) {
            yourCheckBoxId.setClick {
                clickedPosition = position;
            }
            if (position == clickedPosition) {
                yourCheckBoxId.setChecked = true;
            } else  {
                yourCheckBoxId.setChecked = false;
            }
        }
    }
</code></pre>
<p>Above code just illustration for my answer.
This code just fine when you click one checkbox, if you clickmore, you will need a list clickedPosition, or a object with check field</p>
",,2023-09-07 02:45:56
77099180,2,77097854,,0,,17758716.0,,"<p>First, you can implement the <em><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.desktop/javax/swing/event/MouseInputListener.html"" rel=""nofollow noreferrer"">MouseInputListener</a></em> interface, which conveniently implements both <em>MouseListener</em> and <em>MouseMotionListener</em>.</p>
<p>Regarding your inquiry, here is a similar question and answer.<br />
<em><a href=""https://stackoverflow.com/a/18172343/17758716"">StackOverflow – mouseDragged not returning appropriate button down</a></em>.</p>
<p>It looks like the framework recommends utilizing the <em><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.desktop/javax/swing/SwingUtilities.html"" rel=""nofollow noreferrer"">SwingUtilities</a></em> class for this situation.</p>
<p>Specifically, the following 3 methods.</p>
<ul>
<li><em><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.desktop/javax/swing/SwingUtilities.html#isLeftMouseButton(java.awt.event.MouseEvent)"" rel=""nofollow noreferrer"">isLeftMouseButton</a></em></li>
<li><em><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.desktop/javax/swing/SwingUtilities.html#isMiddleMouseButton(java.awt.event.MouseEvent)"" rel=""nofollow noreferrer"">isMiddleMouseButton</a></em></li>
<li>and <em><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.desktop/javax/swing/SwingUtilities.html#isRightMouseButton(java.awt.event.MouseEvent)"" rel=""nofollow noreferrer"">isRightMouseButton</a></em></li>
</ul>
<p>Here is an example.</p>
<pre class=""lang-java prettyprint-override""><code>public void mouseDragged(MouseEvent e) {
    System.out.println(&quot;l= &quot; + SwingUtilities.isLeftMouseButton(e));
    System.out.println(&quot;m= &quot; + SwingUtilities.isMiddleMouseButton(e));
    System.out.println(&quot;r= &quot; + SwingUtilities.isRightMouseButton(e));
    l.setText(&quot;X=&quot; + e.getX() + &quot; Y=&quot; + e.getY());
}
</code></pre>
<p>Output</p>
<pre class=""lang-none prettyprint-override""><code>MouseListener:1
l= true
m= false
r= false
MouseListener:3
l= false
m= false
r= true
</code></pre>
<p>Additionally, here are two <em>Java</em> tutorials, on implementing <em>mouse listeners</em>, and <em>mouse-motion listeners</em>.</p>
<ul>
<li><em><a href=""https://docs.oracle.com/javase/tutorial/uiswing/events/mouselistener.html"" rel=""nofollow noreferrer"">How to Write a Mouse Listener (The Java™ Tutorials &gt; Creating a GUI With Swing &gt; Writing Event Listeners)</a></em>.</li>
<li><em><a href=""https://docs.oracle.com/javase/tutorial/uiswing/events/mousemotionlistener.html"" rel=""nofollow noreferrer"">How to Write a Mouse-Motion Listener (The Java™ Tutorials &gt; Creating a GUI With Swing &gt; Writing Event Listeners)</a></em>.</li>
</ul>
",,2023-09-13 17:10:55
77108427,2,77108354,,2,,448875.0,,"<p>I'm not sure if I fully understand your question. Object initialization is one of the very few cases where null safety in Kotlin is partially disabled. This is mentioned in the <a href=""https://kotlinlang.org/docs/null-safety.html#nullable-types-and-non-nullable-types"" rel=""nofollow noreferrer"">documentation about the null safety</a>:</p>
<blockquote>
<p>The only possible causes of an NPE in Kotlin are: (...) Data inconsistency with regard to initialization</p>
</blockquote>
<p>Possible explanations are: technical limitations imposed by the underlying Java; or intentional decision, because guaranteed null-safety during the initialization might be pretty annoying for the developer. No matter the reason, developers are expected to be careful when implementing the initialization logic or better, at all avoid complex logic there.</p>
<p>Answering your question on which code sample is better. None of them. Ideally, we should use simply <code>println(c.length)</code>, but make sure it never executes before initializing <code>c</code>.</p>
<p><strong>Update</strong></p>
<p>If your concerns are not at all related to object initialization, but only about the <code>if</code> versus <code>?.</code>. First, your code samples aren't the same. First code sample always invokes <code>print()</code>, potentially passing <code>null</code> to it. Second code sample doesn't invoke <code>print()</code> in the case of null.</p>
<p>But general answer is: yes, this is for conciseness. In Java we often have to write code like this (let's ignore <a href=""https://en.wikipedia.org/wiki/Law_of_Demeter"" rel=""nofollow noreferrer"">Law of Demeter</a>):</p>
<pre class=""lang-java prettyprint-override""><code>if (foo != null &amp;&amp; foo.bar != null &amp;&amp; foo.bar.baz != null &amp;&amp; foo.bar.baz.qux != null)
</code></pre>
<p>In Kotlin this is simply:</p>
<pre class=""lang-kotlin prettyprint-override""><code>if (foo?.bar?.baz?.qux != null)
</code></pre>
",,2023-09-14 21:18:11
77241216,2,77240888,,0,,13579714.0,,"<p>By default, Tensorflow will try to allocate all available GPU memory, which can lead to issues if other processes require GPU memory, that is what is happening in your scenario. So you must configure memory usage which involves a session with a parameter set.</p>
<ol>
<li>Import required libraries (i use keras).</li>
</ol>
<blockquote>
<pre><code>import tensorflow as tf
from keras.backend.tensorflow_backend import set_session
</code></pre>
</blockquote>
<ol start=""2"">
<li>Configure GPU Memory Usage</li>
</ol>
<blockquote>
<pre><code>config = tf.ConfigProto() config.gpu_options.allow_growth = True sess
= tf.Session(config=config) set_session(sess)
</code></pre>
</blockquote>
<ol start=""3"">
<li><p>Execute the model per your needs</p>
</li>
<li><p>Clear GPU Memory</p>
</li>
</ol>
<blockquote>
<pre><code>sess.close()
tf.reset_default_graph()
</code></pre>
</blockquote>
",,2023-10-06 00:07:26
77254374,2,77248761,,0,,8582685.0,,"<p>You have modeled showBook() as a GET method so you don't need or want to use a form and POST, a link will do the trick and is more appropriate. Try:</p>
<pre><code>&lt;a id=&quot;add-button&quot; class=&quot;fw primary&quot; th:href=&quot;@{/books/{id}(id=${book.id})}&quot;&gt;Add book to the card.&lt;/a&gt;
</code></pre>
<p>This assumes you have @RequestMapping(&quot;/books&quot;) on the controller class and the page from which you are creating the link has access to a book in the model that has an id attribute.</p>
<p>If you want a button instead of a link style the link accordingly.</p>
",,2023-10-08 16:18:11
77463092,2,77462298,,0,,17509104.0,,"<p>So the answer yes and the solution is to read HashMap documentation or some tutorials.</p>
<p>HashMap is a map based on hashing of the keys. It supports O(1) get/put operations. <a href=""https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#hashCode()"" rel=""nofollow noreferrer"">Keys must have consistent implementations of hashCode() and equals() for this to work.</a>. So in your code key VehicleKey must overwrite hashCode/equals methods.</p>
<p>hashCode method example</p>
<pre class=""lang-java prettyprint-override""><code>@Override
public int hashCode() {
    int result = vin4 != null ? vin4.hashCode() : 0;
    result = 31 * result + (lPlate != null ? lPlate.hashCode() : 0);
    return result;
}
</code></pre>
<p>and more important one. Equals method:</p>
<pre class=""lang-java prettyprint-override""><code>@Override
public boolean equals(Object o) {
    if (this == o) return true;//check if points to same object instance
    if (o == null || getClass() != o.getClass()) return false;//if one of object is null or different class

    VehicleKey that = (VehicleKey) o;
    if (Objects.equals(vin4, that.vin4) &amp;&amp; Objects.equals(lPlate, that.lPlate)) {
        return true;
    }
    if (Objects.equals(vin4, that.vin4) &amp;&amp; lPlate == null || that.lPlate == null) {
        return true;
    }
    return Objects.equals(lPlate, that.lPlate) &amp;&amp; vin4 == null || that.vin4 == null;
}
</code></pre>
<p>For sure that if's must can be simplify.</p>
",,2023-11-10 22:12:07
78119084,2,56691003,,1,,7461861.0,,"<p>You can use following extension method to convert string to UTF_8 format.</p>
<pre><code>fun String.toUTF8String(): String {
    val bytes = this.toByteArray(StandardCharsets.UTF_8)
    return bytes.decodeToString()
}
</code></pre>
<p><strong>Explanation</strong></p>
<p>First string is converted to ByteArray using UTF_8 character set. Then convert that ByteArray to string using <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/decode-to-string.html"" rel=""nofollow noreferrer""><code>ByteArray.decodeToString</code></a> function provided in Kotlin 1.4.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/decode-to-string.html"" rel=""nofollow noreferrer""><code>ByteArray.decodeToString</code></a> function takes a ByteArray containing bytes of string encoded with utf8 encoding and decodes it to kotlin String. So you can use it like:</p>
<pre><code>val utf8String = &quot;Stack Overflow!&quot;.toUTF8String()
</code></pre>
",,2024-03-07 06:05:49
78356179,2,75864241,,0,,24509836.0,,"<p>You can try to embed the credentials with the URI. Below works</p>
<pre><code>UsernamePasswordCredentialsProvider cr = new UsernamePasswordCredentialsProvider(&quot;username&quot;, &quot;password&quot;);
Git.cloneRepository()
   .setURI(&quot;https://{username}:{pasword}@https://github.com/eclipse/jgit.git&quot;)
   .setCredentialsProvider(cr)
   .setDirectory(new File(&quot;/path/to/checkout&quot;))
   .setBranchesToClone(Arrays.asList(&quot;refs/heads/branch-name&quot;))
   .setBranch(&quot;branch-name&quot;)
   .call();
</code></pre>
",,2024-04-19 21:10:48
78371072,2,76990190,,2,,9619685.0,,"<p>You can configure your <code>RelyingPartyRegistrationRepository</code> as follows to read your keystore file :</p>
<pre><code>@Bean
public RelyingPartyRegistrationRepository relyingPartyRegistrations() throws Exception {

    //Here I read a jks file but you can replace the default type with &quot;PKCS12&quot; for example
    KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
    char[] pwd = keyStorePassword.toCharArray();
    Resource keystoreRes = new ClassPathResource(keyStoreLocation);
    ks.load(keystoreRes.getInputStream(), pwd);

    //Fetch the private key contained in the jks file
    PrivateKey privateRSAKey = (PrivateKey) ks.getKey(keyStoreAlias, keyStorePassword.toCharArray());

    //Fetch the cerrtificate contained in the jks file
    X509Certificate cert = (X509Certificate) ks.getCertificate(keyStoreAlias);

    //Give your certificate to spring relying party bean
    RelyingPartyRegistration registration = RelyingPartyRegistrations
        .fromMetadataLocation(assertingPartyMetadataLocation)
        .registrationId(&quot;example&quot;)
        .signingX509Credentials((c) -&gt; c.add(Saml2X509Credential.signing(privateRSAKey, cert)))
        .decryptionX509Credentials((c) -&gt; c.add(Saml2X509Credential.decryption(privateRSAKey, cert)))
        .build();
    return new InMemoryRelyingPartyRegistrationRepository(registration);
  }
</code></pre>
<p>I didn't find any documentation on spring to do that either.
This piece of code works to read your keystore file however it is not enough alone to make saml work with spring security 6. I suggest you refer to this documentation to implement your filters and the security filter chain that goes with this <code>RelyingPartyRegistrationRepository</code> bean : <a href=""https://docs.spring.io/spring-security/reference/servlet/saml2/login/overview.html"" rel=""nofollow noreferrer"">SAML 2.0 Login Overview</a></p>
",,2024-04-23 08:58:55
78847164,2,74406539,,0,,13877660.0,,"<p>Use the <code>UriBuilder.toTemplate()</code> method. This approach ensures that the URI includes both the actual and template parameters as needed.</p>
<pre><code>String key = &quot;b4o3h4{g}fghg3&quot;;
String uri = UriBuilder.fromUri(getUriForName(name))
    .queryParam(&quot;name&quot;, name)
    .queryParam(&quot;key&quot;, key)
    .toTemplate();
</code></pre>
",,2024-08-08 07:56:16
75177656,2,67843986,,5,,21046088.0,,"<p>I found a method trying to capitalize a string that came from the API and it apparently worked, found it in the Kotlin docs:</p>
<pre><code>println(&quot;kotlin&quot;.replaceFirstChar { it.uppercase() }) // Kotlin
</code></pre>
<p>and use it like this in my code:</p>
<pre><code> binding.textDescriptions.text = &quot;${it.Year} - ${it.Type.replaceFirstChar {it.uppercase()}}&quot;
</code></pre>
",,2023-01-19 20:00:48
75252067,2,75249068,,1,,7729375.0,,"<p>When doing Kotlin -&gt; Java interrop, Kotlin has specific Array types to help deal with this kind of ambiguous Type.</p>
<p>In this case you will want to use <code>IntArray</code> in Kotlin to map to the proper type in Java</p>
<p>There are a number of other Primitive array types such as:
ByteArray, ShortArray, IntArray</p>
<p>Reference:
<a href=""https://kotlinlang.org/docs/arrays.html#primitive-type-arrays"" rel=""nofollow noreferrer"">https://kotlinlang.org/docs/arrays.html#primitive-type-arrays</a></p>
",,2023-01-26 21:58:03
75370393,2,75367786,,1,,1731626.0,,"<p>At first glance, it's quite hard to say why it is slow. What I see is that <code>synchronized(commandQueue)</code> is being used while <code>ConcurrentLinkedQueue</code> is already a thread-safe queue, so the <code>synchronized(commandQueue)</code> can be omitted.</p>
<p>Using features of Kotlin coroutines, I would use a <code>Flow</code> in this case, particularly <a href=""https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-mutable-shared-flow/"" rel=""nofollow noreferrer""><code>MutableSharedFlow</code></a>. It is thread-safe and uses principles of queue. For example in this case it would look like the following:</p>
<pre><code>private val commandFlow = MutableSharedFlow&lt;(input: String) -&gt; Unit&gt;()

suspend fun addItemToQueue(item: (input: String) -&gt; Unit) {
    commandFlow.emit(item1) // emitting item to commandFlow
}

private fun setupQueuePolling() {
    viewModelScope.launch {
        // handle commands emitted in addItemToQueue() method.
        commandFlow.collect { item -&gt;
            item(&quot;This is input&quot;)
        }
    }
}
</code></pre>
<p>If this doesn't improve the speed, further investigation should be made, perhaps BLE device executes commands slowly. Additional logs of each operation could be helpful.</p>
",,2023-02-07 07:59:42
75484138,2,56542778,,1,,21233558.0,,"<p>This is now detailed in the official docs:</p>
<p><a href=""https://www.tensorflow.org/api_docs/python/tf/distribute/Strategy#scope"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/distribute/Strategy#scope</a></p>
<p>Essentially, anything that creates variables that need to be distributed across replicas should be initialized inside the strategy's scope (e.g. Models, Optimizers, Metrics).</p>
<p>If you are using the high-level model API (<code>model.fit()</code>, <code>model.predict()</code>) then likely all of your distributed variable creation will occur in the model creation and compilation steps. Therefore, as shown in <a href=""https://stackoverflow.com/a/57396722/21233558"">Rishabh Sahrawat's answer</a>, only these two steps need to occur in the strategy's scope.</p>
<p>However, if you are writing a custom training loop and need to define your variables explicitly, then these will also need to be in scope:</p>
<pre><code>strategy = tf.distribute.MirroredStrategy()
with strategy.scope():
  model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(10)
  ])
  optimizer = tf.keras.optimizers.Adam()
  loss_object = tf.keras.losses.SparseCategoricalCrossentropy(
    from_logits=True, reduction=tf.keras.losses.Reduction.NONE
  )
  def loss_fn(labels, predictions):
    per_example_loss = loss_object(labels, predictions)
    return tf.nn.compute_average_loss(per_example_loss, global_batch_size=GLOBAL_BATCH_SIZE)
  train_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='train_accuracy')
</code></pre>
<p>Note that you can enter the strategy's scope without using the scope context manager, for example through the <code>strategy.run</code> and <code>strategy.reduce</code> APIs.</p>
<p>Addressing the list of operations needing to be in a <code>with ...scope()</code> block:</p>
<ul>
<li>Optimizer creation: <strong>Yes</strong>* -- if manually defined. If created using <code>model.compile()</code>, then model object must be defined inside scope.</li>
<li>Dataset creation: <strong>No</strong></li>
<li>Dataset experimental_distribute_dataset: <strong>No</strong></li>
<li>apply_gradients call: <strong>No</strong>* -- <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training#training_loop"" rel=""nofollow noreferrer"">as recommended in the docs</a>, the training step should be called using <code>strategy.run</code> which enters the strategy's scope internally.</li>
<li>experimental_run_v2: <strong>No</strong>* -- this is now deprecated in favour of <code>strategy.run</code> which does not need to be wrapped in strategy's scope.</li>
</ul>
",,2023-02-17 12:14:19
75705626,2,75701185,,1,,8270312.0,,"<p>In your case, <code>ragged_rank</code> is 1 in fact. Thus <code>tf.reduce_mean</code> can be used as follows</p>
<pre class=""lang-py prettyprint-override""><code>list_points = tf.ragged.constant(
    [
        [[2,3], [2,4], [3,6], [4,8]], 
        [[7,3], [10,9]], 
        [[10,12], [14,17], [13,15]]
    ],
    ragged_rank=1,
    dtype=tf.float32
)
list_points.shape
# TensorShape([3, None, 2])

mean = tf.reduce_mean(list_points, axis=[0, 1])
# tf.Tensor: shape=(2,), dtype=float64, numpy=array([7.22222222, 8.55555556])&gt;

std = tf.reduce_mean(list_points**2, axis=[0, 1]) - tf.reduce_mean(list_points, axis=[0, 1])**2
# &lt;tf.Tensor: shape=(2,), dtype=float64, numpy=array([19.72839506, 23.80246914])&gt;
</code></pre>
<p>We can subtract (add, multiply, etc) from a ragged tensor of ragged rank 1 an ordinary tensor of rank 1 if their first dimensions coincides.</p>
<pre class=""lang-py prettyprint-override""><code>list_points - mean
# &lt;tf.RaggedTensor [[[-5.2222223, -5.5555553],
#   [-5.2222223, -4.5555553],
#   [-4.2222223, -2.5555553],
#   [-3.2222223, -0.55555534]], [[-0.22222233, -5.5555553],
#                                [2.7777777, 0.44444466]]  ,
#  [[2.7777777, 3.4444447],
#   [6.7777777, 8.444445],
#   [5.7777777, 6.4444447]]]&gt;
</code></pre>
<p>This is possible because under the hood of the raged tensor of ragged rank 1 we have an ordinary tensor</p>
<pre class=""lang-py prettyprint-override""><code>list_points.values.shape
# TensorShape([9, 2])
</code></pre>
<p>For <code>ragged_rank &gt; 1</code> case we can attract <a href=""https://www.tensorflow.org/api_docs/python/tf/math/segment_mean"" rel=""nofollow noreferrer""><code>tf.math.segment_mean</code></a>
that is more tricky.</p>
",,2023-03-11 14:30:21
75968141,2,75966165,,47,,642706.0,,"<h1>tl;dr</h1>
<ul>
<li>To construct a URL, use <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/net/URI.html#toURL()"" rel=""noreferrer""><code>URI::toURL</code></a>.</li>
<li>To construct a relative URL, first create the <code>URI</code> using the context URI and then call <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/net/URI.html#resolve(java.lang.String)"" rel=""noreferrer""><code>URI::resolve</code></a> with the URI you wish to make relative.</li>
<li>To construct a <code>file:</code> based URL, (1) call <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Path.html#toUri()"" rel=""noreferrer""><code>Path::toURI</code></a>, (2) then <code>URI::toURL</code>.</li>
</ul>
<p>Ex: <code>URI uri = Paths.get( &quot;/Users/your_user_name/example.txt&quot; ).toUri() ;</code></p>
<h1>Details</h1>
<p>Understand that:</p>
<ul>
<li><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/net/URL.html#%3Cinit%3E(java.lang.String)"" rel=""noreferrer""><code>java.net.URL</code></a> is an ancient class, dating from Java 1. That class does not encode or decode any URL components according to the <a href=""https://www.rfc-editor.org/rfc/rfc2396"" rel=""noreferrer"">RFC 2396</a> escaping mechanism.</li>
<li><a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/net/URI.html"" rel=""noreferrer""><code>java.net.URI</code></a> class came later, in Java 4.</li>
</ul>
<p>Read this note from the Java team, <a href=""https://inside.java/2023/02/15/quality-heads-up/"" rel=""noreferrer"">Oracle: Quality Outreach Heads-up - JDK 20: Deprecate URL Public Constructors</a>. To quote:</p>
<blockquote>
<p>JDK 20 will deprecate all public constructors of java.net.URL. … To construct a URL, the <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/net/URI.html#toURL()"" rel=""noreferrer""><code>URI::toURL</code></a> alternative should instead be preferred. To construct a <code>file:</code> based URL, <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Path.html#toUri()"" rel=""noreferrer""><code>Path::toURI</code></a> should be used prior to <code>URI::toURL</code>.</p>
</blockquote>
<p>And see the <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/net/URL.html#constructor-deprecation"" rel=""noreferrer"">note on constructor deprecation</a> within the Javadoc  of <code>URL</code> class.</p>
<p>See also the issue-tracker page, <a href=""https://bugs.openjdk.org/browse/JDK-8294241"" rel=""noreferrer"">JDK-8294241 Deprecate URL public constructors</a>.</p>
<h2>Example: File path URI</h2>
<p>For working with files in modern Java, use <a href=""https://docs.oracle.com/javase/8/docs/technotes/guides/io/index.html"" rel=""noreferrer"">NIO.2</a> features.</p>
<ol>
<li>The <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Paths.html"" rel=""noreferrer""><code>Paths</code></a> class can produce a <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Path.html"" rel=""noreferrer""><code>Path</code></a> object.</li>
<li>From there, ask that <code>Path</code> to <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Path.html#toUri()"" rel=""noreferrer"">produce a <code>URI</code></a>.</li>
</ol>
<pre class=""lang-java prettyprint-override""><code>Path path = Paths.get( &quot;/Users/your_user_name/example.txt&quot; ) ;
URI uri = path.toUri () ;
</code></pre>
<blockquote>
<p>uri.toString() = file:///Users/your_user_name/example.txt</p>
</blockquote>
<p>Going <a href=""https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Paths.html#get(java.net.URI)"" rel=""noreferrer"">the other direction</a>:</p>
<pre><code>Path path = Paths.get( uri ) ;
</code></pre>
",,2023-04-08 23:35:12
76013423,2,68810123,,1,,377320.0,,"<p>ByteBuffer supports putInt(), putLong() etc, so you can call <code>buf.putInt(unsignedInt.toInt())</code>. Alternatively use <a href=""https://github.com/mvysny/kotlin-unsigned-jvm"" rel=""nofollow noreferrer"">https://github.com/mvysny/kotlin-unsigned-jvm</a></p>
",,2023-04-14 09:13:46
76830156,2,66613717,,13,,1191124.0,,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",,2023-08-03 16:55:58
76836687,2,76822814,,0,,7160105.0,,"<p>So, when tf-models-official or slim is installed, the tf_slim package is installed as well (<a href=""https://github.com/google-research/tf-slim/tree/master"" rel=""nofollow noreferrer"">https://github.com/google-research/tf-slim/tree/master</a>). Here, the tf_slim.layers.utils module was updated to import 'tensor' from 'tensorflow.python.framework'. However, the 'tensor' module is only present starting from tensorflow==2.13. You can see this by comparing the different branches here: <a href=""https://github.com/tensorflow/tensorflow/tree/r2.13/tensorflow/python/framework"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/tree/r2.13/tensorflow/python/framework</a></p>
<p>I made it work by installing tensorflow==2.13:</p>
<ol>
<li><p><code>pip install tensorflow==2.13</code></p>
</li>
<li><p><code>tf-models-official==2.13</code> (possibly not necessary)</p>
</li>
<li><p><code>cd /path/to/clone/repo</code></p>
</li>
<li><p><code>git clone https://github.com/tensorflow/models/</code>
(as described here <a href=""https://github.com/tensorflow/models/tree/master/research/slim"" rel=""nofollow noreferrer"">https://github.com/tensorflow/models/tree/master/research/slim</a>)</p>
</li>
<li></li>
</ol>
<p>in my python script:</p>
<pre><code>import sys
sys.path.append(&quot;/path/to/clone/repo/models/research/slim&quot;)
from nets.inception_v4 import *
</code></pre>
",,2023-08-04 14:06:12
76896240,2,76896037,,0,,2622026.0,,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",,2023-08-14 04:17:09
76954286,2,76928829,,1,,9552485.0,,"<p>This is insane. The error was because I forgot to add <code>?</code> to <code>args: Any</code> in my kotlin code. Something like below</p>
<pre><code>override fun onListen(args: Any?, events: EventChannel.EventSink) {
</code></pre>
",,2023-08-22 14:27:06
76966133,2,76965100,,0,,14580500.0,,"<p>I have modified your code based on your design premise.<br />
The exception is you have not deal the node as a simple node ,you think you just put a node after less and great.But actually you put the linked list after the less and great so that the cycle appeared.<br />
The follow is my code .</p>
<pre><code>public static ListNode partition(ListNode head, int x) {
        ListNode lesser = new ListNode(-101);
        ListNode less = lesser;
        ListNode greater = new ListNode(-101);
        ListNode great = greater;
        while(head!=null){
            ListNode temp= head;
            head = head.next;
            //this is important ,to cut the list to a single node
            temp.next = null;
            if(temp.val&lt;x){
                less.next=temp;
                less=less.next;
            }
            else{
                great.next=temp;
                great=great.next;
            }
        }


        less.next = greater.next;
        return lesser.next;
    }
</code></pre>
",,2023-08-24 03:56:49
76974736,2,76838126,,3,,14910363.0,,"<p>No, Media3 provides you with all the tools and APIs necessary to make the service its own standalone music player, so that controllers like Android Auto can access your music and play it, without the actual need for activities and other things. This means that you store your playlists on the service-side, you do everything on the service-side, and if you're willing to make a music player app, the activity can grab information from the service using APIs that are available by Media3 such as <code>getChildren</code>...etc</p>
<p>The powerful thing about the library is that you can <code>sendCustomCommand</code> which contain bundles of pretty much everything you need, this would prove helpful when you want to communicate between an activity and the service, but it's completely unnecessary when the app is being navigated via a controller like Android Auto and not the actual mobile app. A song is defined by its MediaId, so I believe that's all you need to make a song playable, also, services provide you with an <code>applicationContext</code> so you can query MediaStore all you want, and use Datastore or SharedPreferences all you want as well.</p>
<p>Here's an example MusicLibraryService which you can reference from (this is a bit of an advanced case where I am using two separate playlists (a tracklist and an actual playlist, both of which can be queued separately depending on which one the user picks from), also, it's a MedialibraryService so the hierarchy is very important. The very top-level parent root item is invisible, but it's extremely capital to the functionality of the service, because the whole hierarchy propagates from it, you can include mediaitems right below it if you're having one huge playlist, but the more levels of hierarchy you have the more complicated it gets. I suggest you take it step by step and get yourself familiarzed with MediaLibraryService using one root item and have children below directly first:</p>
<pre class=""lang-kotlin prettyprint-override""><code>class MusicPlayerService : MediaLibraryService() {

    lateinit var player: Player
    private var session: MediaLibrarySession? = null

    private val serviceIOScope = CoroutineScope(Dispatchers.IO)
    private val serviceMainScope = CoroutineScope(Dispatchers.Main)

    /** This is the root item that is parent to our playlist.
     *  It is necessary to have a parent item otherwise there is no &quot;library&quot; */
    val rootItem = MediaItem.Builder()
        .setMediaId(nodeROOT)
        .setMediaMetadata(
            MediaMetadata.Builder()
                .setIsBrowsable(false)
                .setIsPlayable(false)
                .setMediaType(MediaMetadata.MEDIA_TYPE_FOLDER_MIXED)
                .setTitle(&quot;MyMusicAppRootWhichIsNotVisibleToControllers&quot;)
                .build()
        )
        .build()

    val subroot_TracklistItem = MediaItem.Builder()
        .setMediaId(nodeTRACKLIST)
        .setMediaMetadata(
            MediaMetadata.Builder()
                .setIsBrowsable(true)
                .setIsPlayable(false)
                .setMediaType(MediaMetadata.MEDIA_TYPE_FOLDER_MIXED)
                .setTitle(&quot;Tracklist&quot;)
                .setArtworkUri(
                    Uri.parse(&quot;android.resource://mpappc/drawable/ic_tracklist&quot;)
                )
                .build()
        )
        .build()

    val subroot_PlaylistItem = MediaItem.Builder()
        .setMediaId(nodePLAYLIST)
        .setMediaMetadata(
            MediaMetadata.Builder()
                .setIsBrowsable(true)
                .setIsPlayable(false)
                .setMediaType(MediaMetadata.MEDIA_TYPE_FOLDER_MIXED)
                .setTitle(&quot;Playlist&quot;)
                .setArtworkUri(
                    Uri.parse(&quot;android.resource://mpappc/drawable/ic_tracklist&quot;)
                )
                .build()
        )
        .build()

    val rootHierarchy = listOf(subroot_TracklistItem, subroot_PlaylistItem)


    var tracklist = mutableListOf&lt;MediaItem&gt;()
    var playlist = mutableListOf&lt;MediaItem&gt;()

    var latestSearchResults = mutableListOf&lt;MediaItem&gt;()

    /** This will fetch music from the source folder (or the entire device if not specified) */
    private fun queryMusic(initial: Boolean = false) {
        val sp = PreferenceManager.getDefaultSharedPreferences(applicationContext)
        val src = sp.getString(&quot;music_src_folder&quot;, &quot;&quot;) ?: &quot;&quot;

        serviceIOScope.launch {
            scanMusic(applicationContext, uri = if (src == &quot;&quot;) null else src.toUri()) {
                tracklist.clear()
                tracklist.addAll(it)

                if (initial) {
                    serviceMainScope.launch {
                        player.setMediaItems(tracklist)
                    }
                }

                session?.notifyChildrenChanged(nodeTRACKLIST, tracklist.size, null)
            }
        }
    }

    override fun onCreate() {
        super.onCreate()

        restorePlaylist(applicationContext) {
            playlist.clear()
            playlist.addAll(it)

            session?.notifyChildrenChanged(nodePLAYLIST, playlist.size, null)
        }

        /** Building ExoPlayer to use FFmpeg Audio Renderer and also enable fast-seeking */
        player = ExoPlayer.Builder(applicationContext)
            .setSeekParameters(SeekParameters.CLOSEST_SYNC) /* Enabling fast seeking */
            .setRenderersFactory(
                DefaultRenderersFactory(this).setExtensionRendererMode(
                    DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER /* We prefer extensions, such as FFmpeg */
                )
            )
            .setWakeMode(C.WAKE_MODE_LOCAL) /* Prevent the service from being killed during playback */
            .setHandleAudioBecomingNoisy(true) /* Prevent annoying noise when changing devices */
            .setAudioAttributes(AudioAttributes.DEFAULT, true)
            .build()

        player.repeatMode = Player.REPEAT_MODE_ALL

        //Fetching music when the service starts
        queryMusic(true)

        /** Listening to some player events */
        player.addListener(object : Player.Listener {
            override fun onMediaItemTransition(mediaItem: MediaItem?, reason: Int) {
                super.onMediaItemTransition(mediaItem, reason)

                //Controlling Android Auto queue here intelligently
                if (mediaItem != null &amp;&amp; player.mediaItemCount == 1) {
                    val playlistfootprint = mediaItem.mediaMetadata.extras?.getBoolean(&quot;isplaylist&quot;, false) == true

                    if (playlistfootprint &amp;&amp; playlist.size &gt; 1) {
                        val index = playlist.indexOfFirst { it.mediaId == mediaItem.mediaId }
                        player.setMediaItems(playlist, index, 0)
                        setPlaybackMode(PlayBackMode.PBM_PLAYLIST)
                    }

                    if (!playlistfootprint &amp;&amp; tracklist.size &gt; 1) {
                        val index = tracklist.indexOfFirst { it.mediaId == mediaItem.mediaId }
                        player.setMediaItems(tracklist, index, 0)
                        setPlaybackMode(PlayBackMode.PBM_TRACKLIST)
                    }
                }
            }

            override fun onPlayerError(error: PlaybackException) {
                error.printStackTrace()

                Log.e(&quot;PLAYER&quot;, error.stackTraceToString())
            }
        })

        /** Creating our MediaLibrarySession which is an advanced extension of a MediaSession */
        session = MediaLibrarySession
            .Builder(this, player, object : MediaLibrarySession.Callback {
                override fun onGetItem(session: MediaLibrarySession, browser: MediaSession.ControllerInfo, mediaId: String): ListenableFuture&lt;LibraryResult&lt;MediaItem&gt;&gt; {
                    return super.onGetItem(session, browser, mediaId)
                }

                override fun onSetMediaItems(
                    mediaSession: MediaSession,
                    controller: MediaSession.ControllerInfo,
                    mediaItems: MutableList&lt;MediaItem&gt;,
                    startIndex: Int,
                    startPositionMs: Long
                ): ListenableFuture&lt;MediaItemsWithStartPosition&gt; {
                    val newItems = mediaItems.map {
                        it.buildUpon().setUri(it.mediaId).build()
                    }.toMutableList()

                    return super.onSetMediaItems(mediaSession, controller, newItems, startIndex, startPositionMs)
                }

                override fun onGetLibraryRoot(session: MediaLibrarySession, browser: MediaSession.ControllerInfo, params: LibraryParams?): ListenableFuture&lt;LibraryResult&lt;MediaItem&gt;&gt; {
                    return Futures.immediateFuture(LibraryResult.ofItem(rootItem, params))
                }

                override fun onGetChildren(
                    session: MediaLibrarySession, browser: MediaSession.ControllerInfo,
                    parentId: String, page: Int, pageSize: Int, params: LibraryParams?
                ): ListenableFuture&lt;LibraryResult&lt;ImmutableList&lt;MediaItem&gt;&gt;&gt; {

                    return Futures.immediateFuture(
                        LibraryResult.ofItemList(
                            when (parentId) {
                                nodeROOT -&gt; rootHierarchy
                                nodeTRACKLIST -&gt; tracklist
                                nodePLAYLIST -&gt; playlist
                                else -&gt; rootHierarchy
                            },
                            params
                        )
                    )
                }


                override fun onSubscribe(session: MediaLibrarySession, browser: MediaSession.ControllerInfo, parentId: String, params: LibraryParams?): ListenableFuture&lt;LibraryResult&lt;Void&gt;&gt; {
                    session.notifyChildrenChanged(
                        parentId,
                        when (parentId) {
                            nodeROOT -&gt; 2
                            nodeTRACKLIST -&gt; tracklist.size
                            nodePLAYLIST -&gt; playlist.size
                            else -&gt; 0
                        },
                        params
                    )
                    return Futures.immediateFuture(LibraryResult.ofVoid()) //super.onSubscribe(session, browser, parentId, params)
                }

                /** In order to end the service from our media browser side (UI side), we receive
                 * our own custom command (which is [CUSTOM_COM_END_SERVICE]). However, the session
                 * is not designed to accept foreign weird commands. So we edit the onConnect callback method
                 * to make sure it accepts it.
                 */
                override fun onConnect(session: MediaSession, controller: MediaSession.ControllerInfo): MediaSession.ConnectionResult {
                    val sessionComs = super.onConnect(session, controller).availableSessionCommands
                        .buildUpon()
                        .add(CUSTOM_COM_PLAY_ITEM) //Command executed when an item is requested to play
                        .add(CUSTOM_COM_END_SERVICE) //This one is called to end the service manually from the UI
                        .add(CUSTOM_COM_PLAYLIST_ADD) //Command used when adding items to playlist
                        .add(CUSTOM_COM_PLAYLIST_REMOVE) //Command used when removing items from playlist
                        .add(CUSTOM_COM_PLAYLIST_CLEAR) //Command used when clearing all items from playlist
                        .add(CUSTOM_COM_SCAN_MUSIC) //Command use to execute a music scan
                        .add(CUSTOM_COM_TRACKLIST_FORGET) //Used when an item is to be forgotten (swipe left)
                        .build()

                    val playerComs = super.onConnect(session, controller).availablePlayerCommands

                    return MediaSession.ConnectionResult.accept(sessionComs, playerComs)
                }

                /** Receiving some custom commands such as the command that ends the service.
                 * In order to make the player accept newly customized foreign weird commands, we have
                 * to edit the onConnect callback method like we did above */
                override fun onCustomCommand(
                    session: MediaSession,
                    controller: MediaSession.ControllerInfo,
                    customCommand: SessionCommand,
                    args: Bundle
                ): ListenableFuture&lt;SessionResult&gt; {

                    /** When the controller tries to add an item to the playlist */
                    if (customCommand == CUSTOM_COM_PLAY_ITEM) {
                        args.getString(&quot;id&quot;)?.let { mediaid -&gt;
                            if (args.getBoolean(&quot;playlist&quot;, false)) {
                                val i = playlist.indexOfFirst { it.mediaId == mediaid }
                                setPlaybackMode(PlayBackMode.PBM_PLAYLIST)
                                player.setMediaItems(playlist, i, 0)
                            } else {
                                val i = tracklist.indexOfFirst { it.mediaId == mediaid }
                                setPlaybackMode(PlayBackMode.PBM_TRACKLIST)
                                player.setMediaItems(tracklist, i, 0)
                            }

                            player.prepare()
                            player.play()
                            return Futures.immediateFuture(SessionResult(RESULT_SUCCESS))

                        }
                    }

                    /** When the controller (like the app) closes fully, we need to disconnect */
                    if (customCommand == CUSTOM_COM_END_SERVICE) {
                        session.release()
                        player.release()
                        this@MusicPlayerService.stopSelf()

                        return Futures.immediateFuture(SessionResult(RESULT_SUCCESS))
                    }

                    /** When the user changes the source folder */
                    if (customCommand == CUSTOM_COM_SCAN_MUSIC) {
                        queryMusic()

                        return Futures.immediateFuture(SessionResult(RESULT_SUCCESS))
                    }

                    /** When the controller tries to add an item to the playlist */
                    if (customCommand == CUSTOM_COM_PLAYLIST_ADD) {
                        args.getString(&quot;id&quot;)?.let { mediaid -&gt;
                            tracklist.firstOrNull { it.mediaId == mediaid }?.let { itemToAdd -&gt;

                                itemToAdd.playlistFootprint(true)

                                playlist.add(itemToAdd)

                                serviceIOScope.launch {
                                    /** notifying UI-end that the playlist has been modified */
                                    this@MusicPlayerService.session?.apply {
                                        notifyChildrenChanged(
                                            controller,
                                            nodePLAYLIST,
                                            playlist.size,
                                            null
                                        )
                                    }

                                    /** Saving the playlist to memory as it is now */
                                    snapshotPlaylist(playlist)
                                }

                                return Futures.immediateFuture(SessionResult(RESULT_SUCCESS))
                            }
                        }
                    }

                    /** When the controller tries to remove an item from the playlist */
                    if (customCommand == CUSTOM_COM_PLAYLIST_REMOVE) {
                        args.getString(&quot;id&quot;)?.let { mediaid -&gt;
                            playlist.firstOrNull { it.mediaId == mediaid }?.let { itemToRemove -&gt;
                                playlist.remove(itemToRemove)

                                serviceIOScope.launch {
                                    /** notifying UI-end that the playlist has been modified */
                                    this@MusicPlayerService.session?.apply {
                                        notifyChildrenChanged(
                                            controller,
                                            nodePLAYLIST,
                                            playlist.size,
                                            null
                                        )
                                    }

                                    /** Saving the playlist to memory as it is now */
                                    snapshotPlaylist(playlist)
                                }

                                return Futures.immediateFuture(SessionResult(RESULT_SUCCESS))
                            }
                        }
                    }

                    /** When the controller tries to clear the playlist */
                    if (customCommand == CUSTOM_COM_PLAYLIST_CLEAR) {
                        playlist.clear()
                        this@MusicPlayerService.session?.apply {
                            notifyChildrenChanged(
                                controller,
                                nodePLAYLIST,
                                0,
                                null
                            )
                        }

                        /** Saving the playlist to memory as it is now */
                        snapshotPlaylist(playlist)

                        return Futures.immediateFuture(SessionResult(RESULT_SUCCESS))
                    }

                   
                          
                        }
                    }

                    return super.onCustomCommand(session, controller, customCommand, args)
                }
            })
            .build()

    }

    override fun onGetSession(controllerInfo: MediaSession.ControllerInfo): MediaLibrarySession? {
        return session
    }


    override fun onDestroy() {
        snapshotPlaylist(playlist)
        session?.run {
            player.release()
            release()
            session = null
        }
        super.onDestroy()
    }
</code></pre>
<p><strong>Please note</strong> that some functions are not defined in the reference above, that's because they're not directly relevant to our topic, for example the <code>scanMusic</code> call, it's just a function where I query MediaStore and return a lambda with a list of queried mediaitems... So do focus on the actual media3 APIs and how everything is put together</p>
",,2023-08-25 06:26:29
76977676,2,76940787,,0,,2846138.0,,"<p>You can specify the field &quot;Base URL&quot; in the client configuration in KeyCloak - this determines the link from the Applications List. You can use an absolute URL with protocol and host there. But as you could configure multiple valid redirect URIs it's probably not possible to make this configuration dependent on that field.</p>
",,2023-08-25 13:29:18
76987731,2,76987507,,1,,14580500.0,,"<p>How about use the spring.profiles.active?<br />
You can define a variable in your different environment.<br />
Make three properties file in your code.
One is application.properties,
it just set spring.profiles.active = ${Your environment variable name}<br />
The other two is container.properties and dev.properties,define the different environment variable.<br />
Then set the different variable in your develop operate system and your container system.</p>
",,2023-08-27 15:19:21
76992601,2,76992504,,1,,115145.0,,"<blockquote>
<p>my question is how an Android app's internal notification settings is synced with the Android OS to manage which notifications to show and which ones to block (mute)?</p>
</blockquote>
<p>Android itself does not have a concept of &quot;internal notification settings&quot;.</p>
<p>All notifications from an app are created by the app and handed to the OS via <code>NotificationManager</code>. The OS then applies system rules for how they should be handled, such as those configured by the user via the system Settings app.</p>
<p>If an app <em>also</em> has its own concept of &quot;internal notification settings&quot;, that would control when the app actually invokes <code>NotificationManager</code>.</p>
<blockquote>
<p>Is it like the OS will pass the received notification to the intended app and then it decides - based on its internal settings- which one to show? Or the app will give the user-defined notification settings to the OS (by some API or ...) and then OS filters the notifications and decides what to show or not?</p>
</blockquote>
<p>Neither of those are correct.</p>
",,2023-08-28 11:59:39
77003634,2,77003446,,1,,9164010.0,,"<blockquote>
<p><em>One way could be to maintain a boolean variable var insideA=false, (…)</em></p>
</blockquote>
<p>Yes, that looks like the usual way to address your goal using SAX.</p>
<blockquote>
<p>Any suggestions for an alternative approach?</p>
</blockquote>
<p>SAX is a bit complex to setup, but &quot;better&quot; than DOM / XPath regarding memory usage. Anyway:</p>
<h2>If your XML document fits in RAM,</h2>
<p>you can also try using <a href=""https://en.wikipedia.org/wiki/XPath#Syntax_and_semantics_(XPath_1.0)"" rel=""nofollow noreferrer"">XPath</a> (internally based on the DOM model), which is simpler to use.</p>
<p><em>As you tagged your question with</em> <a href=""/questions/tagged/java"" class=""post-tag"" title=""show questions tagged &#39;java&#39;"" aria-label=""show questions tagged &#39;java&#39;"" rel=""tag"" aria-labelledby=""tag-java-tooltip-container"">java</a>, here is a <a href=""https://www.baeldung.com/java-xpath"" rel=""nofollow noreferrer"">nice tutorial for evaluating XPath expressions in Java</a>, see also the official <a href=""https://www.w3.org/TR/xpath/"" rel=""nofollow noreferrer"">W3C spec. (a.k.a. recommendation)</a>, and <a href=""https://www.freeformatter.com/xpath-tester.html"" rel=""nofollow noreferrer"">this online XPath tester</a>.</p>
<h2>If your XML is huge and you find SAX a bit annoying to use,</h2>
<p>you can try using <a href=""https://en.wikipedia.org/wiki/StAX"" rel=""nofollow noreferrer"">StAX</a>, which combines the performance of streaming-based parsing and the usability of <a href=""https://en.wikipedia.org/wiki/XML#Pull_parsing"" rel=""nofollow noreferrer"">&quot;pull parsing&quot;</a> (roughly, no callback anymore).</p>
<p>See also <a href=""https://howtodoinjava.com/java/xml/read-xml-stax-parser-cursor-iterator/"" rel=""nofollow noreferrer"">this example tutorial in Java</a>.</p>
",,2023-08-29 21:03:23
77013962,2,77009524,,2,,22455420.0,,"<p>It is redundant, which I just confirmed with some snippet code,</p>
<p><em><strong>But why?</strong></em></p>
<p>I did a bit of digging into it with following sample snippet,</p>
<pre><code>package basic

class SimpleCoroutine {
    private suspend fun foo(): String {
        return bar()
    }

    private suspend fun foo1(): Any {
        return bar1()
    }

    private suspend fun foo2(): RandomSingleton {
        return bar2()
    }

    private suspend fun foo3() {
        return bar3()
    }
}
</code></pre>
<p><em>The generated code is as follows</em></p>
<pre><code>public final class SimpleCoroutine {
   private final Object foo(Continuation $completion) {
      return BarKt.bar($completion);
   }

   private final Object foo1(Continuation $completion) {
      return BarKt.bar1($completion);
   }

   private final Object foo2(Continuation $completion) {
      return BarKt.bar2($completion);
   }

   private final Object foo3(Continuation $completion) {
      Object var10000 = BarKt.bar3($completion);
      return var10000 == IntrinsicsKt.getCOROUTINE_SUSPENDED() ? var10000 : Unit.INSTANCE;
   }
}
</code></pre>
<p>In all function the generated code is almost identical to the source code except for the foo3, where the return type is <code>kotlin.Unit</code> which is a singleton from kotlin standard library. Now we all know that the default return type is <code>Unit</code> in kotlin.</p>
<p>So to clear the air I also made one singleton object of my own which I used to check with <code>foo2()</code> however there no redundant check is applied.</p>
<p>The only conclusion I can reach is that the compiler is doing guess work;</p>
<pre><code>Object var10000 = BarKt.bar($completion);
return var10000 == IntrinsicsKt.getCOROUTINE_SUSPENDED() ? var10000 : Unit.INSTANCE;
</code></pre>
<p>From the above snippet from your question,</p>
<pre><code>var10000 == IntrinsicsKt.getCOROUTINE_SUSPENDED() ? var10000 : Unit.INSTANCE;
</code></pre>
<p>The tricky part is that it is not sure whether the value returned by <code>BarKt.bar($completion);</code> will be <code>COROUTINE_SUSPENDED | kotlin.Unit</code>, it seems that compiler some how not sure for the right part will always <code>kotlin.Unit</code>, which is why it explicitly returns <code>Unit.INSTANCE</code>.</p>
",,2023-08-31 08:10:39
77032151,2,77031743,,2,,16637863.0,,"<p>You can create a custom view and then use it anywhere like a regular view in xml. Follow this <a href=""https://www.vogella.com/tutorials/AndroidCustomViews/article.html"" rel=""nofollow noreferrer"">tutorial</a> for more details.</p>
<ol>
<li>Create a layout for the custom view. Make sure that root tag for this layout is <code>&lt;merge&gt;</code>.</li>
</ol>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;merge xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;

    &lt;LinearLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:orientation=&quot;horizontal&quot;&gt;

        &lt;TextView
            android:id=&quot;@+id/text_first&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:textColor=&quot;@color/black&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot; /&gt;

        &lt;TextView
            android:id=&quot;@+id/text_second&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:textColor=&quot;@color/black&quot;
            android:layout_weight=&quot;1&quot;
            android:gravity=&quot;end&quot; /&gt;
    &lt;/LinearLayout&gt;
&lt;/merge&gt;
</code></pre>
<ol start=""2"">
<li>Define what properties you want to make configurable, and then define them in a <code>attrs.xml</code> file. You can create <code>attrs.xml</code> file inside your <code>values</code> folder.</li>
</ol>
<pre><code>&lt;declare-styleable name=&quot;CustomView&quot;&gt;
        &lt;attr name=&quot;text_first&quot; format=&quot;string&quot; /&gt;
        &lt;attr name=&quot;text_second&quot; format=&quot;string&quot; /&gt;
&lt;/declare-styleable&gt;
</code></pre>
<ol start=""3"">
<li>Create your custom view</li>
</ol>
<pre><code>public class CustomView extends LinearLayout{
    private TextView textFirst, textSecond;

    public CustomView(@NonNull Context context) {
        super(context);
    }

    public CustomView(@NonNull Context context, @Nullable AttributeSet attrs) {
        super(context, attrs);
        init(context, attrs);
    }

    public CustomView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init(context, attrs);
    }

    public void init(Context context, AttributeSet attrs) {
        if (context == null || attrs == null)
            return;
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CustomView, 0, 0);
        String first = a.getString(R.styleable.CustomView_text_first);
        String last = a.getString(R.styleable.CustomView_text_second);
        a.recycle();
        inflate(getContext(), R.layout.layout_custom_view, this);
        textFirst = findViewById(R.id.text_first);
        textSecond = findViewById(R.id.text_second);
        textFirst.setText(first);
        textSecond.setText(last);
    }
    
    // you can expose methods for attributes you want to set programatically
    public void setSecondText(String text) {
        textSecond.setText(text);
    }
}
</code></pre>
<ol start=""4"">
<li>Use your custom view</li>
</ol>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.MainActivity2&quot;&gt;


    &lt;com.example.CustomView
        android:id=&quot;@+id/top_custom_view&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:text_first=&quot;Hi...&quot;/&gt;

&lt;/LinearLayout&gt;
</code></pre>
<ol start=""5"">
<li>Change attributes programatically</li>
</ol>
<pre><code>public class MainActivity2 extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ActivityMain2Binding binding = ActivityMain2Binding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        CustomView customView = binding.topCustomView;
        customView.setSecondText(&quot;How are you?&quot;);
    }
}
</code></pre>
<p>Sample Output:</p>
<p><a href=""https://i.sstatic.net/Mj7tf.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Mj7tf.png"" alt=""enter image description here"" /></a></p>
",,2023-09-03 11:52:03
77034792,2,77034557,,0,,17758716.0,,"<blockquote>
<p><em>&quot;... I can only create lists with a single data type, in this instance being BufferedImages, but I want to be able to create one LinkedList for a BufferedImage and another for an int. Is there a better way to do this than making separate Node and LinkedList classes for each data type or overloading each class? ...&quot;</em></p>
</blockquote>
<p>Yes, you can use a <em>generic type</em>.</p>
<p><em><a href=""https://docs.oracle.com/javase/tutorial/java/generics/"" rel=""nofollow noreferrer"">Lesson: Generics (Updated) (The Java™ Tutorials &gt; Learning the Java Language)</a></em>.</p>
<pre class=""lang-java prettyprint-override""><code>LinkedList&lt;BufferedImage&gt; a = new LinkedList&lt;&gt;();
LinkedList&lt;Integer&gt; b = new LinkedList&lt;&gt;();
</code></pre>
<pre class=""lang-java prettyprint-override""><code>//Node class:
public class Node&lt;T&gt; {
    private T data;
    private Node&lt;T&gt; link;

    public Node&lt;T&gt; getLink() {
        return link;
    }

    public void setLink(Node&lt;T&gt; link){
        this.link = link;
    }

    public T getData(){
        return data;
    }

    public void setData(T data) {
        this.data = data;
    }

}
</code></pre>
<pre class=""lang-java prettyprint-override""><code>//LinkedList class:
public class LinkedList&lt;T&gt; {

    private Node&lt;T&gt; root;
    public Node&lt;T&gt; getRoot(){
        return root;
    }

    public void add(T data) {
        if (root == null) {
            root = new Node&lt;T&gt;();
            root.setData(data);
        } else {
            Node&lt;T&gt; tmp = root;
            while (tmp.getLink() != null) {
                tmp = tmp.getLink();
            }
            Node&lt;T&gt; n = new Node&lt;T&gt;();
            n.setData(data);
            tmp.setLink(n);
        }
    }

    public int size() {
        if (root == null) {
            return 0;
        }
        int count = 0;
        Node&lt;T&gt; tmp = root;
        while (tmp != null) {
            count++;
            tmp = tmp.getLink();
        }
        return count;
    }

    public T get(int pos) {
        if (pos &lt; 0 || pos &gt;= size()) {
            throw new IndexOutOfBoundsException(&quot;The index &quot; + pos + &quot; is out of bounds.&quot;);
        }

        Node&lt;T&gt; tmp = root;
        for (int i = 0; i &lt; pos; i++) {
            tmp = tmp.getLink();
        }
        return tmp.getData();
    }

    public void set(int pos, T data) {
        if (pos &lt; 0 || pos &gt;= size()) {
            throw new IndexOutOfBoundsException(&quot;The index &quot; + pos + &quot; is out of bounds.&quot;);
        }
        Node&lt;T&gt; tmp = root;
        for (int i = 0; i &lt; pos; i++) {
            tmp = tmp.getLink();
        }
        tmp.setData(data);
    }

    //DELETES LAST DATA
    public void delete(){
        if(root != null){
            Node&lt;T&gt; tmp = root;
            for(int i=0; i &lt; size()-2; i++){
                tmp = tmp.getLink();
            }
            tmp.setLink(null);
        }
    }

}
</code></pre>
",,2023-09-04 02:24:46
77041295,2,77041175,,2,,217324.0,,"<p>When optimizing code first analyze the code and determine where the bottleneck is, then address the bottleneck. Optimizing anything else is a waste of time.</p>
<p>Most applications have issues like slow network calls or unindexed queries, etc, that will be slowing things down. If virtual method lookups really are your bottleneck, then congratulations, you have a super fast program. At some point optimizing won't be cost effective and won't yield significant benefits, it is overwhelmingly likely you will hit that point way before virtual methods become an issue.  Part of optimization is knowing when to quit.</p>
<p>What we try to optimize for in real life is developer time, where we try to write code that is clear and not confusing. The benefit of polymorphism is that the flow of the program doesnt have to care about details of subclasses, which stay out of the way, unlike your if-tests which are mixed into the logic flow. Think of what a hassle it would be to add another subclass in the if-test version, how you would have to search for all the if checks and add another case.</p>
<p>2 main lessons:</p>
<ul>
<li><p>Measure before performance tuning so you can make an informed decision about whether it's worthwhile, don't make assumptions.</p>
</li>
<li><p>Optimize for your time, it is a lot more costly than a few cpu cycles.</p>
</li>
</ul>
",,2023-09-05 01:43:06
77074568,2,77000281,,1,,451941.0,,"<p>A namespace is not the same thing as a base URI, and there is no such thing as a &quot;base namespace&quot;. Namespaces are an abbreviation mechanism for URIs where you define a prefix that replaces the first part of a full URI with a short string, so that in your RDF data you can represent the URI with a &quot;prefixed name&quot; (depending on the specific RDF syntax what that looks like, exactly).</p>
<p>Base URIs, on the other hand, are a generic parser/writer mechanism that allows resolving <em>relative URIs</em> in the data. Some syntax formats (like XML) allow defining the base URI in the document itself, others don't, but they serve a different purpose than namespaces.</p>
<p>As an example, this XML snippet:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;rdf:RDF
xmlns:base=&quot;http://example.org/&quot;&gt;
  &lt;rdf:Description rdf:about=&quot;foo&quot;&gt;
....
</code></pre>
<p>is legal RDF, despite the fact that the RDF/XML syntax spec requires that the value of the <code>rdf:about</code> attribute (the <em>subject</em>) is a full URI. The reason it's legal is that a base URI is defined against which the string <code>foo</code> can be resolved as a relative URI. The resolved full URI will be <code>http://example.org/foo</code>. Note that this has <em>nothing</em> to do with namespaces.</p>
<p>What is happening in your code is that you are  not using base URIs at all. In the first part you are defining an RDF model in memory, using the <code>ModelBuilder</code>. You are adding the string <code>base:foo</code> as a subject URI. The <code>ModelBuilder</code> (actually, the <code>ValueFactory</code>, but it comes tot the same thing) interprets this as a full URI, because there is no namespace defined in the ModelBuilder that has <code>base</code> as its prefix.</p>
<p>Writing that model to XML file does not change that, regardless of what you define as base URI or namespaces <em>while writing</em>: you are exporting an RDF model that has <code>base:foo</code> as a full URI, so that's what you'll get in your output.</p>
<p>To get what you want, you need to make sure that your <code>Model</code> object has the full URIs, and that, instead of trying add a namespace to the writer, you set its base URI when <em>creating</em> the writer.</p>
<pre class=""lang-java prettyprint-override""><code>        var model = new ModelBuilder().add(&quot;http://example.org/foo&quot;, RDFS.ISDEFINEDBY, &quot;http://example.org/FOO&quot;).build();
        var writer = Rio.createWriter(RDFFormat.RDFXML, System.out, &quot;http://example.org/&quot;);

        writer.startRDF();
        for (Statement st : model) {
            writer.handleStatement(st);
        }
        writer.endRDF();
</code></pre>
<p>...or more succinctly:</p>
<pre class=""lang-java prettyprint-override""><code>        var model = new ModelBuilder().add(&quot;http://example.org/foo&quot;, RDFS.ISDEFINEDBY, &quot;http://example.org/FOO&quot;).build();

        Rio.write(model, System.out, &quot;http://example.org/&quot;, RDFFormat.RDFXML);
</code></pre>
<p>If you don't like having to write the full URI every time when creating your model, that's where namespaces can come in handy, for example:</p>
<pre class=""lang-java prettyprint-override""><code>        var model = new ModelBuilder().setNamespace(&quot;ex&quot;, &quot;http://example.org/&quot;)
                .add(&quot;ex:foo&quot;, RDFS.ISDEFINEDBY, &quot;ex:FOO&quot;).build();
</code></pre>
",,2023-09-10 01:50:01
77081924,2,77080811,,4,,2189127.0,,"<p>There are two things to know in order to understand why you are getting the behavior you're getting:</p>
<ol>
<li><code>MouseEvent.getX()</code> and <code>MouseEvent.getY()</code> give you the coordinates of the mouse event (i.e. the coordinates of the position of the mouse) <em>in the coordinate system of the source of the event</em> (i.e. the <code>Label</code>). So <code>getX()</code> and <code>getY()</code> will be relative to the current position of the <code>Label</code>.</li>
<li><code>translateX</code> and <code>translateY</code> are <em>properties</em> (so setting them will just change their value, and replace any previous value) which determine the amount the <code>Label</code> is moved from its layout position (essentially its original position).</li>
</ol>
<p>When you do</p>
<pre><code>node.setTranslateX(event.getX());
node.setTranslateY(event.getY());
</code></pre>
<p>you will move the node so its origin (top left) is at the same position as the mouse. If you could evaluate <code>getX()</code> and <code>getY()</code> for a new mouse event immediately after this, you would necessarily get <code>0</code> for both (because you have moved the node so its origin is where the mouse is).</p>
<p>To make this concrete, suppose the user clicks on the label at a position that is 11 pixels right and 8 pixels down from the top left of the label, and drags at a speed such that the mouse has moved one pixel right and one pixel down each time a drag event is detected. (This setup gives behavior similar to the values you see.)</p>
<p>This means the first drag event will occur with <code>getX()</code> returning <code>12</code> and <code>getY()</code> returning <code>9</code>. So you call</p>
<pre><code>node.setTranslateX(12);
node.setTranslateY(9);
</code></pre>
<p>which, as described above, moves the node so its top left is at the mouse cursor. (So now the mouse is at <code>(0,0)</code> relative to the node.)</p>
<p>The next drag event occurs after the mouse has moved right one pixel and down one pixel, so on that drag event <code>getX()</code> and <code>getY()</code> both return <code>1</code>. So now you call</p>
<pre><code>node.setTranslateX(1);
node.setTranslateY(1);
</code></pre>
<p>which moves the node back almost to its original position (just moved by one pixel right and down). If you could evaluate the position of the mouse relative to the node after this translation, you would get <code>(12,9)</code>: the mouse started at <code>(11,8)</code>, has moved two pixels right and down, and the node is moved one pixel right and down.</p>
<p>On the third drag event, the mouse moves a further pixel right and down, so <code>getX()</code> returns <code>13</code> and <code>getY()</code> returns <code>10</code>. You then call</p>
<pre><code>node.setTranslateX(13);
node.setTranslateY(10);
</code></pre>
<p>which again moves the origin of the node to the position of the mouse. So on the next drag event, the mouse has moved one pixel right and down relative to the node, and so <code>getX()</code> and <code>getY()</code> both return <code>1</code> again, so you move the node back almost to its original position.</p>
<p>And so it continues. Notice how you are alternately moving the node to under the mouse and moving it back close to its original position, creating the flickering you see, and creating the alternating values in your log.</p>
<p><a href=""https://stackoverflow.com/a/77081071/2189127"">User vv provides one solution</a> where you keep track of the coordinates of the node relative to the scene, which works. That isn't really necessary though; here is another solution.</p>
<p>The key point is that if you are dragging a node smoothly, the mouse will always remain in the same position relative to the node. Then the idea is to record where the mouse is originally pressed, and when the mouse is dragged move the node so that the mouse is back in the same relative position.</p>
<p>So the strategy is:</p>
<ol>
<li>Record the coordinates of the mouse relative to the node when the mouse is pressed.</li>
<li>On a mouse drag, measure how far the mouse has moved relative to its pressed coordinates.</li>
<li>Update the <code>translateX</code> and <code>translateY</code> coordinates by adding those differences to them. This will move the node so the mouse remains at the same relative coordinates.</li>
</ol>
<p>In the example described above, we would record on the mouse click that it occurred at <code>(11,8)</code>. The first mouse drag gives coordinates of <code>(12,9)</code>. We want to move the node so that the mouse is again at <code>(11,8)</code>, so we <em>increase</em> <code>translateX</code> by <code>12 - 11 = 1</code> and <em>increase</em> <code>translateY</code> by <code>9 - 8 = 1</code>:</p>
<pre><code>double deltaX = event.getX() - mouseDownLocation.x;
node.setTranslateX(node.getTranslateX() + deltaX);

double deltaY = event.getY() - mouseDownLocation.y;
node.setTranslateY(node.getTranslateY() + deltaY);
</code></pre>
<p>Here is an implementation and example:</p>
<pre><code>import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.Background;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

public class HelloApplication extends Application {
    @Override
    public void start(Stage stage) {
        VBox root = new VBox();
        root.setPadding(new Insets(20));
        root.setAlignment(Pos.CENTER);

        Label label = new Label(&quot;Label&quot;);
        label.setPadding(new Insets(5));
        label.setBackground(Background.fill(Color.LIMEGREEN));
        root.getChildren().add(label);

        makeNodeDraggable(label);

        Scene scene = new Scene(root, 400, 400);
        stage.setScene(scene);
        stage.show();
    }

    private void makeNodeDraggable(Node node) {
        var mouseDownLocation = new Object() { double x, y; };
        
        double originalTranslateX = node.getTranslateX();
        double originalTranslateY = node.getTranslateY();

        node.setOnMousePressed(e -&gt; {
            mouseDownLocation.x = e.getX();
            mouseDownLocation.y = e.getY();
        });

        node.setOnMouseDragged(e -&gt; {
            double deltaX = e.getX() - mouseDownLocation.x;
            node.setTranslateX(node.getTranslateX() + deltaX);
            double deltaY = e.getY() - mouseDownLocation.y;
            node.setTranslateY(node.getTranslateY() + deltaY);
        });

        // return to original position on release:
        node.setOnMouseReleased(e -&gt; {
            node.setTranslateX(originalTranslateX);
            node.setTranslateY(originalTranslateY);
        });
    }

    public static void main(String[] args) {
        launch();
    }
}
</code></pre>
",,2023-09-11 13:06:47
77085031,2,77077915,,1,,306030.0,,"<p>Obviously, you need to parse the whole document, and the fastest way way to arrive at a solution is to not include the &quot;filtered out&quot; elements in the document building process. Both DOM4J and JDOM are good alternatives for this, since they allow custom document builders that can defer or allow the tree construction based on previously obtained conditions. SAX/StAX is of course also an alternative, but at a lower level and require more infrastructure code to get a result.</p>
<p>Search this site for DOM4J/JDOM and builder, I may already have given the answer ;)</p>
",,2023-09-11 22:12:06
77145698,2,77145611,,4,,21144042.0,,"<p><strong>No, the parameters dont have any connection with the properties of the class</strong>.</p>
<p>But, <em>does it make a difference</em>? Well, <strong>yes and no</strong>. Let me explain:</p>
<pre class=""lang-java prettyprint-override""><code>private String color;
private int maxSpeed;
private String brand;

public Car(String somevar, int somevar2, String somevar3) {
    this.color = somevar;
    this.maxSpeed = somevar2;
    this.brand = somevar3;
}
</code></pre>
<p><strong>Technically</strong> code this way doesn't make difference, it will works fine.</p>
<p>But, imagine that someone - <em>not you</em> - created the <code>Car</code> class, and you will use it:</p>
<p><a href=""https://i.sstatic.net/6fmzf.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/6fmzf.png"" alt=""weird IDE suggestions"" /></a></p>
<p>Reading the IDE suggestions, <strong>can you understood what each parameter means</strong>? Probably no.</p>
<p>So, you don't need to use the same name of the fields in the parameters, <strong>but it will make your code be more readable and understandable</strong>.</p>
",,2023-09-20 20:17:08
77151419,2,77151285,,2,,496854.0,,"<p>You can do it in <code>MediaBrowserCompat.ConnectionCallback()</code>. You most likely have a media browser service set up for your Android Auto implementation. It has an <code>onConnected()</code> method specifically for this purpose, and you can use it to process any logic whenever your app initiates that connection</p>
",,2023-09-21 14:56:49
77170345,2,77160538,,1,,1429285.0,,"<p>Use UriBuilder instead as various implementation treats this differently. We had very same problem in the past too</p>
<pre><code>import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.UriBuilder;

public class RestClientServiceImpl {
  public static void main(String[] args) {
    String url = &quot;https://foo.bar/test/api/users?q=key:value&quot;;
    UriBuilder uri = UriBuilder.fromUri(url);
    ClientBuilder builder = ClientBuilder.newBuilder();
    Client client = builder.build();

    System.out.println(String.format(&quot;Before doing WebTarget %s &quot;, url));
    WebTarget target = client.target(uri.build());
    System.out.println(String.format(&quot;After doing WebTarget  %s &quot;, target.getUri()));
  }
}
</code></pre>
",,2023-09-25 06:37:50
77174040,2,77153605,,1,,4126893.0,,"<p>Nesting variable expressions  like this: <code>${... ${...} ...}</code> is a syntax error.  Once you've started a variable expression, there's no need to surround additional variables with <code>${...}</code> expressions.</p>
<p>Here is an example of a working table:</p>
<pre><code>&lt;tbody th:each=&quot;map : ${InsDashboardData}&quot;&gt;
  &lt;tr th:each=&quot;entry : ${map}&quot;
      th:with=&quot;pieces=${#strings.arraySplit(entry.key, '@@@')}, programName=${pieces[0]}, intakeCapacity=${pieces[1]}, finalAdmission=${entry.value}&quot;&gt;
    &lt;td th:text=&quot;${programName}&quot; /&gt;
    &lt;td th:text=&quot;${intakeCapacity}&quot; /&gt;
    &lt;td th:text=&quot;${finalAdmission}&quot; /&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
</code></pre>
",,2023-09-25 15:39:55
77177571,2,76059598,,0,,509301.0,,"<p>I have experienced the same issue until I have marked all spark related dependencies as <code>Provided</code> and redefined the <code>run</code> task as follows</p>
<pre><code>val scala2Version = &quot;2.12.18&quot;

lazy val root = project
  .in(file(&quot;.&quot;))
  .settings(
    name := &quot;hello-scala&quot;,
    version := &quot;0.1.0-SNAPSHOT&quot;,
    scalaVersion := scala2Version,
    libraryDependencies ++= Seq(
      &quot;org.apache.spark&quot; %% &quot;spark-sql&quot; % &quot;3.4.0&quot; % Provided,
      &quot;io.delta&quot; %% &quot;delta-core&quot; % &quot;2.4.0&quot; % Provided,
      &quot;org.scalameta&quot; %% &quot;munit&quot; % &quot;0.7.29&quot; % Test
    )
  )

// include the 'provided' Spark dependency on the classpath for  sbt run
Compile / run := Defaults
  .runTask(
    Compile / fullClasspath,
    Compile / run / mainClass,
    Compile / run / runner
  )
  .evaluated
</code></pre>
<p>Try these changes in your <code>.sbt</code> file and let me know if it fixes the problem. This setup</p>
<ul>
<li>should not include any <code>spark</code> dependencies in the uber jar when you want to build and submit to an existing spark</li>
<li>but will add all <code>Provided</code> dependencies to the classpath when you run it with <code>sbt run</code></li>
</ul>
<p>I found the idea here <a href=""https://xebia.com/blog/using-scala-3-with-spark/"" rel=""nofollow noreferrer"">https://xebia.com/blog/using-scala-3-with-spark/</a></p>
",,2023-09-26 06:47:15
77208184,2,77207889,,0,,16637863.0,,"<p>You can use <code>Themes</code>. Themes are used to style every view of the app at once.</p>
<p>Create a <code>themes.xml</code> file inside your <code>/res/values</code> folder, if it doesn't exist already.</p>
<p>Inside it define your theme and define the styling properties you want to apply to all views.</p>
<pre><code>&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;
    &lt;style name=&quot;Theme.Example&quot; 
        parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;
        &lt;item name=&quot;android:textColor&quot;&gt;#ff0000&lt;/item&gt;
        &lt;item name=&quot;textAllCaps&quot;&gt;true&lt;/item&gt;
    &lt;/style&gt;
&lt;/resources&gt;
</code></pre>
<p>Apply this theme to your complete app by defining in <code>AndroidManifest.xml</code> file inside <code>application</code> tag.</p>
<pre><code>&lt;application
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:theme=&quot;@style/Theme.Example&quot;&gt;
</code></pre>
<p>Sample Output:</p>
<p><a href=""https://i.sstatic.net/tFvXe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/tFvXe.png"" alt=""Default theme sample output"" /></a></p>
",,2023-09-30 19:30:55
77211804,2,77149675,,-1,,19728087.0,,"<p>The purpose of the <code>MediaButtonReceiver</code> in the context of your application depends on the Android API versions you are targeting. Since you mentioned that you only support Android API versions 21 &amp; above, the <code>MediaButtonReceiver</code> may not have a purpose for your specific use case.</p>
<p>In API versions 21 &amp; above, media button events are typically handled by the media session. The media session is responsible for managing media playback &amp; handling media button events. The media session can be set up &amp; controlled using the <code>MediaSessionCompat</code> class from the Android Support Library.</p>
<p>The <code>MediaButtonReceiver</code> is primarily used as a helper for handling media button events on API versions prior to 21. It is designed to receive the <code>android.intent.action.MEDIA_BUTTON</code> broadcast and deliver it to the appropriate media session or media session callback. By including the <code>MediaButtonReceiver</code> in your manifest file, you ensure that media button events are properly routed to your app on older Android versions.</p>
<p>Since you only support API versions 21 &amp; above, the media session should be sufficient for handling media button events in your application. You can register a <code>MediaSessionCompat.Callback</code> to receive media button events &amp; handle them accordingly.</p>
<p>Here's an example of how you can set up a media session &amp; handle media button events:</p>
<pre class=""lang-java prettyprint-override""><code>// Create a MediaSessionCompat instance
MediaSessionCompat mediaSession = new MediaSessionCompat(context, &quot;YourMediaSessionTag&quot;);

// Set a MediaSessionCompat.Callback to handle media button events
mediaSession.setCallback(new MediaSessionCompat.Callback() {
    @Override
    public boolean onMediaButtonEvent(Intent mediaButtonIntent) {
        // Handle media button events here
        KeyEvent event = mediaButtonIntent.getParcelableExtra(Intent.EXTRA_KEY_EVENT);
        if (event != null &amp;&amp; event.getAction() == KeyEvent.ACTION_DOWN) {
            // Handle the media button press
            if (event.getKeyCode() == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) {
                // Handle play/pause button
            } else if (event.getKeyCode() == KeyEvent.KEYCODE_MEDIA_NEXT) {
                // Handle next button
            } else if (event.getKeyCode() == KeyEvent.KEYCODE_MEDIA_PREVIOUS) {
                // Handle previous button
            }
        }
        return super.onMediaButtonEvent(mediaButtonIntent);
    }
});

// Start the media session
mediaSession.setActive(true);
</code></pre>
<p>By implementing the <code>onMediaButtonEvent</code> method in the <code>MediaSessionCompat.Callback</code>, you can handle different media button events such as play/pause, next, &amp; previous. This approach allows you to handle media button events directly within the media session without the need for the <code>MediaButtonReceiver</code>.</p>
",,2023-10-01 18:34:02
77222740,2,77221938,,0,,143475.0,,"<p>I don't think this is reasonably expected from Karate, it depends a lot on your environment and how you can set up the previous and current versions. Maybe a data-driven test where you loop over all versions is the way to go.</p>
<p>Consider this not directly supported by Karate, but I know teams that have written some routines over Karate to get this to work. We welcome contributions to Karate, it is open source.</p>
<p>Personally, I consider the returns you get from just testing schemas (which is what you seem to be doing) not really worth it: <a href=""https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/"" rel=""nofollow noreferrer"">https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/</a></p>
",,2023-10-03 13:32:48
77240203,2,77240169,,3,,869736.0,,"<p>A <code>TreeMap</code> can <em>only</em> be sorted based on its keys, not on its entries.  You are trying to use a <code>Comparator&lt;Map.Entry&lt;County, Pair&lt;Integer, Integer&gt;&gt;&gt;</code>, but this is not how <code>TreeMap</code> works.  (It would, on the other hand, accept a <code>Comparator&lt;Country&gt;</code>.)</p>
<p>If you want to sort entries based on both the key and the value, you can't do that built into the map; you must do it separately on the <code>entrySet</code> of a map.</p>
",,2023-10-05 19:56:11
77258849,2,77237022,,0,,2418642.0,,"<p>AAPT2 expects a method name for the <code>android:onClick</code> attribute, and will generate keep rules based on that assumption.</p>
<p>See <a href=""https://issuetracker.google.com/296914102"" rel=""nofollow noreferrer"">https://issuetracker.google.com/296914102</a>.</p>
",,2023-10-09 12:29:06
77278508,2,77278070,,3,,139985.0,,"<blockquote>
<p>In which situation is <code>HashMap::keySet()</code> ordered non-deterministically?</p>
</blockquote>
<p>In short ... when any of the preconditions 1, 2 or 3 (below!) are not true.</p>
<hr />
<p>The javadoc says what it says.  The <code>HashMap</code> implementation does not <strong>guarantee</strong> any particular order for the key set.</p>
<p>The fact that the javadoc does not guarantee an order does NOT mean that the order cannot be predicted in some circumstances.</p>
<p>As your observations bear out!</p>
<p>In practice the order of the keys in a <code>HashMap</code> will be <em>deterministic</em> if all of the following are true:</p>
<ol>
<li>The <code>HashMap</code> implementation does not change<sup>1</sup>.</li>
<li>The key classes <code>equals</code> and <code>hashCode</code> methods follow the relevant invariants specified in the <code>Object</code> javadocs.  (And in some cases, the <code>compareTo</code> method may be involved as well.)</li>
<li>The key classes <code>hashCode</code> is predictable based on a key's value.</li>
</ol>
<p>If in addition:</p>
<ol start=""4"">
<li>The map is created with the same initial capacity and load factor.</li>
<li>The keys' insertion (and deletion) order is the same.</li>
</ol>
<p>... you will get the same key set order repeatably.</p>
<p>Indeed, if all of the above are true AND you have complete information / knowledge about the <code>HashMap</code> implementation and so on, then you could<sup>2</sup> actually <em>a priori predict</em> the key order with 100% accuracy.</p>
<p>Note that 2 and 3 are satisfied for <code>Integer</code> and <code>String</code>.  Indeed the javadocs for both classes specify the precise values returned by <code>hashCode()</code>.  That is why you are seeing the same key order repeatably for those key types in your experiments.</p>
<p>Note: you probably shouldn't make use of these properties in an application, since the javadocs don't actually guarantee them.</p>
<hr />
<p><sup>1 - Or more precisely <em>while</em> it does not change.  In fact, the implementations of <code>HashMap</code> have changed between different Java versions.  As a consequence the key order can be different if you run your tests on platforms with different versions of Java.  It is also conceivable that a future implementation of <code>HashMap</code> could be made <em>deliberately</em> non-deterministic ... though I can't imagine why they would do this.<br>
2. The process would be very tedious and time consuming to do by hand, and I'm not going to explain it.  But <a href=""https://stackoverflow.com/questions/47357126"">Why does a HashMap sometimes print in natural order</a> may help you understand what you would need to do.</sup></p>
",,2023-10-12 07:26:57
77288056,2,77256809,,4,,19372791.0,,"<p>Have you used the <a href=""https://developer.android.com/reference/android/window/SplashScreen"" rel=""nofollow noreferrer"">SplashScreen API</a> in your code? If you have used this API, in the <strong>AndroidManifest.xml</strong> file, when the theme of the starting activity is set at position <strong>2</strong>, the ActionBar will be displayed. However, according to the <a href=""https://developer.android.com/develop/ui/views/launch/splash-screen/migrate#:%7E:text=In%20the%20manifest%2C%20replace%20the%20theme%20of%20the%20starting%20activity%20to%20the%20theme%20you%20create%20in%20the%20previous%20step."" rel=""nofollow noreferrer"">official guide</a>, both approaches are expected to have the same effect. It's puzzling that placing it at <strong>2</strong> displays the ActionBar while <strong>1</strong> does not.<a href=""https://i.sstatic.net/92q7f.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/92q7f.png"" alt=""enter image description here"" /></a></p>
",,2023-10-13 13:15:03
77291978,2,77291948,,1,,22721567.0,,"<p>This is default behavior when your make use of self signed certificate in server machine.</p>
<p><em>&quot;I want to avoid adding the .p12 certificate to the truststore.&quot;</em> this is exact same reason why server certificates are added to the truststore as a client.</p>
<p>Think about it ideally request to server should only and only come from legitimate clients (in your case spring app is client to redis server). adding certificate to truststore will make sure that only trusted clients are authorized to make the request.</p>
<p>So to answer your question adding certs to truststore is a common/well known practice done in web world.</p>
<p>Hope this helps. Thanks.</p>
",,2023-10-14 07:29:20
77311140,2,77311084,,0,,12013185.0,,"<p>If you want to trigger socket connectionevery time the app comes to the foreground, you should consider placing it in the <code>onResume()</code> method. Based on the android app lifecycle that should work.</p>
",,2023-10-17 17:39:49
77338052,2,77338035,,2,,22623172.0,,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",,2023-10-21 22:49:54
77338657,2,77308878,,0,,22470734.0,,"<p>I am making a few assumptions in answering this question, the APIs that are deployed in Azure are the same Mulesoft APIs and your deployment strategy has moved to the private cloud using Mule runtime? And by this, you are achieving Active and DR on a hybrid setup for High Availability (HA)?</p>
<ul>
<li><p>In that case, ideally, All you need is a load balancer (preferably a
Dynamic DNS) that can route between your active and DR. This way as a
consumer (you as a spring boot developer) need not switch between
URLs in case of system failures and the LB will handle it</p>
</li>
<li><p>If the above is not feasible, or if your Azure APIs are getting migrated and the plan is to use Mule as a fallback, then you have to handle this in your code.</p>
</li>
</ul>
<p>Hope this helps,</p>
",,2023-10-22 04:34:45
77377694,2,77374548,,0,,54734.0,,"<blockquote>
<p>In a REST URL what does the meaning for : stands for?</p>
</blockquote>
<p>Short version: whatever that specific URI designer wants it to stand for.</p>
<hr />
<p>Longer version: the production rules for path segments in URI are documented at RFC-3986, Appendix A.  The bit we care about in this context is <code>path-abempty</code></p>
<pre><code>path-abempty  = *( &quot;/&quot; segment )
segment       = *pchar
pchar         = unreserved / pct-encoded / sub-delims / &quot;:&quot; / &quot;@&quot;
</code></pre>
<p>So as far as general purpose components (browsers, caches, spiders...) colon is just another letter - it doesn't mean anything more or less than the letter &quot;e&quot; does.</p>
<p>As it happens, the same is true of comma (&quot;,&quot;), which is a sub-delim.</p>
<p>Now, back in the day, Tim Berners-Lee shared an idea he called Matrix URIs.</p>
<blockquote>
<p>Note: relative Matrix URLs are notgenerally implemented so this is just a theoretical discussion. -- TBL</p>
</blockquote>
<p>The sample provided looked like:</p>
<pre><code>//moremaps.com/map/color;lat=50;long=20;scale=32000
</code></pre>
<p>With the idea that the key value pairs here represent values in a &quot;sparse matrix&quot; of possibilities.</p>
<p>Part of the legacy of matrix URLs is that we have <a href=""https://datatracker.ietf.org/doc/html/rfc6570"" rel=""nofollow noreferrer"">URI Templates</a> using <a href=""https://datatracker.ietf.org/doc/html/rfc6570#section-3.2.7"" rel=""nofollow noreferrer"">Path Style Parameter Expansion</a> -- which is to say that we have a general purpose way of describing a range of identifiers that include key value pairs like</p>
<pre><code>/map/color{;keys*} 
</code></pre>
<p>Which would produce the matrix sample if expanded with a suitable map of values.</p>
<p>For your examples, you would get almost the same result with a slightly different spelling</p>
<pre><code>/fruit{;list*}/price
</code></pre>
<p>which would produce your first example if expanded with [banana], and your second example with [banana, mango], <em>except replacing your colon with a semi-colon.</em></p>
<p>Note that this doesn't tell us anything about <em>meaning</em>; it's a purely mechanical way to expand/extract information in resource identifiers (provided you are willing to abide the spelling constraints).</p>
",,2023-10-28 01:17:18
77390571,2,77381227,,1,,4690866.0,,"<blockquote>
<p>unable to find valid certification path to requested target</p>
</blockquote>
<p>The server's certificate is not trusted. You should get a CA to issue a certificate for the server. If it is already a valid cert, make sure to provide the &quot;certificate chain&quot; when configuring the server, not just the bare server certificate.</p>
<p>If you didn't intend to use a typical &quot;browser-trusted CA,&quot; you can sign the certificate with your own CA and use that CA's certificate as a trust source:</p>
<pre class=""lang-java prettyprint-override""><code>ChannelCredentials certs = TlsChannelCredentials.newBuilder()
    // Could also be a server's self-signed cert
    .trustManager(new File(&quot;path/to/ca.pem&quot;))
    .build();
NettyChannelBuilder.forTarget(&quot;host:443&quot;, certs)
    .keepAliveTime(30, TimeUnit.SECONDS)
    .keepAliveTimeout(5, TimeUnit.SECONDS)
    .build();
</code></pre>
<p>There are many sites and scripts that describe how to make your own CA and sign server certificates, if that is what you end up wanting. For reference, <a href=""https://github.com/grpc/grpc-java/blob/master/testing/src/main/resources/certs/README"" rel=""nofollow noreferrer"">this is the process for gRPC's tests</a>.</p>
",,2023-10-30 17:04:38
77404792,2,66227375,,6,,11150947.0,,"<p>Make sure you put the <code>&lt;service&gt;</code> inside <code>&lt;application&gt;</code></p>
<p>See more here <a href=""https://developer.android.com/guide/topics/manifest/service-element"" rel=""noreferrer"">https://developer.android.com/guide/topics/manifest/service-element</a></p>
",,2023-11-01 18:19:30
77464305,2,77464304,,1,,3069565.0,,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",,2023-11-11 07:58:09
77534449,2,77534315,,0,,1631193.0,,"<p>They're used to define attributes.  They specify the file to look for the attribute definitions in.  <a href=""http://schemas.android.com/apk/res/android"" rel=""nofollow noreferrer"">http://schemas.android.com/apk/res/android</a> is the Android SDK's built in definitions.  &quot;http://schemas.android.com/apk/res-auto&quot; is the list of attribute defined by your application (including libraries you depend on). You can define any others you want, but typically an app only uses these two.</p>
<p>The namespace is used to qualify what attribute you're using.  Let's say you have namespace A and B.  Both define an attribute &quot;foo&quot;.  If you were to specify foo without a namespace, it would be impossible to know what foo to use.  Using namespaces avoids that problem.</p>
",,2023-11-23 05:05:19
77535280,2,77534843,,-1,,5730279.0,,"<p>You could use <a href=""https://docs.oracle.com/javase/6/docs/api/java/net/URI.html"" rel=""nofollow noreferrer""><code>java.net.URI</code></a> which has getters for various URI-components.</p>
<pre class=""lang-java prettyprint-override""><code>var uri = new URI(&quot;https://123/v1/a/b/&quot;);

String authority = uri.getAuthority(); // returns 123 
System.out.println(authority);

String path = uri.getPath(); // returns /v1/a/b/
String pathTrimmed = path.replaceAll(&quot;^/&quot;, &quot;&quot;).replaceAll(&quot;/$&quot;, &quot;&quot;);  // trim leading and trailing slashes: v1/a/b
String[] segments = pathTrimmed.split(&quot;/&quot;);

if (segments.length &lt; 1) return;
System.out.println(segments[0].replaceAll(&quot;^v&quot;, &quot;&quot;));  // version truncated to number: 1
for (int i=1; i &lt; segments.length; i++) {
  System.out.println(segments[i]);  // remainig segments: a, b, ..
}
</code></pre>
<p>Run a <a href=""https://ideone.com/eeJ9ny"" rel=""nofollow noreferrer"">demo of this on IDEone</a>.</p>
<p>See also: <a href=""https://stackoverflow.com/questions/4050087/how-to-obtain-the-last-path-segment-of-a-uri"">How to obtain the last path segment of a URI</a></p>
",,2023-11-23 08:17:05
77537080,2,77536837,,1,,5717198.0,,"<p>It's a bad practice to have a space in your request URI. Check this <a href=""https://stackoverflow.com/questions/5442658/spaces-in-urls"">answer</a> on why a URL should not contain a literal space. I think the issue in your case is that the space character is being encoded twice. A space character gets URL encoded to <code>%20</code> and a <code>%</code> character is encoded to <code>%25</code>. Thus your URL gets encoded twice to <code>%2520</code>. I suspect that <code>builder.toUriString()</code> maybe encoding it once followed by another encoding in <code>restTemplate.exchange()</code>. I'm not sure but it is quite likely that one of the implementations changed in Java 17 and that is why it is a terrible idea and design to have a space in your URI. I would rather have it as a query parameter that ensures the safe encoding of most characters.</p>
<p><code>http://localhost:80/v1/accounts/{accountId}?name=QA%20Analyst</code></p>
<p>A good practice for RESTful API design is that path parameters are used to identify a specific resource, while query parameters are used to sort/filter those resources. In your case, it appears that you are doing a filtering/search by name.</p>
",,2023-11-23 12:59:24
77567231,2,77488140,,1,,23002832.0,,"<p>There's a difference between the sample app and your code.<br />
The sample app comes with a pre-configured list of trusted roots (EU LOTL).<br />
Your code comes with an empty <code>CommonTrustedCertificateSource</code> (i.e., no certificate is trusted)</p>
<p>See the <a href=""https://dss-demo.nowina.lu/doc/dss-documentation.html#_frequently_asked_questions_and_implementation_issues"" rel=""nofollow noreferrer"">DSS FAQ</a></p>
<blockquote>
<p>When validating a signature I receive INDETERMINATE/NO_CERTIFICATE_CHAIN_FOUND indication</p>
</blockquote>
<blockquote>
<p>The result means the validator was not able to reach a trust anchor when validating the certificate chain of the signature. More likely the issue is caused by the fact you have not configured a trusted certificate source within the used CertificateVerifier. To do it, you need to add trust anchors to the instance of CertificateVerifier you use within DocumentValidator:</p>
</blockquote>
<p>So you need to add some certificates to the <code>CommonTrustedCertificateSource</code>. If you're only verifying signatures created by yourself, add your CA root/your signing certificate to the trusted source. If you're verifying third-party signatures, the solution is more complex. For example, you could extract all certificated from a PDF and add them to the trusted list before validation</p>
",,2023-11-28 21:26:30
77588916,2,77550642,,1,,7805359.0,,"<p>If you want to store password in Room, you need to run hash function and then store hash value of your password. Hash is fixed size, no matter how long is your password.</p>
<p>To compare input password with stored in DB you hash your input and compare it with hash stored in database. Because If you apply hash function to the same string, you'll get the same result. If, at least, 1 symbol is wrong - resulting hash will be completely different.</p>
<p>You can check <a href=""https://codersee.com/kotlin-pbkdf2-secure-password-hashing/"" rel=""nofollow noreferrer"">this one</a> and use PBKDF2 algorithm. More details on how to choose hash function and what not to use is <a href=""https://www.baeldung.com/java-password-hashing"" rel=""nofollow noreferrer"">here</a></p>
",,2023-12-02 02:08:59
77625340,2,77619310,,1,,9756642.0,,"<p>If you want to specifically use Java SSLContext, you can use a custom TrustManager that directly trusts the specified certificate.</p>
<pre><code>public static TrustManager[] getTrustManagers(String certificateFilePath) throws Exception {
    // Load the certificate
    CertificateFactory certificateFactory = CertificateFactory.getInstance(&quot;X.509&quot;);
    TrustManager[] trustManagers;
    
    try (InputStream certificateInputStream = new FileInputStream(certificateFilePath)) {
        X509Certificate certificate = (X509Certificate) certificateFactory.generateCertificate(certificateInputStream);

        // Create a TrustManager that trusts only the specified certificate
        trustManagers = new TrustManager[]{
                new X509TrustManager() {
                    @Override
                    public void checkClientTrusted(X509Certificate[] chain, String authType) {
                        // Allow any client certificates
                    }

                    @Override
                    public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
                        // Check if the server certificate matches the specified certificate
                        if (!chain[0].equals(certificate)) {
                            throw new CertificateException(&quot;Server certificate not trusted&quot;);
                        }
                    }

                    @Override
                    public X509Certificate[] getAcceptedIssuers() {
                        return new X509Certificate[0];
                    }
                }
        };
        return trustManagers;
    }
}
</code></pre>
<p>Then use the created TrustManager to create the SSLContext,</p>
<pre><code>        String certificateFilePath = &quot;path/to/your/certificate.crt&quot;;
        TrustManager[] trustManagers = getTrustManagers(certificateFilePath);
        SSLContext sslContext = SSLContext.getInstance(&quot;TLS&quot;);
        sslContext.init(null, trustManagers, null);
</code></pre>
",,2023-12-08 08:42:18
77685034,2,77679934,,0,,5841551.0,,"<p>The issue is solved now. The issue here is the <code>.uri(URI uri)</code> part. If you have a base URI applied as here then the <code>.uri(URI uri)</code> will not be applied to the base URI but takes its place instead.</p>
<p>So in order to fix it you must use the overloaded <code>.uri(String uri)</code> method. You can do it easily by URI's <code>toString()</code> method:</p>
<pre><code>// When, Then
webTestClient.post().uri(uri.toString())...
</code></pre>
<p>See also the Spring Java Doc: <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/reactive/server/WebTestClient.UriSpec.html#uri(java.net.URI)"" rel=""nofollow noreferrer"">https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/reactive/server/WebTestClient.UriSpec.html#uri(java.net.URI)</a></p>
",,2023-12-19 12:00:08
77694146,2,77694070,,3,,869736.0,,"<blockquote>
<p>is there maybe a way to redo these that utilizes the benefits of it actually being a Tree and not just like an ordered array</p>
</blockquote>
<p>No.  The <code>TreeSet</code> API only allows you to do efficient lookups with a <code>Person</code> object, not just the property being compared.  You could construct a &quot;fake&quot; <code>Person</code> object to do the job, and you could <em>maybe</em> force it to do <code>getPerson</code> by calling <code>ceiling</code> or the like to get out an element, but that's certainly not how <code>TreeSet</code> is designed to be used.</p>
<blockquote>
<p>since I'm trying to learn/understand more about Sets and TreeSet</p>
</blockquote>
<p>Part of learning about Sets and TreeSet is learning about the use cases they are not designed for.  They are not designed for this.</p>
",,2023-12-20 19:59:41
77699058,2,77693148,,2,,436560.0,,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",,2023-12-21 15:46:43
77701916,2,77701766,,0,,1631193.0,,"<p>You can't add a custom attribute to the android namespace.  That namespace is pre-defined and consists of only the built in Android attributes.  Adding a custom attribute adds it to the application namespace, by convention that's the app:XXX attributes (although that's a convention, you can call it anything you want).  Please note that custom attributes must be defined in attrs.xml, you can't just make one up in the layout xml.</p>
",,2023-12-22 05:56:09
77730184,2,77730135,,1,,16034206.0,,"<p>That is because by modifying the value of the Node, you are also changing the hashcode (thanks to your hashcode override). This is generally not the case and should not be the case as you do not want the hashcode to be variable. It should be constant and unchanging.</p>
<p>The underlying code of HashSet uses a HashMap, and the internal methods that <code>contains()</code> uses will use the hashcode of the object to determine a bucket to store your node in. Thus, when your hashcode is set to the value 1, and you call <code>add()</code>, the node n1 is stored for example at bucket 1. When you changed the value to 5, the hashcode is now 5 and calling <code>s.contains(n1)</code> will try to check for your node in bucket 5 which is empty (null).</p>
<p>A correct way to proceed will be to delete your implemented hashcode override and let the default implementation do its job. See also:</p>
<pre><code>import java.util.*;

public class Main {
    public static void main(String[] args)
    {
        Set&lt;Node&gt; s = new HashSet&lt;&gt;();
        Node n1 = new Node(1);
        System.out.println(n1);
        s.add(n1);
        /*as i know, when we add a object to the set, we actually add a refference to the origin                             memory area (the one that n1 points to) to the set*/

        if(s.contains(n1))
        {
            System.out.println(&quot;YES&quot;);
        }

        for(Node i : s)
        {
            i.setVal(5);  //i expect n1 to change too and it does
        }

        for(Node i : s)
        {
            System.out.println(i.getVal());
        }
        System.out.println(n1.getVal());   //n1 changes

        System.out.println(n1);
        if(s.contains(n1))
        {
            System.out.println(&quot;Still here&quot;);
            //This is where i don't understand why this does not print ?
        }
        System.out.println();
    }
}

class Node
{
    private int val;

    public Node(int val)
    {
        this.val = val;
    }

    public int getVal()
    {
        return this.val;
    }

    public void setVal(int newVal)
    {
        this.val = newVal;
    }

    @Override
    public boolean equals(Object obj) {
        System.out.println(&quot;Inside equal of &quot; + this.val);
        //i expect it will print out when i use set.contains()
        if(this.hashCode() == ((Node)obj).hashCode())
        {
            return true;
        }
        return false;
    }
}
</code></pre>
<p>Output:</p>
<p>Without Hashcode override</p>
<pre><code>Node@4783da3f
YES
5
5
Node@4783da3f
Still here
</code></pre>
<p>With Hashcode override</p>
<pre><code>Node@1
YES
5
5
Node@5
</code></pre>
",,2023-12-29 03:59:14
77763064,2,77738225,,1,,8340997.0,,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",,2024-01-05 07:28:11
77777558,2,77727525,,0,,2894324.0,,"<p>You need to create <code>AnalyticsListener</code>. You'll receive an <code>onTracksChanged</code> event, it has <code>Tracks</code> object with available tracks. Each track has a format and the format contains information about codecs.</p>
<p><a href=""https://developer.android.com/reference/androidx/media3/common/Format#codecs()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/media3/common/Format#codecs()</a></p>
",,2024-01-08 07:33:35
78820176,2,77538645,,0,,14046949.0,,"<p>SXSSF library is mainly for writing the large (xlsx) files with 2^20 (1,048,576) rows per sheet, but not for reading the data from excel file. To read the data from excel, Apache poi provides SAX parsing based event handling. Please refer to this: <a href=""https://poi.apache.org/components/spreadsheet/how-to.html#xssf_sax_api"" rel=""nofollow noreferrer"">https://poi.apache.org/components/spreadsheet/how-to.html#xssf_sax_api</a></p>
",,2024-08-01 09:30:55
